{"id":"2407.03914","title":"Tackling Erosion in Variant-Rich Software Systems: Challenges and\n  Approaches","authors":"Johannes St\\\"umpfle, Nasser Jazdi, Michael Weyrich","authorsParsed":[["St√ºmpfle","Johannes",""],["Jazdi","Nasser",""],["Weyrich","Michael",""]],"versions":[{"version":"v1","created":"Thu, 4 Jul 2024 13:13:45 GMT"}],"updateDate":"2024-07-08","timestamp":1720098825000,"abstract":"  Software product lines (SPL) have emerged as a pivotal paradigm in software\nengineering, enabling the efficient development of variant-rich software\nsystems. Consistently updating these systems, often through over-the-air\nupdates, enables the continuous integration of new features and bug fixes,\nensuring the system remains up to date throughout its entire lifecycle.\nHowever, evolving such complex systems is an error prone task, leading to a\nphenomenon known as erosion. This phenomenon significantly impacts the\nefficiency and longevity of software systems, presenting a formidable challenge\nfor manufacturers of variant-rich software systems, such as in the automotive\ndomain. While existing studies concentrate on the evolutionary planning of\nvariant-rich software systems, there is a noticeable lack of research\naddressing the problem of erosion. In this paper, we conduct an in-depth\nexploration of the erosion phenomena within variant-rich software systems. We\nbegin by highlighting the significance of controlling erosion in extensive\nvariant-rich software systems. Subsequently, we address the current challenges\nregarding tackling erosion, including issues such as the lack of a consensus on\nunderstanding and defining erosion, as well as the early detection and\nelimination. Finally, we outline a first approach aimed at tackling erosion in\nvariant-rich software systems.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"rbD7LJLj1DfEyd5CJsOIimKyYbAOo3ys9YdbxvYvns8","pdfSize":"1079185"}
