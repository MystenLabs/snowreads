{"id":"2407.01838","title":"Introducing SWIRL: An Intermediate Representation Language for\n  Scientific Workflows","authors":"Iacopo Colonnelli, Doriana Medi\\'c, Alberto Mulone, Viviana Bono, Luca\n  Padovani, Marco Aldinucci","authorsParsed":[["Colonnelli","Iacopo",""],["MediÄ‡","Doriana",""],["Mulone","Alberto",""],["Bono","Viviana",""],["Padovani","Luca",""],["Aldinucci","Marco",""]],"versions":[{"version":"v1","created":"Mon, 1 Jul 2024 22:25:01 GMT"}],"updateDate":"2024-09-12","timestamp":1719872701000,"abstract":"  In the ever-evolving landscape of scientific computing, properly supporting\nthe modularity and complexity of modern scientific applications requires new\napproaches to workflow execution, like seamless interoperability between\ndifferent workflow systems, distributed-by-design workflow models, and\nautomatic optimisation of data movements. In order to address this need, this\narticle introduces SWIRL, an intermediate representation language for\nscientific workflows. In contrast with other product-agnostic workflow\nlanguages, SWIRL is not designed for human interaction but to serve as a\nlow-level compilation target for distributed workflow execution plans. The main\nadvantages of SWIRL semantics are low-level primitives based on the\nsend/receive programming model and a formal framework ensuring the consistency\nof the semantics and the specification of translating workflow models\nrepresented by Directed Acyclic Graphs (DAGs) into SWIRL workflow descriptions.\nAdditionally, SWIRL offers rewriting rules designed to optimise execution\ntraces, accompanied by corresponding equivalence. An open-source SWIRL compiler\ntoolchain has been developed using the ANTLR Python3 bindings.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"Q4rRydoeJDxQMTovPsV8DV2eFH4ikTAeDMw72JaU_mU","pdfSize":"488914","objectId":"0x948865062758df10ed9ee4b50a42ab0783b9577d76054ab97625c715cae046a2","registeredEpoch":"3","certifiedEpoch":"3","startEpoch":"3","endEpoch":"203"}
