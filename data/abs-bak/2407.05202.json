{"id":"2407.05202","title":"Harnessing the Power of LLMs: Automating Unit Test Generation for\n  High-Performance Computing","authors":"Rabimba Karanjai, Aftab Hussain, Md Rafiqul Islam Rabin, Lei Xu,\n  Weidong Shi, Mohammad Amin Alipour","authorsParsed":[["Karanjai","Rabimba",""],["Hussain","Aftab",""],["Rabin","Md Rafiqul Islam",""],["Xu","Lei",""],["Shi","Weidong",""],["Alipour","Mohammad Amin",""]],"versions":[{"version":"v1","created":"Sat, 6 Jul 2024 22:45:55 GMT"}],"updateDate":"2024-07-09","timestamp":1720305955000,"abstract":"  Unit testing is crucial in software engineering for ensuring quality.\nHowever, it's not widely used in parallel and high-performance computing\nsoftware, particularly scientific applications, due to their smaller, diverse\nuser base and complex logic. These factors make unit testing challenging and\nexpensive, as it requires specialized knowledge and existing automated tools\nare often ineffective.\n  To address this, we propose an automated method for generating unit tests for\nsuch software, considering their unique features like complex logic and\nparallel processing. Recently, large language models (LLMs) have shown promise\nin coding and testing. We explored the capabilities of Davinci\n(text-davinci-002) and ChatGPT (gpt-3.5-turbo) in creating unit tests for C++\nparallel programs. Our results show that LLMs can generate mostly correct and\ncomprehensive unit tests, although they have some limitations, such as\nrepetitive assertions and blank test cases.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"fqTPCUjkn8eS3Xo0LTY8qd8EbPrHVZs5G07wVTVmRVQ","pdfSize":"413210"}
