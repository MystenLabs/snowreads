{"id":"2407.05028","title":"Testing Compositionality","authors":"Gijs van Cuyck, Lars van Arragon, Jan Tretmans","authorsParsed":[["van Cuyck","Gijs",""],["van Arragon","Lars",""],["Tretmans","Jan",""]],"versions":[{"version":"v1","created":"Sat, 6 Jul 2024 09:45:13 GMT"}],"updateDate":"2024-07-09","timestamp":1720259113000,"abstract":"  Compositionality supports the manipulation of large systems by working on\ntheir components. For model-based testing, this means that large systems can be\ntested by modelling and testing their components: passing tests for all\ncomponents implies passing tests for the whole system. In previous work [13],\nwe defined mutual acceptance for specification models and proved that this is a\nsufficient condition for compositionality in model-based testing. In this\npaper, we present an algorithm for verifying mutual acceptance on\nspecifications and a sound and exhaustive model-based test procedure for\nchecking mutual acceptance on black-box implementations, both inspired by the\nidea of environmental conformance [7,8]. The result is that correctness of\nlarge systems can be determined by testing the component implementations for\nconformance to their component specification and for environmental conformance\nto the specification of their environment.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-sa/4.0/","blobId":"LCqOm9lvWyuRl1hugTfik7-N7kI3cHpVbNm8pgdD0lg","pdfSize":"863436"}
