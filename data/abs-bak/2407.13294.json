{"id":"2407.13294","title":"Griffin: Fast Transactional Database Index with Hash and B+-Tree","authors":"Sho Nakazono, Yutaro Bessho, Hideyuki Kawashima, Tatsuhiro Nakamori","authorsParsed":[["Nakazono","Sho",""],["Bessho","Yutaro",""],["Kawashima","Hideyuki",""],["Nakamori","Tatsuhiro",""]],"versions":[{"version":"v1","created":"Thu, 18 Jul 2024 08:49:53 GMT"}],"updateDate":"2024-07-19","timestamp":1721292593000,"abstract":"  Index access is one of the dominant performance factors in transactional\ndatabase systems. Many systems use a B+-tree or one of its variants to handle\npoint and range operations. This access pattern has room for performance\nimprovement. Firstly, point operations can potentially be processed in $O(1)$\nwith a hash table. Secondly, to ensure serializability of transactions, range\noperations incur overhead from phantom avoidance techniques that involve\nadditional processing or synchronization, such as an extra traversal of the\nB+-tree. To address these issues, we propose a hybrid index architecture,\nGriffin. For point operations, Griffin has a hash table that provides access\npaths in $O(1)$ time, along with a B+-tree. For phantom avoidance, Griffin\nemploys a precision locking method, which does not involve additional traversal\nof the B+-tree. Despite its hybrid architecture, Griffin transparently provides\nlinearizable operations and an interface of a single database index. We built a\nGriffin index combining a hash table and BwTree. Compared to a baseline index\nthat is composed of a BwTree only, it achieves up to 3.1x higher throughput in\na point operation dominant workload, and up to 5.4x higher throughput in a\nrange operation dominant workload.\n","subjects":["Computing Research Repository/Databases"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"e1L4yVIr-XEL4aKkaYT8kecjlRsEm80TPXoAq_EosJE","pdfSize":"608933","objectId":"0x39c8ff1ddbdb2195caa3fdbe49acd686cf68b839eb06467d6299fe4c2d10d160","registeredEpoch":"3","certifiedEpoch":"3","startEpoch":"3","endEpoch":"203"}
