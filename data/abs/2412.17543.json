{
  "id": "2412.17543",
  "title": "Speeding up an unsteady flow simulation by adaptive BDDC and Krylov\n  subspace recycling",
  "authors": "Martin Hanek, Jan Pape\\v{z}, Jakub \\v{S}\\'istek",
  "authorsParsed": [
    [
      "Hanek",
      "Martin",
      ""
    ],
    [
      "Papež",
      "Jan",
      ""
    ],
    [
      "Šístek",
      "Jakub",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Mon, 23 Dec 2024 13:05:29 GMT"
    }
  ],
  "updateDate": "2024-12-24",
  "timestamp": 1734959129000,
  "abstract": "  We deal with accelerating the solution of a sequence of large linear systems\nsolved by an iterative Krylov subspace method. The sequence originates from\ntime-stepping within a simulation of an unsteady incompressible flow. We apply\na pressure correction scheme, and we focus on the solution of the Poisson\nproblem for the pressure corrector. Its scalable solution presents the main\ncomputational challenge in many applications. The right-hand side of the\nproblem changes in each time step, while the system matrix is constant and\nsymmetric positive definite. The acceleration techniques are studied on a\nparticular problem of flow around a unit sphere. Our baseline approach is based\non a parallel solution of each problem in the sequence by nonoverlapping domain\ndecomposition method. The interface problem is solved by the preconditioned\nconjugate gradient (PCG) method with the three-level BDDC preconditioner. Three\ntechniques for accelerating the solution are gradually added to the baseline\napproach. First, the stopping criterion for the PCG iterations is studied.\nNext, deflation is used within the conjugate gradient method with several\napproaches to Krylov subspace recycling. Finally, we add the adaptive selection\nof the coarse space within the three-level BDDC method. The paper is rich in\nexperiments with careful measurements of computational times on a parallel\nsupercomputer. The combination of the acceleration techniques eventually leads\nto saving about one half of the computational time.\n",
  "subjects": [
    "Mathematics/Numerical Analysis",
    "Computer Science/Numerical Analysis"
  ],
  "license": "http://creativecommons.org/licenses/by-nc-nd/4.0/",
  "blobId": "fQrOTeA_NhLXkYLguSTv3OLIR5UsAcUONwQxj6zdFZw",
  "pdfSize": "10093612"
}