{"id":"2412.11954","title":"Witty: An Efficient Solver for Computing Minimum-Size Decision Trees","authors":"Luca Pascal Staus, Christian Komusiewicz, Frank Sommer, Manuel Sorge","authorsParsed":[["Staus","Luca Pascal",""],["Komusiewicz","Christian",""],["Sommer","Frank",""],["Sorge","Manuel",""]],"versions":[{"version":"v1","created":"Mon, 16 Dec 2024 16:38:50 GMT"}],"updateDate":"2024-12-17","timestamp":1734367130000,"abstract":"  Decision trees are a classic model for summarizing and classifying data. To\nenhance interpretability and generalization properties, it has been proposed to\nfavor small decision trees. Accordingly, in the minimum-size decision tree\ntraining problem (MSDT), the input is a set of training examples in\n$\\mathbb{R}^d$ with class labels and we aim to find a decision tree that\nclassifies all training examples correctly and has a minimum number of nodes.\nMSDT is NP-hard and therefore presumably not solvable in polynomial time.\nNevertheless, Komusiewicz et al. [ICML '23] developed a promising algorithmic\nparadigm called witness trees which solves MSDT efficiently if the solution\ntree is small. In this work, we test this paradigm empirically. We provide an\nimplementation, augment it with extensive heuristic improvements, and\nscrutinize it on standard benchmark instances. The augmentations achieve a mean\n324-fold (median 84-fold) speedup over the naive implementation. Compared to\nthe state of the art they achieve a mean 32-fold (median 7-fold) speedup over\nthe dynamic programming based MurTree solver [Demirovi\\'c et al., J. Mach.\nLearn. Res. '22] and a mean 61-fold (median 25-fold) speedup over SAT-based\nimplementations [Janota and Morgado, SAT '20]. As a theoretical result we\nobtain an improved worst-case running-time bound for MSDT.\n","subjects":["Computer Science/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"TUqImGvj-i2Z7NrvN3vemM6ZoJRZb1YOdt6Yw5X2j40","pdfSize":"788281"}