{
  "id": "2412.03125",
  "title": "Gradual Guarantee via Step-Indexed Logical Relations in Agda",
  "authors": "Jeremy G. Siek (Indiana University)",
  "authorsParsed": [
    [
      "Siek",
      "Jeremy G.",
      "",
      "Indiana University"
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Wed, 4 Dec 2024 08:43:30 GMT"
    }
  ],
  "updateDate": "2024-12-05",
  "timestamp": 1733301810000,
  "abstract": "  The gradual guarantee is an important litmus test for gradually typed\nlanguages, that is, languages that enable a mixture of static and dynamic\ntyping. The gradual guarantee states that changing the precision of a type\nannotation does not change the behavior of the program, except perhaps to\ntrigger an error if the type annotation is incorrect. Siek et al. (2015) proved\nthat the Gradually Typed Lambda Calculus (GTLC) satisfies the gradual guarantee\nusing a simulation-based proof and mechanized their proof in Isabelle. In the\nfollowing decade, researchers have proved the gradual guarantee for more\nsophisticated calculi, using step-indexed logical relations. However, given the\ncomplexity of that style of proof, there has not yet been a mechanized proof of\nthe gradual guarantee using step-indexed logical relations. This paper reports\non a mechanized proof of the gradual guarantee for the GTLC carried out in the\nAgda proof assistant.\n",
  "subjects": [
    "Computer Science/Programming Languages"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "ELMQ4yhcXDAeI_DLb_9K75ejp1MqYf5mwibWbpjwObs",
  "pdfSize": "282457"
}