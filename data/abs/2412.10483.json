{
  "id": "2412.10483",
  "title": "Enhancing Automated Loop Invariant Generation for Complex Programs with\n  Large Language Models",
  "authors": "Ruibang Liu, Guoqiang Li, Minyu Chen, Ling-I Wu, Jingyu Ke",
  "authorsParsed": [
    [
      "Liu",
      "Ruibang",
      ""
    ],
    [
      "Li",
      "Guoqiang",
      ""
    ],
    [
      "Chen",
      "Minyu",
      ""
    ],
    [
      "Wu",
      "Ling-I",
      ""
    ],
    [
      "Ke",
      "Jingyu",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Fri, 13 Dec 2024 10:36:18 GMT"
    }
  ],
  "updateDate": "2024-12-17",
  "timestamp": 1734086178000,
  "abstract": "  Automated program verification has always been an important component of\nbuilding trustworthy software. While the analysis of real-world programs\nremains a theoretical challenge, the automation of loop invariant analysis has\neffectively resolved the problem. However, real-world programs that often mix\ncomplex data structures and control flows pose challenges to traditional loop\ninvariant generation tools. To enhance the applicability of invariant\ngeneration techniques, we proposed ACInv, an Automated Complex program loop\nInvariant generation tool, which combines static analysis with Large Language\nModels (LLMs) to generate the proper loop invariants. We utilize static\nanalysis to extract the necessary information for each loop and embed it into\nprompts for the LLM to generate invariants for each loop. Subsequently, we\nemploy an LLM-based evaluator to assess the generated invariants, refining them\nby either strengthening, weakening, or rejecting them based on their\ncorrectness, ultimately obtaining enhanced invariants. We conducted experiments\non ACInv, which showed that ACInv outperformed previous tools on data sets with\ndata structures, and maintained similar performance to the state-of-the-art\ntool AutoSpec on numerical programs without data structures. For the total data\nset, ACInv can solve 21% more examples than AutoSpec and can generate reference\ndata structure templates.\n",
  "subjects": [
    "Computer Science/Software Engineering",
    "Computer Science/Artificial Intelligence",
    "Computer Science/Programming Languages"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "v_AHWwvAlM2g77q0cYluPBdVuBfIkONf0wfSshzGheA",
  "pdfSize": "672172"
}