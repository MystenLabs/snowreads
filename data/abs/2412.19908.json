{
  "id": "2412.19908",
  "title": "Comprehensive Verification of Packet Processing",
  "authors": "Shengyi Wang, Mengying Pan and Andrew W. Appel",
  "authorsParsed": [
    [
      "Wang",
      "Shengyi",
      ""
    ],
    [
      "Pan",
      "Mengying",
      ""
    ],
    [
      "Appel",
      "Andrew W.",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Fri, 27 Dec 2024 19:50:23 GMT"
    }
  ],
  "updateDate": "2024-12-31",
  "timestamp": 1735329023000,
  "abstract": "  To prove the functional correctness of a P4 program running in a programmable\nnetwork switch or smart NIC, prior works have focused mainly on verifiers for\nthe \"control block\" (match-action pipeline). But to verify that a switch\nhandles packets according to a desired specification, proving the control block\nis not enough. We demonstrate a new comprehensive framework for formally\nspecifying and proving the additional components of the switch that handle each\npacket: P4 parsers and deparsers, as well as non-P4 components such as\nmulticast engines, packet generators, and resubmission paths. These are\ngenerally triggered by having the P4 program set header or metadata fields,\nwhich prompt other switch components -- fixed-function or configurable -- to\nexecute the corresponding actions. Overall behavior is correct only if the\n\"configurable\" components are, indeed, configured properly; and we show how to\nprove that. We demonstrate our framework by verifying the correctness of\npacket-stream behavior in two classic P4 applications. Our framework is the\nfirst to allow the correctness proof of a P4 program to be composed with the\ncorrectness proof for these other switch components to verify that the switch\nprogramming as a whole accomplishes a specified behavior.\n",
  "subjects": [
    "Computer Science/Programming Languages"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "_VNmxFirWcfMY-ZMzwvfX0p9sKhiFRiHqg--Fq_SP-Y",
  "pdfSize": "779748"
}