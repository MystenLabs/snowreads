{"id":"2407.04706","title":"Minimization of Nonlinear Energies in Python Using FEM and Automatic\n  Differentiation Tools","authors":"Michal B\\'ere\\v{s} and Jan Valdman","authorsParsed":[["Béreš","Michal",""],["Valdman","Jan",""]],"versions":[{"version":"v1","created":"Fri, 3 May 2024 12:51:59 GMT"}],"updateDate":"2024-07-09","timestamp":1714740719000,"abstract":"  This contribution examines the capabilities of the Python ecosystem to solve\nnonlinear energy minimization problems, with a particular focus on\ntransitioning from traditional MATLAB methods to Python's advanced\ncomputational tools, such as automatic differentiation. We demonstrate Python's\nstreamlined approach to minimizing nonlinear energies by analyzing three\nproblem benchmarks - the p-Laplacian, the Ginzburg-Landau model, and the\nNeo-Hookean hyperelasticity. This approach merely requires the provision of the\nenergy functional itself, making it a simple and efficient way to solve this\ncategory of problems. The results show that the implementation is about ten\ntimes faster than the MATLAB implementation for large-scale problems. Our\nfindings highlight Python's efficiency and ease of use in scientific computing,\nestablishing it as a preferable choice for implementing sophisticated\nmathematical models and accelerating the development of numerical simulations.\n","subjects":["Computing Research Repository/Mathematical Software"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"d5_hEUVpBvznvJI42gMrB2BQOydge49sVfJI2dE7aoM","pdfSize":"2810733"}