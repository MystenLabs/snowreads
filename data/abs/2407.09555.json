{"id":"2407.09555","title":"A parallel evolutionary algorithm to optimize dynamic memory managers in\n  embedded systems","authors":"Jos\\'e L. Risco-Mart\\'in, David Atienza, J. Manuel Colmenar and Oscar\n  Garnica","authorsParsed":[["Risco-Martín","José L.",""],["Atienza","David",""],["Colmenar","J. Manuel",""],["Garnica","Oscar",""]],"versions":[{"version":"v1","created":"Fri, 28 Jun 2024 15:47:25 GMT"}],"updateDate":"2024-07-16","timestamp":1719589645000,"abstract":"  For the last thirty years, several Dynamic Memory Managers (DMMs) have been\nproposed. Such DMMs include first fit, best fit, segregated fit and buddy\nsystems. Since the performance, memory usage and energy consumption of each DMM\ndiffers, software engineers often face difficult choices in selecting the most\nsuitable approach for their applications. This issue has special impact in the\nfield of portable consumer embedded systems, that must execute a limited amount\nof multimedia applications (e.g., 3D games, video players and signal processing\nsoftware, etc.), demanding high performance and extensive memory usage at a low\nenergy consumption. Recently, we have developed a novel methodology based on\ngenetic programming to automatically design custom DMMs, optimizing\nperformance, memory usage and energy consumption. However, although this\nprocess is automatic and faster than state-of-the-art optimizations, it demands\nintensive computation, resulting in a time consuming process. Thus, parallel\nprocessing can be very useful to enable to explore more solutions spending the\nsame time, as well as to implement new algorithms. In this paper we present a\nnovel parallel evolutionary algorithm for DMMs optimization in embedded\nsystems, based on the Discrete Event Specification (DEVS) formalism over a\nService Oriented Architecture (SOA) framework. Parallelism significantly\nimproves the performance of the sequential exploration algorithm. On the one\nhand, when the number of generations are the same in both approaches, our\nparallel optimization framework is able to reach a speed-up of 86.40x when\ncompared with other state-of-the-art approaches. On the other, it improves the\nglobal quality (i.e., level of performance, low memory usage and low energy\nconsumption) of the final DMM obtained in a 36.36% with respect to two\nwell-known general-purpose DMMs and two state-of-the-art optimization\nmethodologies.\n","subjects":["Computing Research Repository/Neural and Evolutionary Computing","Computing Research Repository/Operating Systems"],"license":"http://creativecommons.org/licenses/by-sa/4.0/","blobId":"n-tgKQE1tzs4PFiGF-FOGqBR7ayO-X8fKy5bAYLBPyw","pdfSize":"421719"}