{"id":"2407.13717","title":"CoDefeater: Using LLMs To Find Defeaters in Assurance Cases","authors":"Usman Gohar, Michael C. Hunter, Robyn R. Lutz, Myra B. Cohen","authorsParsed":[["Gohar","Usman",""],["Hunter","Michael C.",""],["Lutz","Robyn R.",""],["Cohen","Myra B.",""]],"versions":[{"version":"v1","created":"Thu, 18 Jul 2024 17:16:35 GMT"},{"version":"v2","created":"Fri, 16 Aug 2024 17:43:57 GMT"}],"updateDate":"2024-08-19","timestamp":1721322995000,"abstract":"  Constructing assurance cases is a widely used, and sometimes required,\nprocess toward demonstrating that safety-critical systems will operate safely\nin their planned environment. To mitigate the risk of errors and missing edge\ncases, the concept of defeaters - arguments or evidence that challenge claims\nin an assurance case - has been introduced. Defeaters can provide timely\ndetection of weaknesses in the arguments, prompting further investigation and\ntimely mitigations. However, capturing defeaters relies on expert judgment,\nexperience, and creativity and must be done iteratively due to evolving\nrequirements and regulations. This paper proposes CoDefeater, an automated\nprocess to leverage large language models (LLMs) for finding defeaters. Initial\nresults on two systems show that LLMs can efficiently find known and unforeseen\nfeasible defeaters to support safety analysts in enhancing the completeness and\nconfidence of assurance cases.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"zHdlEGTKg4sK9gCYTcA5HpsaihvgGv__UF7VVtdDP_A","pdfSize":"1053641"}