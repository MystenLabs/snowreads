{
  "id": "2412.11963",
  "title": "Approximating the Top Eigenvector in Random Order Streams",
  "authors": "Praneeth Kacham and David P. Woodruff",
  "authorsParsed": [
    [
      "Kacham",
      "Praneeth",
      ""
    ],
    [
      "Woodruff",
      "David P.",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Mon, 16 Dec 2024 16:45:16 GMT"
    }
  ],
  "updateDate": "2024-12-17",
  "timestamp": 1734367516000,
  "abstract": "  When rows of an $n \\times d$ matrix $A$ are given in a stream, we study\nalgorithms for approximating the top eigenvector of the matrix ${A}^TA$\n(equivalently, the top right singular vector of $A$). We consider worst case\ninputs $A$ but assume that the rows are presented to the streaming algorithm in\na uniformly random order. We show that when the gap parameter $R =\n\\sigma_1(A)^2/\\sigma_2(A)^2 = \\Omega(1)$, then there is a randomized algorithm\nthat uses $O(h \\cdot d \\cdot \\operatorname{polylog}(d))$ bits of space and\noutputs a unit vector $v$ that has a correlation $1 - O(1/\\sqrt{R})$ with the\ntop eigenvector $v_1$. Here $h$ denotes the number of \\emph{heavy rows} in the\nmatrix, defined as the rows with Euclidean norm at least $\\|{A}\\|_F/\\sqrt{d\n\\cdot \\operatorname{polylog}(d)}$. We also provide a lower bound showing that\nany algorithm using $O(hd/R)$ bits of space can obtain at most $1 -\n\\Omega(1/R^2)$ correlation with the top eigenvector. Thus, parameterizing the\nspace complexity in terms of the number of heavy rows is necessary for high\naccuracy solutions.\n  Our results improve upon the $R = \\Omega(\\log n \\cdot \\log d)$ requirement in\na recent work of Price and Xun (FOCS 2024). We note that the algorithm of Price\nand Xun works for arbitrary order streams whereas our algorithm requires a\nstronger assumption that the rows are presented in a uniformly random order. We\nadditionally show that the gap requirements in their analysis can be brought\ndown to $R = \\Omega(\\log^2 d)$ for arbitrary order streams and $R = \\Omega(\\log\nd)$ for random order streams. The requirement of $R = \\Omega(\\log d)$ for\nrandom order streams is nearly tight for their analysis as we obtain a simple\ninstance with $R = \\Omega(\\log d/\\log\\log d)$ for which their algorithm, with\nany fixed learning rate, cannot output a vector approximating the top\neigenvector $v_1$.\n",
  "subjects": [
    "Computer Science/Data Structures and Algorithms"
  ],
  "license": "http://creativecommons.org/licenses/by-sa/4.0/",
  "blobId": "9_pOsKNB2BlLB01e5HMkeJkFbrgUNcHI13Mz6fNrT1o",
  "pdfSize": "308608"
}