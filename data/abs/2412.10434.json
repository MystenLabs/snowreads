{
  "id": "2412.10434",
  "title": "NAT-NL2GQL: A Novel Multi-Agent Framework for Translating Natural\n  Language to Graph Query Language",
  "authors": "Yuanyuan Liang, Tingyu Xie, Gan Peng, Zihao Huang, Yunshi Lan, Weining\n  Qian",
  "authorsParsed": [
    [
      "Liang",
      "Yuanyuan",
      ""
    ],
    [
      "Xie",
      "Tingyu",
      ""
    ],
    [
      "Peng",
      "Gan",
      ""
    ],
    [
      "Huang",
      "Zihao",
      ""
    ],
    [
      "Lan",
      "Yunshi",
      ""
    ],
    [
      "Qian",
      "Weining",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Wed, 11 Dec 2024 04:14:09 GMT"
    }
  ],
  "updateDate": "2024-12-17",
  "timestamp": 1733890449000,
  "abstract": "  The emergence of Large Language Models (LLMs) has revolutionized many fields,\nnot only traditional natural language processing (NLP) tasks. Recently,\nresearch on applying LLMs to the database field has been booming, and as a\ntypical non-relational database, the use of LLMs in graph database research has\nnaturally gained significant attention. Recent efforts have increasingly\nfocused on leveraging LLMs to translate natural language into graph query\nlanguage (NL2GQL). Although some progress has been made, these methods have\nclear limitations, such as their reliance on streamlined processes that often\noverlook the potential of LLMs to autonomously plan and collaborate with other\nLLMs in tackling complex NL2GQL challenges. To address this gap, we propose\nNAT-NL2GQL, a novel multi-agent framework for translating natural language to\ngraph query language. Specifically, our framework consists of three synergistic\nagents: the Preprocessor agent, the Generator agent, and the Refiner agent. The\nPreprocessor agent manages data processing as context, including tasks such as\nname entity recognition, query rewriting, path linking, and the extraction of\nquery-related schemas. The Generator agent is a fine-tuned LLM trained on\nNL-GQL data, responsible for generating corresponding GQL statements based on\nqueries and their related schemas. The Refiner agent is tasked with refining\nthe GQL or context using error information obtained from the GQL execution\nresults. Given the scarcity of high-quality open-source NL2GQL datasets based\non nGQL syntax, we developed StockGQL, a dataset constructed from a financial\nmarket graph database. It is available at:\nhttps://github.com/leonyuancode/StockGQL. Experimental results on the StockGQL\nand SpCQL datasets reveal that our method significantly outperforms baseline\napproaches, highlighting its potential for advancing NL2GQL research.\n",
  "subjects": [
    "Computer Science/Computation and Language",
    "Computer Science/Artificial Intelligence",
    "Computer Science/Databases"
  ],
  "license": "http://creativecommons.org/licenses/by-sa/4.0/",
  "blobId": "06SGY1Vl7TOjntXzFyeHvup3hYtaNVdF9MKYhiIQUCg",
  "pdfSize": "1081809"
}