{"id":"2407.08452","title":"MITL Model Checking via Generalized Timed Automata and a New Liveness\n  Algorithm","authors":"S. Akshay and Paul Gastin and R. Govind and B. Srivathsan","authorsParsed":[["Akshay","S.",""],["Gastin","Paul",""],["Govind","R.",""],["Srivathsan","B.",""]],"versions":[{"version":"v1","created":"Thu, 11 Jul 2024 12:45:35 GMT"}],"updateDate":"2024-07-12","timestamp":1720701935000,"abstract":"  The translation of Metric Interval Temporal Logic (MITL) to timed automata is\na topic that has been extensively studied. A key challenge here is the\nconversion of future modalities into equivalent automata. Typical conversions\nequip the automata with a guess-and-check mechanism to ascertain the truth of\nfuture modalities. Guess-and-check can be naturally implemented via\nalternation. However, since timed automata tools do not handle alternation,\nexisting methods perform an additional step of converting the alternating timed\nautomata into timed automata. This de-alternation step proceeds by an intricate\nfinite abstraction of the space of configurations of the alternating automaton.\n  Recently, a model of generalized timed automata (GTA) has been proposed. The\nmodel comes with several powerful additional features, and yet, the best known\nzone-based reachability algorithms for timed automata have been extended to the\nGTA model, with the same complexity for all the zone operations. We provide a\nnew concise translation from MITL to GTA. In particular, for the timed until\nmodality, our translation offers an exponential improvement w.r.t. the\nstate-of-the-art.\n  Thanks to this conversion, MITL model checking reduces to checking liveness\nfor GTAs. However, no liveness algorithm is known for GTAs. Due to the presence\nof future clocks, there is no finite time-abstract bisimulation (region\nequivalence) for GTAs, whereas liveness algorithms for timed automata crucially\nrely on the presence of the finite region equivalence. As our second\ncontribution, we provide a new zone-based algorithm for checking Buchi\nnon-emptiness in GTAs, which circumvents this fundamental challenge.\n","subjects":["Computing Research Repository/Formal Languages and Automata Theory"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"ZqnE817jeBj0jSVymJqEB5GmYs7S0kq--ZbMowMFmp4","pdfSize":"933533","objectId":"0x92918275b642f6e9f925ea1f98d8257d603b49ed1b9ee3d04a76771bab4b519b","registeredEpoch":"1","certifiedEpoch":"1","startEpoch":"1","endEpoch":"201"}
