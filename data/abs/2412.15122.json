{
  "id": "2412.15122",
  "title": "Solving the all pairs shortest path problem after minor update of a\n  large dense graph",
  "authors": "Gangli Liu",
  "authorsParsed": [
    [
      "Liu",
      "Gangli",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Thu, 19 Dec 2024 18:02:54 GMT"
    },
    {
      "version": "v2",
      "created": "Tue, 24 Dec 2024 18:48:05 GMT"
    },
    {
      "version": "v3",
      "created": "Tue, 7 Jan 2025 18:50:25 GMT"
    },
    {
      "version": "v4",
      "created": "Tue, 14 Jan 2025 04:54:54 GMT"
    },
    {
      "version": "v5",
      "created": "Wed, 22 Jan 2025 11:36:08 GMT"
    },
    {
      "version": "v6",
      "created": "Wed, 5 Feb 2025 10:30:08 GMT"
    }
  ],
  "updateDate": "2025-02-06",
  "timestamp": 1734631374000,
  "abstract": "  The all pairs shortest path problem is a fundamental optimization problem in\ngraph theory. We deal with re-calculating the all-pairs shortest path (APSP)\nmatrix after a minor modification of a weighted dense graph, e.g., adding a\nnode, removing a node, or updating an edge. We assume the APSP matrix for the\noriginal graph is already known. The graph can be directed or undirected. A\ncold-start calculation of the new APSP matrix by traditional algorithms, like\nthe Floyd-Warshall algorithm or Dijkstra's algorithm, needs $ O(n^3) $ time. We\npropose two algorithms for warm-start calculation of the new APSP matrix. The\nbest case complexity for a warm-start calculation is $ O(n^2) $, the worst case\ncomplexity is $ O(n^3) $. We implemented the algorithms and tested their\nperformance with experiments. The result shows a warm-start calculation can\nsave a great portion of calculation time, compared with cold-start calculation.\nIn addition, another algorithm is devised to warm-start calculate of the\nshortest path between two nodes. Experiment shows warm-start calculation can\nsave 99\\% of calculation time, compared with cold-start calculation by\nDijkstra's algorithm, on directed complete graphs of large sizes.\n",
  "subjects": [
    "Computer Science/Data Structures and Algorithms"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "i090IFJA1IDmZ_bqfH6xxtNTNVTC2JAr937MqkXHkUw",
  "pdfSize": "936006"
}