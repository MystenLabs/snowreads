{
  "id": "2412.14975",
  "title": "Minimizing speculation overhead in a parallel recognizer for regular\n  texts",
  "authors": "Angelo Borsotti, Luca Breveglieri, Stefano Crespi Reghizzi, Angelo\n  Morzenti",
  "authorsParsed": [
    [
      "Borsotti",
      "Angelo",
      ""
    ],
    [
      "Breveglieri",
      "Luca",
      ""
    ],
    [
      "Reghizzi",
      "Stefano Crespi",
      ""
    ],
    [
      "Morzenti",
      "Angelo",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Thu, 19 Dec 2024 15:50:47 GMT"
    },
    {
      "version": "v2",
      "created": "Sun, 22 Dec 2024 16:08:54 GMT"
    },
    {
      "version": "v3",
      "created": "Fri, 10 Jan 2025 16:27:08 GMT"
    }
  ],
  "updateDate": "2025-01-13",
  "timestamp": 1734623447000,
  "abstract": "  Speculative data-parallel algorithms for language recognition have been\nwidely experimented for various types of finite-state automata (FA),\ndeterministic (DFA) and nondeterministic (NFA), often derived from regular\nexpressions (RE). Such an algorithm cuts the input string into chunks,\nindependently recognizes each chunk in parallel by means of identical FAs, and\nat last joins the chunk results and checks overall consistency. In chunk\nrecognition, it is necessary to speculatively start the FAs in any state, thus\ncausing an overhead that reduces the speedup compared to a serial algorithm.\nExisting data-parallel DFA-based recognizers suffer from the excessive number\nof starting states, and the NFA-based ones suffer from the number of\nnondeterministic transitions. Our data-parallel algorithm is based on the new\nFA type called reduced interface DFA (RI-DFA), which minimizes the speculation\noverhead without incurring in the penalty of nondeterministic transitions or of\nimpractically enlarged DFA machines. The algorithm is proved to be correct and\ntheoretically efficient, because it combines the state-reduction of an NFA with\nthe speed of deterministic transitions, thus improving on both DFA-based and\nNFA-based existing implementations. The practical applicability of the RI-DFA\napproach is confirmed by a quantitative comparison of the number of starting\nstates for a large public benchmark of complex FAs. On multi-core computing\narchitectures, the RI-DFA recognizer is much faster than the NFA-based one on\nall benchmarks, while it matches the DFA-based one on some benchmarks and\nperforms much better on some others. The extra time cost needed to construct an\nRI-DFA compared to a DFA is moderate and is compatible with a practical use.\n",
  "subjects": [
    "Computer Science/Distributed, Parallel, and Cluster Computing"
  ],
  "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/",
  "blobId": "7U-wJLJ3OllR-n4Bn8uqScBF7680pJvLvzAYPEEN2mQ",
  "pdfSize": "295125"
}