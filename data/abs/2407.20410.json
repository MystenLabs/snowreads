{"id":"2407.20410","title":"Regrading Policies for Flexible Information Flow Control in\n  Session-Typed Concurrency","authors":"Farzaneh Derakhshan, Stephanie Balzer, Yue Yao","authorsParsed":[["Derakhshan","Farzaneh",""],["Balzer","Stephanie",""],["Yao","Yue",""]],"versions":[{"version":"v1","created":"Mon, 29 Jul 2024 20:40:16 GMT"}],"updateDate":"2024-07-31","timestamp":1722285616000,"abstract":"  Noninterference guarantees that an attacker cannot infer secrets by\ninteracting with a program. Information flow control (IFC) type systems assert\nnoninterference by tracking the level of information learned (pc) and\ndisallowing communication to entities of lesser or unrelated level than the pc.\nControl flow constructs such as loops are at odds with this pattern because\nthey necessitate downgrading the pc upon recursion to be practical. In a\nconcurrent setting, however, downgrading is not generally safe. This paper\nutilizes session types to track the flow of information and contributes an IFC\ntype system for message-passing concurrent processes that allows downgrading\nthe pc upon recursion. To make downgrading safe, the paper introduces regrading\npolicies. Regrading policies are expressed in terms of integrity labels, which\nare also key to safe composition of entities with different regrading policies.\nThe paper develops the type system and proves progress-sensitive\nnoninterference for well-typed processes, ruling out timing attacks that\nexploit the relative order of messages. The type system has been implemented in\na type checker, which supports security-polymorphic processes using local\nsecurity theories.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Logic in Computer Science"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"WXPElpeGuQ_UHljhkZhp6A_uW7nMxVQy_1Xu3wiUJUQ","pdfSize":"1800466"}