{
  "id": "2412.08352",
  "title": "Comparison of Static Analysis Architecture Recovery Tools for\n  Microservice Applications",
  "authors": "Simon Schneider, Alexander Bakhtin, Xiaozhou Li, Jacopo Soldani,\n  Antonio Brogi, Tomas Cerny, Riccardo Scandariato, Davide Taibi",
  "authorsParsed": [
    [
      "Schneider",
      "Simon",
      ""
    ],
    [
      "Bakhtin",
      "Alexander",
      ""
    ],
    [
      "Li",
      "Xiaozhou",
      ""
    ],
    [
      "Soldani",
      "Jacopo",
      ""
    ],
    [
      "Brogi",
      "Antonio",
      ""
    ],
    [
      "Cerny",
      "Tomas",
      ""
    ],
    [
      "Scandariato",
      "Riccardo",
      ""
    ],
    [
      "Taibi",
      "Davide",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Wed, 11 Dec 2024 12:46:16 GMT"
    }
  ],
  "updateDate": "2024-12-12",
  "timestamp": 1733921176000,
  "abstract": "  Architecture recovery tools help software engineers obtain an overview of the\nstructure of their software systems during all phases of the software\ndevelopment life cycle. This is especially important for microservice\napplications because they consist of multiple interacting microservices, which\nmakes it more challenging to oversee the architecture. Various tools and\ntechniques for architecture recovery (also called architecture reconstruction)\nhave been presented in academic and gray literature sources, but no overview\nand comparison of their accuracy exists.\n  This paper presents the results of a multivocal literature review with the\ngoal of identifying architecture recovery tools for microservice applications\nand a comparison of the identified tools' architectural recovery accuracy. We\nfocused on static tools since they can be integrated into fast-paced CI/CD\npipelines. 13 such tools were identified from the literature and nine of them\ncould be executed and compared on their capability of detecting different\nsystem characteristics. The best-performing tool exhibited an overall F1-score\nof 0.86. Additionally, the possibility of combining multiple tools to increase\nthe recovery correctness was investigated, yielding a combination of four\nindividual tools that achieves an F1-score of 0.91.\n  Registered report: The methodology of this study has been peer-reviewed and\naccepted as a registered report at MSR'24: arXiv:2403.06941\n",
  "subjects": [
    "Computer Science/Software Engineering"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "r6cFOI8mkkJP4zxqpJBEHS0Zjx1VX35e9jUddlEE8U8",
  "pdfSize": "628488"
}