{"id":"2412.08654","title":"A Behavior Tree-inspired programming language for autonomous agents","authors":"Oliver Biggar and Iman Shames","authorsParsed":[["Biggar","Oliver",""],["Shames","Iman",""]],"versions":[{"version":"v1","created":"Tue, 26 Nov 2024 22:47:06 GMT"}],"updateDate":"2024-12-13","timestamp":1732661226000,"abstract":"  We propose a design for a functional programming language for autonomous\nagents, built off the ideas and motivations of Behavior Trees (BTs). BTs are a\npopular model for designing agents behavior in robotics and AI. However, as\ntheir growth has increased dramatically, the simple model of BTs has come to be\nlimiting. There is a growing push to increase the functionality of BTs, with\nthe end goal of BTs evolving into a programming language in their own right,\ncentred around the defining BT properties of modularity and reactiveness.\n  In this paper, we examine how the BT model must be extended in order to grow\ninto such a language. We identify some fundamental problems which must be\nsolved: implementing `reactive' selection, 'monitoring' safety-critical\nconditions, and passing data between actions. We provide a variety of small\nexamples which demonstrate that these problems are complex, and that current BT\napproaches do not handle them in a manner consistent with modularity. We\ninstead provide a simple set of modular programming primitives for handling\nthese use cases, and show how they can be combined to build complex programs.\nWe present a full specification for our BT-inspired language, and give an\nimplementation in the functional programming language Haskell. Finally, we\ndemonstrate our language by translating a large and complex BT into a simple,\nunambiguous program.\n","subjects":["Computer Science/Programming Languages","Computer Science/Artificial Intelligence","Computer Science/Robotics","Computer Science/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"suXdLP7rg20fUzo2czV4E8nWGGdL6ZDvZoy0JpDf1mE","pdfSize":"485490"}