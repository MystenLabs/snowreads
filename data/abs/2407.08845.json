{"id":"2407.08845","title":"Optimal Protocols for 2-Party Contention Resolution","authors":"Dingyu Wang","authorsParsed":[["Wang","Dingyu",""]],"versions":[{"version":"v1","created":"Thu, 11 Jul 2024 20:03:24 GMT"}],"updateDate":"2024-07-15","timestamp":1720728204000,"abstract":"  \\emph{Contention Resolution} is a fundamental symmetry-breaking problem in\nwhich $n$ devices must acquire temporary and exclusive access to some\n\\emph{shared resource}, without the assistance of a mediating authority. For\nexample, the $n$ devices may be sensors that each need to transmit a single\npacket of data over a broadcast channel. In each time step, devices can\n(probabilistically) choose to acquire the resource or remain idle; if exactly\none device attempts to acquire it, it succeeds, and if two or more devices make\nan attempt, none succeeds. The complexity of the problem depends heavily on\nwhat types of \\emph{collision detection} are available. In this paper we\nconsider \\emph{acknowledgement-based protocols}, in which devices\n\\underline{only} learn whether their own attempt succeeded or failed; they\nreceive no other feedback from the environment whatsoever, i.e., whether other\ndevices attempted to acquire the resource, succeeded, or failed.\n  Nearly all work on the Contention Resolution problem evaluated the\nperformance of algorithms \\emph{asymptotically}, as $n\\rightarrow \\infty$. In\nthis work we focus on the simplest case of $n=2$ devices, but look for\n\\underline{\\emph{precisely}} optimal algorithms. We design provably optimal\nalgorithms under three natural cost metrics: minimizing the expected average of\nthe waiting times ({\\sc avg}), the expected waiting time until the first device\nacquires the resource ({\\sc min}), and the expected time until the last device\nacquires the resource ({\\sc max}).\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"_jMa51ZVtfaIM4j200LTnzoESGlCJzSecO493Rm5N14","pdfSize":"253556"}