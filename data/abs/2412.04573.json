{
  "id": "2412.04573",
  "title": "Give me Some Hard Questions: Synthetic Data Generation for Clinical QA",
  "authors": "Fan Bai, Keith Harrigian, Joel Stremmel, Hamid Hassanzadeh, Ardavan\n  Saeedi, Mark Dredze",
  "authorsParsed": [
    [
      "Bai",
      "Fan",
      ""
    ],
    [
      "Harrigian",
      "Keith",
      ""
    ],
    [
      "Stremmel",
      "Joel",
      ""
    ],
    [
      "Hassanzadeh",
      "Hamid",
      ""
    ],
    [
      "Saeedi",
      "Ardavan",
      ""
    ],
    [
      "Dredze",
      "Mark",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Thu, 5 Dec 2024 19:35:41 GMT"
    }
  ],
  "updateDate": "2024-12-09",
  "timestamp": 1733427341000,
  "abstract": "  Clinical Question Answering (QA) systems enable doctors to quickly access\npatient information from electronic health records (EHRs). However, training\nthese systems requires significant annotated data, which is limited due to the\nexpertise needed and the privacy concerns associated with clinical data. This\npaper explores generating Clinical QA data using large language models (LLMs)\nin a zero-shot setting. We find that naive prompting often results in easy\nquestions that do not reflect the complexity of clinical scenarios. To address\nthis, we propose two prompting strategies: 1) instructing the model to generate\nquestions that do not overlap with the input context, and 2) summarizing the\ninput record using a predefined schema to scaffold question generation.\nExperiments on two Clinical QA datasets demonstrate that our method generates\nmore challenging questions, significantly improving fine-tuning performance\nover baselines. We compare synthetic and gold data and find a gap between their\ntraining efficacy resulting from the quality of synthetically generated\nanswers.\n",
  "subjects": [
    "Computer Science/Computation and Language"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "mO5-AQ4axaKKnGEknXM9QRTZCAOORuhQ7pMubAsM470",
  "pdfSize": "718668"
}