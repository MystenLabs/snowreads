{"id":"2407.06431","title":"A Lossless Deamortization for Dynamic Greedy Set Cover","authors":"Shay Solomon, Amitai Uzrad and Tianyi Zhang","authorsParsed":[["Solomon","Shay",""],["Uzrad","Amitai",""],["Zhang","Tianyi",""]],"versions":[{"version":"v1","created":"Mon, 8 Jul 2024 22:21:58 GMT"}],"updateDate":"2024-07-10","timestamp":1720477318000,"abstract":"  The dynamic set cover problem has been subject to growing research attention\nin recent years. In this problem, we are given as input a dynamic universe of\nat most $n$ elements and a fixed collection of $m$ sets, where each element\nappears in a most $f$ sets and the cost of each set is in $[1/C, 1]$, and the\ngoal is to efficiently maintain an approximate minimum set cover under element\nupdates.\n  Two algorithms that dynamize the classic greedy algorithm are known,\nproviding $O(\\log n)$ and $((1+\\epsilon)\\ln n)$-approximation with amortized\nupdate times $O(f \\log n)$ and $O(\\frac{f \\log n}{\\epsilon^5})$, respectively\n[GKKP (STOC'17); SU (STOC'23)]. The question of whether one can get\napproximation $O(\\log n)$ (or even worse) with low worst-case update time has\nremained open -- only the naive $O(f \\cdot n)$ time bound is known, even for\nunweighted instances.\n  In this work we devise the first amortized greedy algorithm that is amenable\nto an efficient deamortization, and also develop a lossless deamortization\napproach suitable for the set cover problem, the combination of which yields a\n$((1+\\epsilon)\\ln n)$-approximation algorithm with a worst-case update time of\n$O(\\frac{f\\log n}{\\epsilon^2})$. Our worst-case time bound -- the first to\nbreak the naive $O(f \\cdot n)$ bound -- matches the previous best amortized\nbound, and actually improves its $\\epsilon$-dependence.\n  Further, to demonstrate the applicability of our deamortization approach, we\nemploy it, in conjunction with the primal-dual amortized algorithm of [BHN\n(FOCS'19)], to obtain a $((1+\\epsilon)f)$-approximation algorithm with a\nworst-case update time of $O(\\frac{f\\log n}{\\epsilon^2})$, improving over the\nprevious best bound of $O(\\frac{f \\cdot \\log^2(Cn)}{\\epsilon^3})$ [BHNW\n(SODA'21)].\n  Finally, as direct implications of our results for set cover, we [...]\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by-sa/4.0/","blobId":"z1KhCcDpjtTPC4-OTNpqJJel9EkKsjIvtxCulG4nq3k","pdfSize":"898131"}