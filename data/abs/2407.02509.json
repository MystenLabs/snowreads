{"id":"2407.02509","title":"Variables are a Curse in Software Vulnerability Prediction","authors":"Jinghua Groppe, Sven Groppe, Ralf M\\\"oller","authorsParsed":[["Groppe","Jinghua",""],["Groppe","Sven",""],["MÃ¶ller","Ralf",""]],"versions":[{"version":"v1","created":"Tue, 18 Jun 2024 16:02:29 GMT"}],"updateDate":"2024-07-04","timestamp":1718726549000,"abstract":"  Deep learning-based approaches for software vulnerability prediction\ncurrently mainly rely on the original text of software code as the feature of\nnodes in the graph of code and thus could learn a representation that is only\nspecific to the code text, rather than the representation that depicts the\n'intrinsic' functionality of a program hidden in the text representation. One\ncurse that causes this problem is an infinite number of possibilities to name a\nvariable. In order to lift the curse, in this work we introduce a new type of\nedge called name dependence, a type of abstract syntax graph based on the name\ndependence, and an efficient node representation method named 3-property\nencoding scheme. These techniques will allow us to remove the concrete variable\nnames from code, and facilitate deep learning models to learn the functionality\nof software hidden in diverse code expressions. The experimental results show\nthat the deep learning models built on these techniques outperform the ones\nbased on existing approaches not only in the prediction of vulnerabilities but\nalso in the memory need. The factor of memory usage reductions of our\ntechniques can be up to the order of 30,000 in comparison to existing\napproaches.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Cryptography and Security","Computing Research Repository/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"9i9MIafE-iXYAVAZwdviz2Qi7TaVrl5fQYcwKWRfxtI","pdfSize":"428031"}