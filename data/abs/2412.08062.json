{"id":"2412.08062","title":"Parsl+CWL: Towards Combining the Python and CWL Ecosystems","authors":"Nishchay Karle, Ben Clifford, Yadu Babuji, Ryan Chard, Daniel S. Katz,\n  Kyle Chard","authorsParsed":[["Karle","Nishchay",""],["Clifford","Ben",""],["Babuji","Yadu",""],["Chard","Ryan",""],["Katz","Daniel S.",""],["Chard","Kyle",""]],"versions":[{"version":"v1","created":"Wed, 11 Dec 2024 03:14:19 GMT"}],"updateDate":"2024-12-12","timestamp":1733886859000,"abstract":"  The Common Workflow Language (CWL) is a widely adopted language for defining\nand sharing computational workflows. It is designed to be independent of the\nexecution engine on which workflows are executed. In this paper, we describe\nour experiences integrating CWL with Parsl, a Python-based parallel programming\nlibrary designed to manage execution of workflows across diverse computing\nenvironments. We propose a new method that converts CWL CommandLineTool\ndefinitions into Parsl apps, enabling Parsl scripts to easily import and use\ntools represented in CWL. We describe a Parsl runner that is capable of\nexecuting a CWL CommandLineTool directly. We also describe a proof-of-concept\nextension to support inline Python in a CWL workflow definition, enabling\nseamless use in the Python ecosystem of Parsl. We demonstrate the benefits of\nthis integration by presenting example CWL CommandLineTool definitions that\nshow how they can be used in Parsl, and comparing performance of executing an\nimage processing workflow using the Parsl integration and other CWL runners.\n","subjects":["Computer Science/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"h77F4hW3bD0BojdDB4d5RPTGraumk4GBTnZqZkcAmOM","pdfSize":"417208"}