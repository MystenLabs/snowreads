{"id":"2412.03693","title":"System Test Case Design from Requirements Specifications: Insights and\n  Challenges of Using ChatGPT","authors":"Shreya Bhatia, Tarushi Gandhi, Dhruv Kumar, Pankaj Jalote","authorsParsed":[["Bhatia","Shreya",""],["Gandhi","Tarushi",""],["Kumar","Dhruv",""],["Jalote","Pankaj",""]],"versions":[{"version":"v1","created":"Wed, 4 Dec 2024 20:12:27 GMT"}],"updateDate":"2024-12-06","timestamp":1733343147000,"abstract":"  System testing is essential in any software development project to ensure\nthat the final products meet the requirements. Creating comprehensive test\ncases for system testing from requirements is often challenging and\ntime-consuming. This paper explores the effectiveness of using Large Language\nModels (LLMs) to generate test case designs from Software Requirements\nSpecification (SRS) documents. In this study, we collected the SRS documents of\nfive software engineering projects containing functional and non-functional\nrequirements, which were implemented, tested, and delivered by respective\ndeveloper teams. For generating test case designs, we used ChatGPT-4o Turbo\nmodel. We employed prompt-chaining, starting with an initial context-setting\nprompt, followed by prompts to generate test cases for each use case. We\nassessed the quality of the generated test case designs through feedback from\nthe same developer teams as mentioned above. Our experiments show that about 87\npercent of the generated test cases were valid, with the remaining 13 percent\neither not applicable or redundant. Notably, 15 percent of the valid test cases\nwere previously not considered by developers in their testing. We also tasked\nChatGPT with identifying redundant test cases, which were subsequently\nvalidated by the respective developers to identify false positives and to\nuncover any redundant test cases that may have been missed by the developers\nthemselves. This study highlights the potential of leveraging LLMs for test\ngeneration from the Requirements Specification document and also for assisting\ndevelopers in quickly identifying and addressing redundancies, ultimately\nimproving test suite quality and efficiency of the testing procedure.\n","subjects":["Computer Science/Software Engineering","Computer Science/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"Ux_nQtsFCLEFF_Q8SApSHE9xaqYwU-lQ9H0gJZ5s1cg","pdfSize":"164137"}