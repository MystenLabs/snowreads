{
  "id": "2412.13083",
  "title": "Isabelle as Systems Platform: Managing Automated and Quasi-interactive\n  Builds",
  "authors": "Fabian Huch",
  "authorsParsed": [
    [
      "Huch",
      "Fabian",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Tue, 17 Dec 2024 16:55:06 GMT"
    }
  ],
  "updateDate": "2024-12-18",
  "timestamp": 1734454506000,
  "abstract": "  Interactive theorem provers are complex systems that require sophisticated\nplatform efforts - and hence systems programming environments - to manage\neffectively. The Isabelle platform exemplifies this with its Isabelle/Scala\nsystems programming environment, which has proven to be very successful. In\ncontrast, much of the project infrastructure has relied on external tooling in\nthe past, despite shortcomings. For continuous integration, the previous system\nemployed a Jenkins server, which did not adequately support user-submitted\nIsabelle builds and faced issues with reliability and performance. In this\nwork, we present our design and implementation of a new Isabelle build manager\nthat replaces the old continuous integration system, fully implemented within\nIsabelle/Scala. We illustrate how our implementation utilizes different modules\nof the environment, which supported all aspects of the build manager well.\n",
  "subjects": [
    "Computer Science/Logic in Computer Science"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "3rRsO3yMDrYsVJJG5E2jwdzHZQuiBLPJLYcASgXyOcI",
  "pdfSize": "493266"
}