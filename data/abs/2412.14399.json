{
  "id": "2412.14399",
  "title": "LLMSA: A Compositional Neuro-Symbolic Approach to Compilation-free and\n  Customizable Static Analysis",
  "authors": "Chengpeng Wang, Yifei Gao, Wuqi Zhang, Xuwei Liu, Qingkai Shi, Xiangyu\n  Zhang",
  "authorsParsed": [
    [
      "Wang",
      "Chengpeng",
      ""
    ],
    [
      "Gao",
      "Yifei",
      ""
    ],
    [
      "Zhang",
      "Wuqi",
      ""
    ],
    [
      "Liu",
      "Xuwei",
      ""
    ],
    [
      "Shi",
      "Qingkai",
      ""
    ],
    [
      "Zhang",
      "Xiangyu",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Wed, 18 Dec 2024 23:14:59 GMT"
    }
  ],
  "updateDate": "2024-12-20",
  "timestamp": 1734563699000,
  "abstract": "  Static analysis is essential for program optimization, bug detection, and\ndebugging, but its reliance on compilation and limited customization hampers\npractical use. Advances in LLMs enable a new paradigm of compilation-free,\ncustomizable analysis via prompting. LLMs excel in interpreting program\nsemantics on small code snippets and allow users to define analysis tasks in\nnatural language with few-shot examples. However, misalignment with program\nsemantics can cause hallucinations, especially in sophisticated semantic\nanalysis upon lengthy code snippets.\n  We propose LLMSA, a compositional neuro-symbolic approach for\ncompilation-free, customizable static analysis with reduced hallucinations.\nSpecifically, we propose an analysis policy language to support users\ndecomposing an analysis problem into several sub-problems that target simple\nsyntactic or semantic properties upon smaller code snippets. The problem\ndecomposition enables the LLMs to target more manageable semantic-related\nsub-problems, while the syntactic ones are resolved by parsing-based analysis\nwithout hallucinations. An analysis policy is evaluated with lazy, incremental,\nand parallel prompting, which mitigates the hallucinations and improves the\nperformance. It is shown that LLMSA achieves comparable and even superior\nperformance to existing techniques in various clients. For instance, it attains\n66.27% precision and 78.57% recall in taint vulnerability detection, surpassing\nan industrial approach in F1 score by 0.20.\n",
  "subjects": [
    "Computer Science/Programming Languages",
    "Computer Science/Software Engineering"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "DQDs8AubOXDZooLCcAc8V4nJXUTBi7pmBninejHVyLY",
  "pdfSize": "5706824"
}