{"id":"2407.21661","title":"Towards Error Correction for Computing in Racetrack Memory","authors":"Preston Brazzle, Benjamin F. Morris III, Evan McKinney, Peipei Zhou,\n  Jingtong Hu, Asif Ali Khan, and Alex K. Jones","authorsParsed":[["Brazzle","Preston",""],["Morris","Benjamin F.","III"],["McKinney","Evan",""],["Zhou","Peipei",""],["Hu","Jingtong",""],["Khan","Asif Ali",""],["Jones","Alex K.",""]],"versions":[{"version":"v1","created":"Wed, 31 Jul 2024 15:06:22 GMT"}],"updateDate":"2024-08-01","timestamp":1722438382000,"abstract":"  Computing-in-memory (CIM) promises to alleviate the Von Neumann bottleneck\nand accelerate data-intensive applications. Depending on the underlying\ntechnology and configuration, CIM enables implementing compute primitives in\nplace, such as multiplication, search operations, and bulk bitwise logic\noperations. Emerging nonvolatile memory technologies such as spintronic\nRacetrack memory (RTM) promise not only unprecedented density but also\nsignificant parallelism through CIM. However, most CIM designs, including those\nbased on RTM, exhibit high fault rates. Existing error correction codes (ECC)\nare not homomorphic over bitwise operations such as AND and OR, and hence\ncannot protect against CIM faults. This paper proposes CIRM-ECC, a technique to\nprotect spintronic RTMs against CIM faults. At the core of CIRM-ECC, we use a\nrecently proposed RTM-based CIM approach and leverage its peripheral circuitry\nto our implement our novel ECC codes. We show that CIRM-ECC can be applied to\nsingle-bit Hamming codes as well as multi-bit BCH codes.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"4D9Jw5NV9M9sjjo4XSWb91wLCC3fPZ444N8iMvHiHbE","pdfSize":"297756"}