{"id":"2412.08068","title":"Repository-Level Graph Representation Learning for Enhanced Security\n  Patch Detection","authors":"Xin-Cheng Wen, Zirui Lin, Cuiyun Gao, Hongyu Zhang, Yong Wang and Qing\n  Liao","authorsParsed":[["Wen","Xin-Cheng",""],["Lin","Zirui",""],["Gao","Cuiyun",""],["Zhang","Hongyu",""],["Wang","Yong",""],["Liao","Qing",""]],"versions":[{"version":"v1","created":"Wed, 11 Dec 2024 03:29:56 GMT"}],"updateDate":"2024-12-12","timestamp":1733887796000,"abstract":"  Software vendors often silently release security patches without providing\nsufficient advisories (e.g., Common Vulnerabilities and Exposures) or delayed\nupdates via resources (e.g., National Vulnerability Database). Therefore, it\nhas become crucial to detect these security patches to ensure secure software\nmaintenance. However, existing methods face the following challenges: (1) They\nprimarily focus on the information within the patches themselves, overlooking\nthe complex dependencies in the repository. (2) Security patches typically\ninvolve multiple functions and files, increasing the difficulty in well\nlearning the representations. To alleviate the above challenges, this paper\nproposes a Repository-level Security Patch Detection framework named RepoSPD,\nwhich comprises three key components: 1) a repository-level graph construction,\nRepoCPG, which represents software patches by merging pre-patch and post-patch\nsource code at the repository level; 2) a structure-aware patch representation,\nwhich fuses the graph and sequence branch and aims at comprehending the\nrelationship among multiple code changes; 3) progressive learning, which\nfacilitates the model in balancing semantic and structural information. To\nevaluate RepoSPD, we employ two widely-used datasets in security patch\ndetection: SPI-DB and PatchDB. We further extend these datasets to the\nrepository level, incorporating a total of 20,238 and 28,781 versions of\nrepository in C/C++ programming languages, respectively, denoted as SPI-DB* and\nPatchDB*. We compare RepoSPD with six existing security patch detection methods\nand five static tools. Our experimental results demonstrate that RepoSPD\noutperforms the state-of-the-art baseline, with improvements of 11.90%, and\n3.10% in terms of accuracy on the two datasets, respectively.\n","subjects":["Computer Science/Software Engineering","Computer Science/Artificial Intelligence","Computer Science/Cryptography and Security"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"TYWmLr5olvx6Zu3hdjitRnWOl03t5oxkgcqFDIyf7lo","pdfSize":"2144522"}