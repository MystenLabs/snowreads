{"id":"2407.00044","title":"Stream-K Optimization and Exploration","authors":"Nick Rackley, Bryan Gonzalez, Casey Morrison","authorsParsed":[["Rackley","Nick",""],["Gonzalez","Bryan",""],["Morrison","Casey",""]],"versions":[{"version":"v1","created":"Sat, 1 Jun 2024 01:48:56 GMT"}],"updateDate":"2024-07-02","timestamp":1717206536000,"abstract":"  We explore optimization options for the Stream-K algorithm, a work-centric\nparallelization of matrix multiplication (GEMM). In our study, we investigated\ndifferences between the theoretical and practical implementations, particularly\nnoting the impact of padding. Our debugging efforts revealed a persistent bug\nrelated to block mapping, which we could not fully resolve, but we managed to\nimplement some optimizations.\n  Setting the padding to zero for the M, N, and K dimensions resulted in an\naverage 0.6% improvement in performance, achieving 1.44 ms, 89.37 TFlops, and\n66.91 GB/s. However, adjusting the block size and parameters led to the process\ngetting stuck, indicating a need for further tuning. Additionally, exploring\nthe potential of Block2Time highlighted its promise in enhancing runtime\npredictions and optimizing load balancing.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"ZONBOn9VG4Z4E-SuG95TLDjLQTq7Gddkpj0rHtMaD-Y","pdfSize":"132071"}