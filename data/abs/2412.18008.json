{
  "id": "2412.18008",
  "title": "Parallel Contraction Hierarchies Can Be Efficient and Scalable",
  "authors": "Zijin Wan, Xiaojun Dong, Letong Wang, Enzuo Zhu, Yan Gu, Yihan Sun",
  "authorsParsed": [
    [
      "Wan",
      "Zijin",
      ""
    ],
    [
      "Dong",
      "Xiaojun",
      ""
    ],
    [
      "Wang",
      "Letong",
      ""
    ],
    [
      "Zhu",
      "Enzuo",
      ""
    ],
    [
      "Gu",
      "Yan",
      ""
    ],
    [
      "Sun",
      "Yihan",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Mon, 23 Dec 2024 22:03:14 GMT"
    }
  ],
  "updateDate": "2024-12-25",
  "timestamp": 1734991394000,
  "abstract": "  Contraction Hierarchies (CH) (Geisberger et al., 2008) is one of the most\nwidely used algorithms for shortest-path queries on road networks. Compared to\nDijkstra's algorithm, CH enables orders of magnitude faster query performance\nthrough a preprocessing phase, which iteratively categorizes vertices into\nhierarchies and adds shortcuts. However, constructing a CH is an expensive\ntask. Existing solutions, including parallel ones, may suffer from long\nconstruction time. Especially in our experiments, we observe that existing\nparallel solutions demonstrate unsatisfactory scalability and have close\nperformance to sequential algorithms.\n  In this paper, we present \\textsf{SPoCH} (\\textbf{S}calable\n\\textbf{P}arallelization \\textbf{o}f \\textbf{C}ontraction\n\\textbf{H}ierarchies), an efficient and scalable CH construction algorithm in\nparallel. To address the challenges in previous work, our improvements focus on\nboth redesigning the algorithm and leveraging parallel data structures. %to\nmaintain the original and shortcut edges dynamically. We implement our\nalgorithm and compare it with the state-of-the-art sequential and parallel\nimplementations on 13 graphs, including road networks, synthetic graphs, and\n$k$-NN graphs. Our experiments show that \\textsf{SPoCH} achieves\n$17$--$131\\times$ speedups in CH construction over the best baseline, while\nmaintaining competitive query performance and CH graph size.\n",
  "subjects": [
    "Computer Science/Data Structures and Algorithms",
    "Computer Science/Distributed, Parallel, and Cluster Computing"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "-T0sof_D_MNOjEpAdCRaU6546NzIcJxERlbcMPUByOo",
  "pdfSize": "1533072"
}