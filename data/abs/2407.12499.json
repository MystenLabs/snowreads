{"id":"2407.12499","title":"Easing Maintenance of Academic Static Analyzers","authors":"Rapha\\\"el Monat and Abdelraouf Ouadjaout and Antoine Min\\'e","authorsParsed":[["Monat","Raphaël",""],["Ouadjaout","Abdelraouf",""],["Miné","Antoine",""]],"versions":[{"version":"v1","created":"Wed, 17 Jul 2024 11:29:21 GMT"}],"updateDate":"2024-07-18","timestamp":1721215761000,"abstract":"  Academic research in static analysis produces software implementations. These\nimplementations are time-consuming to develop and some need to be maintained in\norder to enable building further research upon the implementation. While\nnecessary, these processes can be quickly challenging. This article documents\nthe tools and techniques we have come up with to simplify the maintenance of\nMopsa since 2017. Mopsa is a static analysis platform that aims at being sound.\nFirst, we describe an automated way to measure precision that does not require\nany baseline of true bugs obtained by manually inspecting the results. Further,\nit improves transparency of the analysis, and helps discovering regressions\nduring continuous integration. Second, we have taken inspiration from standard\ntools observing the concrete execution of a program to design custom tools\nobserving the abstract execution of the analyzed program itself, such as\nabstract debuggers and profilers. Finally, we report on some cases of automated\ntestcase reduction.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"P9V-HVRZ9UR0lNxZEYRc7zbBkDyOVnDsUMPnivgFdcU","pdfSize":"1374989"}