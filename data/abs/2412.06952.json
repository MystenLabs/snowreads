{
  "id": "2412.06952",
  "title": "Massively Parallel Algorithms for Approximate Shortest Paths",
  "authors": "Michal Dory, Shaked Matar",
  "authorsParsed": [
    [
      "Dory",
      "Michal",
      ""
    ],
    [
      "Matar",
      "Shaked",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Mon, 9 Dec 2024 19:56:31 GMT"
    }
  ],
  "updateDate": "2024-12-11",
  "timestamp": 1733774191000,
  "abstract": "  We present fast algorithms for approximate shortest paths in the massively\nparallel computation (MPC) model. We provide randomized algorithms that take\n$poly(\\log{\\log{n}})$ rounds in the near-linear memory MPC model. Our results\nare for unweighted undirected graphs with $n$ vertices and $m$ edges.\n  Our first contribution is a $(1+\\epsilon)$-approximation algorithm for\nSingle-Source Shortest Paths (SSSP) that takes $poly(\\log{\\log{n}})$ rounds in\nthe near-linear MPC model, where the memory per machine is $\\tilde{O}(n)$ and\nthe total memory is $\\tilde{O}(mn^{\\rho})$, where $\\rho$ is a small constant.\n  Our second contribution is a distance oracle that allows to approximate the\ndistance between any pair of vertices. The distance oracle is constructed in\n$poly(\\log{\\log{n}})$ rounds and allows to query a\n$(1+\\epsilon)(2k-1)$-approximate distance between any pair of vertices $u$ and\n$v$ in $O(1)$ additional rounds. The algorithm is for the near-linear memory\nMPC model with total memory of size $\\tilde{O}((m+n^{1+\\rho})n^{1/k})$, where\n$\\rho$ is a small constant.\n  While our algorithms are for the near-linear MPC model, in fact they only use\none machine with $\\tilde{O}(n)$ memory, where the rest of machines can have\nsublinear memory of size $O(n^{\\gamma})$ for a small constant $\\gamma < 1$. All\nprevious algorithms for approximate shortest paths in the near-linear MPC model\neither required $\\Omega(\\log{n})$ rounds or had an $\\Omega(\\log{n})$\napproximation.\n  Our approach is based on fast construction of near-additive emulators,\nlimited-scale hopsets and limited-scale distance sketches that are tailored for\nthe MPC model. While our end-results are for the near-linear MPC model, many of\nthe tools we construct such as hopsets and emulators are constructed in the\nmore restricted sublinear MPC model.\n",
  "subjects": [
    "Computer Science/Data Structures and Algorithms",
    "Computer Science/Distributed, Parallel, and Cluster Computing"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "HsJJabvIdp4T9vCDY7o0xpb0lPmjsB76vI9DN0boCWw",
  "pdfSize": "953972"
}