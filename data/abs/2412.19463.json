{
  "id": "2412.19463",
  "title": "Laws of Quantum Programming",
  "authors": "Mingsheng Ying, Li Zhou, Gilles Barthe",
  "authorsParsed": [
    [
      "Ying",
      "Mingsheng",
      ""
    ],
    [
      "Zhou",
      "Li",
      ""
    ],
    [
      "Barthe",
      "Gilles",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Fri, 27 Dec 2024 05:16:35 GMT"
    }
  ],
  "updateDate": "2024-12-30",
  "timestamp": 1735276595000,
  "abstract": "  In this paper, we investigate the fundamental laws of quantum programming. We\nextend a comprehensive set of Hoare et al.'s basic laws of classical\nprogramming to the quantum setting. These laws characterise the algebraic\nproperties of quantum programs, such as the distributivity of sequential\ncomposition over (quantum) if-statements and the unfolding of nested (quantum)\nif-statements. At the same time, we clarify some subtle differences between\ncertain laws of classical programming and their quantum counterparts.\nAdditionally, we derive a fixpoint characterization of quantum while-loops and\na loop-based realisation of tail recursion in quantum programming. Furthermore,\nwe establish two normal form theorems: one for quantum circuits and one for\nfinite quantum programs. The theory in which these laws are established is\nformalised in the Coq proof assistant, and all of these laws are mechanically\nverified. As an application case of our laws, we present a formal derivation of\nthe principle of deferred measurements in dynamic quantum circuits.\n  We expect that these laws can be utilized in correctness-preserving\ntransformation, compilation, and automatic code optimization in quantum\nprogramming. In particular, because these laws are formally verified in Coq,\nthey can be confidently applied in quantum program development.\n",
  "subjects": [
    "Computer Science/Programming Languages"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "D7VC0ipOLsCICEAMD9buXtLSBdXGc63HDBCiv1QdmFk",
  "pdfSize": "585059"
}