{
  "id": "2412.05781",
  "title": "Open-Source Acceleration of Stable-Diffusion.cpp Deployable on All\n  Devices",
  "authors": "Jingxu Ng, Cheng Lv, Pu Zhao, Wei Niu, Juyi Lin, Minzhou Pan, Yun\n  Liang, Yanzhi Wang",
  "authorsParsed": [
    [
      "Ng",
      "Jingxu",
      ""
    ],
    [
      "Lv",
      "Cheng",
      ""
    ],
    [
      "Zhao",
      "Pu",
      ""
    ],
    [
      "Niu",
      "Wei",
      ""
    ],
    [
      "Lin",
      "Juyi",
      ""
    ],
    [
      "Pan",
      "Minzhou",
      ""
    ],
    [
      "Liang",
      "Yun",
      ""
    ],
    [
      "Wang",
      "Yanzhi",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Sun, 8 Dec 2024 02:27:17 GMT"
    },
    {
      "version": "v2",
      "created": "Tue, 10 Dec 2024 21:06:54 GMT"
    },
    {
      "version": "v3",
      "created": "Tue, 7 Jan 2025 20:27:09 GMT"
    }
  ],
  "updateDate": "2025-01-09",
  "timestamp": 1733624837000,
  "abstract": "  Stable diffusion plays a crucial role in generating high-quality images.\nHowever, image generation is time-consuming and memory-intensive. To address\nthis, stable-diffusion.cpp (Sdcpp) emerges as an efficient inference framework\nto accelerate the diffusion models. Although it is lightweight, the current\nimplementation of ggml_conv_2d operator in Sdcpp is suboptimal, exhibiting both\nhigh inference latency and massive memory usage. To address this, in this work,\nwe present an optimized version of Sdcpp leveraging the Winograd algorithm to\naccelerate 2D convolution operations, which is the primary bottleneck in the\npipeline. By analyzing both dependent and independent computation graphs, we\nexploit the device's locality and parallelism to achieve substantial\nperformance improvements. Our framework delivers correct end-to-end results\nacross various stable diffusion models, including SDv1.4, v1.5, v2.1, SDXL, and\nSDXL-Turbo. Our evaluation results demonstrate a speedup up to 2.76x for\nindividual convolutional layers and an inference speedup up to 4.79x for the\noverall image generation process, compared with the original Sdcpp on M1 pro.\nHomepage: https://github.com/SealAILab/stable-diffusion-cpp\n",
  "subjects": [
    "Computer Science/Computer Vision and Pattern Recognition",
    "Computer Science/Artificial Intelligence",
    "Computer Science/Machine Learning"
  ],
  "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/",
  "blobId": "5B8Qr_5frAeOQElBmEztG4GE5p45Irk9-L0Sb5j9GTU",
  "pdfSize": "5277278"
}