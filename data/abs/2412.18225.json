{"id":"2412.18225","title":"Combining GPT and Code-Based Similarity Checking for Effective Smart\n  Contract Vulnerability Detection","authors":"Jango Zhang","authorsParsed":[["Zhang","Jango",""]],"versions":[{"version":"v1","created":"Tue, 24 Dec 2024 07:15:48 GMT"}],"updateDate":"2024-12-25","timestamp":1735024548000,"abstract":"  With the rapid growth of blockchain technology, smart contracts are now\ncrucial to Decentralized Finance (DeFi) applications. Effective vulnerability\ndetection is vital for securing these contracts against hackers and enhancing\nthe accuracy and efficiency of security audits. In this paper, we present\nSimilarGPT, a unique vulnerability identification tool for smart contract,\nwhich combines Generative Pretrained Transformer (GPT) models with Code-based\nsimilarity checking methods. The main concept of the SimilarGPT tool is to\nmeasure the similarity between the code under inspection and the secure code\nfrom third-party libraries. To identify potential vulnerabilities, we connect\nthe semantic understanding capability of large language models (LLMs) with\nCode-based similarity checking techniques. We propose optimizing the detection\nsequence using topological ordering to enhance logical coherence and reduce\nfalse positives during detection. Through analysis of code reuse patterns in\nsmart contracts, we compile and process extensive third-party library code to\nestablish a comprehensive reference codebase. Then, we utilize LLM to conduct\nan indepth analysis of similar codes to identify and explain potential\nvulnerabilities in the codes. The experimental findings indicate that\nSimilarGPT excels in detecting vulnerabilities in smart contracts, particularly\nin missed detections and minimizing false positives.\n","subjects":["Computer Science/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"ItC3ye1rVolmvFTG8ozI6DO1wRqONlAih2iHjp8cPUo","pdfSize":"649798"}