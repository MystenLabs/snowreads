{
  "id": "2412.08137",
  "title": "Enhancing CGRA Efficiency Through Aligned Compute and Communication\n  Provisioning",
  "authors": "Zhaoying Li, Pranav Dangi, Chenyang Yin, Thilini Kaushalya Bandara,\n  Rohan Juneja, Cheng Tan, Zhenyu Bai, Tulika Mitra",
  "authorsParsed": [
    [
      "Li",
      "Zhaoying",
      ""
    ],
    [
      "Dangi",
      "Pranav",
      ""
    ],
    [
      "Yin",
      "Chenyang",
      ""
    ],
    [
      "Bandara",
      "Thilini Kaushalya",
      ""
    ],
    [
      "Juneja",
      "Rohan",
      ""
    ],
    [
      "Tan",
      "Cheng",
      ""
    ],
    [
      "Bai",
      "Zhenyu",
      ""
    ],
    [
      "Mitra",
      "Tulika",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Wed, 11 Dec 2024 06:51:43 GMT"
    },
    {
      "version": "v2",
      "created": "Thu, 12 Dec 2024 03:45:30 GMT"
    }
  ],
  "updateDate": "2024-12-13",
  "timestamp": 1733899903000,
  "abstract": "  Coarse-grained Reconfigurable Arrays (CGRAs) are domain-agnostic accelerators\nthat enhance the energy efficiency of resource-constrained edge devices. The\nCGRA landscape is diverse, exhibiting trade-offs between performance,\nefficiency, and architectural specialization. However, CGRAs often\noverprovision communication resources relative to their modest computing\ncapabilities. This occurs because the theoretically provisioned programmability\nfor CGRAs often proves superfluous in practical implementations.\n  In this paper, we propose Plaid, a novel CGRA architecture and compiler that\naligns compute and communication capabilities, thereby significantly improving\nenergy and area efficiency while preserving its generality and performance. We\ndemonstrate that the dataflow graph, representing the target application, can\nbe decomposed into smaller, recurring communication patterns called motifs. The\nprimary contribution is the identification of these structural motifs within\nthe dataflow graphs and the development of an efficient collective execution\nand routing strategy tailored to these motifs. The Plaid architecture employs a\nnovel collective processing unit that can execute multiple operations of a\nmotif and route related data dependencies together. The Plaid compiler can\nhierarchically map the dataflow graph and judiciously schedule the motifs. Our\ndesign achieves a 43% reduction in power consumption and 46% area savings\ncompared to the baseline high-performance spatio-temporal CGRA, all while\npreserving its generality and performance levels. In comparison to the baseline\nenergy-efficient spatial CGRA, Plaid offers a 1.4x performance improvement and\na 48% area savings, with almost the same power.\n",
  "subjects": [
    "Computer Science/Hardware Architecture"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "9yBWnb81lPDHuaiN1DIW_pYWP3AM1PE4oibWG2eNssA",
  "pdfSize": "2020017"
}