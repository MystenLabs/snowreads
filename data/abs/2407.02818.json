{"id":"2407.02818","title":"WizardMerge -- Save Us From Merging Without Any Clues","authors":"Qingyu Zhang, Junzhe Li, Jiayi Lin, Jie Ding, Lanteng Lin, Chenxiong\n  Qian","authorsParsed":[["Zhang","Qingyu",""],["Li","Junzhe",""],["Lin","Jiayi",""],["Ding","Jie",""],["Lin","Lanteng",""],["Qian","Chenxiong",""]],"versions":[{"version":"v1","created":"Wed, 3 Jul 2024 05:40:29 GMT"}],"updateDate":"2024-07-04","timestamp":1719985229000,"abstract":"  Modern software development necessitates efficient version-oriented\ncollaboration among developers. While Git is the most popular version control\nsystem, it generates unsatisfactory version merging results due to\ntextual-based workflow, leading to potentially unexpected results in the merged\nversion of the project. Although numerous merging tools have been proposed for\nimproving merge results, developers remain struggling to resolve the conflicts\nand fix incorrectly modified code without clues. We present WizardMerge, an\nauxiliary tool that leverages merging results from Git to retrieve code block\ndependency on text and LLVM-IR level and provide suggestions for developers to\nresolve errors introduced by textual merging. Through the evaluation, we\nsubjected WizardMerge to testing on 227 conflicts within five large-scale\nprojects. The outcomes demonstrate that WizardMerge diminishes conflict merging\ntime costs, achieving a 23.85% reduction. Beyond addressing conflicts,\nWizardMerge provides merging suggestions for over 70% of the code blocks\npotentially affected by the conflicts. Notably, WizardMerge exhibits the\ncapability to identify conflict-unrelated code blocks that require manual\nintervention yet are harmfully applied by Git during the merging.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Emerging Technologies","Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"tPf8eHz3KlSmMC4W4bM1kKm4j2PiLFarurK9b2i3tCg","pdfSize":"2030045"}