{"id":"2412.05852","title":"Evolving Algebraic Multigrid Methods Using Grammar-Guided Genetic\n  Programming","authors":"Dinesh Parthasarathy, Wayne Bradford Mitchell, Harald K\\\"ostler","authorsParsed":[["Parthasarathy","Dinesh",""],["Mitchell","Wayne Bradford",""],["KÃ¶stler","Harald",""]],"versions":[{"version":"v1","created":"Sun, 8 Dec 2024 08:21:35 GMT"}],"updateDate":"2024-12-10","timestamp":1733646095000,"abstract":"  Multigrid methods despite being known to be asymptotically optimal\nalgorithms, depend on the careful selection of their individual components for\nefficiency. Also, they are mostly restricted to standard cycle types like V-,\nF-, and W-cycles. We use grammar rules to generate arbitrary-shaped cycles,\nwherein the smoothers and their relaxation weights are chosen independently at\neach step within the cycle. We call this a flexible multigrid cycle. These\nflexible cycles are used in Algebraic Multigrid (AMG) methods with the help of\ngrammar rules and optimized using genetic programming. The flexible AMG methods\nare implemented in the software library of hypre, and the programs are\noptimized separately for two cases: a standalone AMG solver for a 3D\nanisotropic problem and an AMG preconditioner with conjugate gradient for a\nmultiphysics code. We observe that the optimized flexible cycles provide higher\nefficiency and better performance than the standard cycle types.\n","subjects":["Computer Science/Computational Engineering, Finance, and Science","Computer Science/Artificial Intelligence","Computer Science/Numerical Analysis","Mathematics/Numerical Analysis"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"-czdmG8-vBOAwr1imfl4udIs7g-Z77ghRw2P66jAAbg","pdfSize":"1387233"}