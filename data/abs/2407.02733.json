{"id":"2407.02733","title":"STRIDE: Simple Type Recognition In Decompiled Executables","authors":"Harrison Green, Edward J. Schwartz, Claire Le Goues, Bogdan Vasilescu","authorsParsed":[["Green","Harrison",""],["Schwartz","Edward J.",""],["Goues","Claire Le",""],["Vasilescu","Bogdan",""]],"versions":[{"version":"v1","created":"Wed, 3 Jul 2024 01:09:41 GMT"}],"updateDate":"2024-07-04","timestamp":1719968981000,"abstract":"  Decompilers are widely used by security researchers and developers to reverse\nengineer executable code. While modern decompilers are adept at recovering\ninstructions, control flow, and function boundaries, some useful information\nfrom the original source code, such as variable types and names, is lost during\nthe compilation process. Our work aims to predict these variable types and\nnames from the remaining information.\n  We propose STRIDE, a lightweight technique that predicts variable names and\ntypes by matching sequences of decompiler tokens to those found in training\ndata. We evaluate it on three benchmark datasets and find that STRIDE achieves\ncomparable performance to state-of-the-art machine learning models for both\nvariable retyping and renaming while being much simpler and faster. We perform\na detailed comparison with two recent SOTA transformer-based models in order to\nunderstand the specific factors that make our technique effective. We\nimplemented STRIDE in fewer than 1000 lines of Python and have open-sourced it\nunder a permissive license at https://github.com/hgarrereyn/STRIDE.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"RF2uyviTHuMKTv63BKTWt_xHRLTyZEqcIRfzVizzhXA","pdfSize":"1304631"}