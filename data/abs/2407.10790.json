{"id":"2407.10790","title":"Finding connected components of a graph using traversals associated with\n  iterative methods for solving systems of linear equations","authors":"A.V. Prolubnikov","authorsParsed":[["Prolubnikov","A. V.",""]],"versions":[{"version":"v1","created":"Mon, 15 Jul 2024 15:08:18 GMT"}],"updateDate":"2024-07-16","timestamp":1721056098000,"abstract":"  To solve many problems on graphs, graph traversals are used, the usual\nvariants of which are the depth-first search and the breadth-first search.\nImplementing a graph traversal we consequently reach all vertices of the graph\nthat belong to a connected component. The breadth-first search is the usual\nchoice when constructing efficient algorithms for finding connected components\nof a graph. Methods of simple iteration for solving systems of linear equations\nwith modified graph adjacency matrices and with the properly specified\nright-hand side can be considered as graph traversal algorithms. These\ntraversal algorithms, generally speaking, turn out to be non-equivalent neither\nto the depth-first search nor the breadth-first search. The example of such a\ntraversal algorithm is the one associated with the Gauss-Seidel method. For an\narbitrary connected graph, to visit all its vertices, the algorithm requires\nnot more iterations than that is required for BFS. For a large number of\ninstances of the problem, fewer iterations will be required.\n","subjects":["Computing Research Repository/Discrete Mathematics"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"Wm3pksFyqjS-XAcXloFcwyal_16s9c4RILaGKPaiPsk","pdfSize":"933598","objectId":"0x416b4663ac44e9b905ebb3d3d79b79b1ea527e7d6b1285bfb85145ee72e52483","registeredEpoch":"2","certifiedEpoch":"2","startEpoch":"2","endEpoch":"202"}
