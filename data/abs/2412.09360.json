{
  "id": "2412.09360",
  "title": "Doc2Oracle: Investigating the Impact of Javadoc Comments on Test Oracle\n  Generation",
  "authors": "Soneya Binta Hossain, Raygan Taylor, Matthew Dwyer",
  "authorsParsed": [
    [
      "Hossain",
      "Soneya Binta",
      ""
    ],
    [
      "Taylor",
      "Raygan",
      ""
    ],
    [
      "Dwyer",
      "Matthew",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Thu, 12 Dec 2024 15:27:47 GMT"
    }
  ],
  "updateDate": "2024-12-13",
  "timestamp": 1734017267000,
  "abstract": "  Code documentation is a critical aspect of software development, serving as a\nbridge between human understanding and machine-readable code. Beyond assisting\ndevelopers in understanding and maintaining code, documentation also plays a\ncritical role in automating various software engineering tasks, such as test\noracle generation (TOG). In Java, Javadoc comments provide structured, natural\nlanguage documentation embedded directly in the source code, typically\ndetailing functionality, usage, parameters, return values, and exceptions.\nWhile prior research has utilized Javadoc comments in test oracle generation\n(TOG), there has not been a thorough investigation into their impact when\ncombined with other contextual information, nor into identifying the most\nrelevant components for generating correct and strong test oracles, or\nunderstanding their role in detecting real bugs. In this study, we dive deep\ninto investigating the impact of Javadoc comments on TOG.\n",
  "subjects": [
    "Computer Science/Software Engineering"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "IdymDHDt2T-uaY6NJc_NOtH7lwM3Jgmk8Xh62UzZinc",
  "pdfSize": "3431725"
}