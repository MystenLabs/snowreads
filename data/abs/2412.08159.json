{"id":"2412.08159","title":"CodoMo: Python Model Checking to Integrate Agile Verification Process of\n  Computer Vision Systems","authors":"Yojiro Harie, Yuto Ogata, Gautam Bishnu Prasad, Katsumi Wasaki","authorsParsed":[["Harie","Yojiro",""],["Ogata","Yuto",""],["Prasad","Gautam Bishnu",""],["Wasaki","Katsumi",""]],"versions":[{"version":"v1","created":"Wed, 11 Dec 2024 07:29:30 GMT"}],"updateDate":"2024-12-12","timestamp":1733902170000,"abstract":"  Model checking is a fundamental technique for verifying finite state\nconcurrent systems. Traditionally, model designs were initially created to\nfacilitate the application of model checking. This process, representative of\nModel Driven Development (MDD), involves generating an equivalent code from a\ngiven model which is verified before implementation begins. However, this\napproach is considerably slower compared to agile development methods and lacks\nflexibility in terms of expandability and refactoring. We have proposed\n\"CodoMo: Python Code to Model Generator for pyModelChecking.\" This tool\nautomates the transformation of a Python code by an AST static analyzer and a\nconcolic testing tool into intermediate models suitable for verification with\npyModelChecking, bridging the gap between traditional model checking and agile\nmethodologies. Additionally, we have implemented a multiprocess approach that\nintegrates the execution of PyExZ3 with the generation of Kripke structures\nachieving greater work efficiency. By employing CodoMo, we successfully\nverified a Tello Drone programming with gesture-based image processing\ninterfaces, showcasing the tool's powerful capability to enhance verification\nprocesses while maintaining the agility required for today's fast-paced\ndevelopment cycles.\n","subjects":["Computer Science/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-sa/4.0/","blobId":"vEeL2iI7u4LZZTP_Qj07ko5b3NiWE6j_C2QW85VHahE","pdfSize":"3162646"}