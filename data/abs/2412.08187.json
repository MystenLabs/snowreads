{"id":"2412.08187","title":"From communities to interpretable network and word embedding: an unified\n  approach","authors":"Thibault Prouteau and Nicolas Dugu\\'e and Simon Guillot","authorsParsed":[["Prouteau","Thibault",""],["Dugu√©","Nicolas",""],["Guillot","Simon",""]],"versions":[{"version":"v1","created":"Wed, 11 Dec 2024 08:27:25 GMT"}],"updateDate":"2024-12-12","timestamp":1733905645000,"abstract":"  Modelling information from complex systems such as humans social interaction\nor words co-occurrences in our languages can help to understand how these\nsystems are organized and function. Such systems can be modelled by networks,\nand network theory provides a useful set of methods to analyze them. Among\nthese methods, graph embedding is a powerful tool to summarize the interactions\nand topology of a network in a vectorized feature space. When used in input of\nmachine learning algorithms, embedding vectors help with common graph problems\nsuch as link prediction, graph matching, etc. Word embedding has the goal of\nrepresenting the sense of words, extracting it from large text corpora. Despite\ndifferences in the structure of information in input of embedding algorithms,\nmany graph embedding approaches are adapted and inspired from methods in NLP.\nLimits of these methods are observed in both domains. Most of these methods\nrequire long and resource greedy training. Another downside to most methods is\nthat they are black-box, from which understanding how the information is\nstructured is rather complex. Interpretability of a model allows understanding\nhow the vector space is structured without the need for external information,\nand thus can be audited more easily. With both these limitations in mind, we\npropose a novel framework to efficiently embed network vertices in an\ninterpretable vector space. Our Lower Dimension Bipartite Framework (LDBGF)\nleverages the bipartite projection of a network using cliques to reduce\ndimensionality. Along with LDBGF, we introduce two implementations of this\nframework that rely on communities instead of cliques: SINr-NR and SINr-MF. We\nshow that SINr-MF can perform well on classical graphs and SINr-NR can produce\nhigh-quality graph and word embeddings that are interpretable and stable across\nruns.\n","subjects":["Computer Science/Computation and Language","Computer Science/Artificial Intelligence","Computer Science/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"gXIBPuGicnpujixYRZ_mwEacqmRxtfDwhpsaFZ_XgMA","pdfSize":"1241461"}