{"id":"2412.01937","title":"Approximately Optimal Search on a Higher-dimensional Sliding Puzzle","authors":"Nono SC Merleau, Miguel O'Malley, \\'Erika Rold\\'an and Sayan Mukherjee","authorsParsed":[["Merleau","Nono SC",""],["O'Malley","Miguel",""],["Roldán","Érika",""],["Mukherjee","Sayan",""]],"versions":[{"version":"v1","created":"Mon, 2 Dec 2024 19:59:06 GMT"}],"updateDate":"2024-12-04","timestamp":1733169546000,"abstract":"  Higher-dimensional sliding puzzles are constructed on the vertices of a\n$d$-dimensional hypercube, where $2^d-l$ vertices are distinctly coloured.\nRings with the same colours are initially set randomly on the vertices of the\nhypercube. The goal of the puzzle is to move each of the $2^d-l$ rings to\npre-defined target vertices on the cube. In this setting, the $k$-rule\nconstraint represents a generalisation of edge collision for the movement of\ncolours between vertices, allowing movement only when a hypercube face of\ndimension $k$ containing a ring is completely free of other rings. Starting\nfrom an initial configuration, what is the minimum number of moves needed to\nmake ring colours match the vertex colours? An algorithm that provides us with\nsuch a number is called God's algorithm. When such an algorithm exists, it does\nnot have a polynomial time complexity, at least in the case of the 15-puzzle\ncorresponding to $k=1$ in the cubical puzzle. This paper presents a\ncomprehensive computational study of different scenarios of the\nhigher-dimensional puzzle. A benchmark of three computational techniques, an\nexact algorithm (the A* search) and two approximately optimal search techniques\n(an evolutionary algorithm (EA) and reinforcement learning (RL)) is presented\nin this work. The experiments show that all three methods can successfully\nsolve the puzzle of dimension three for different face dimensions and across\nvarious difficulty levels. When the dimension increases, the A* search fails,\nand RL and EA methods can still provide a generally acceptable solution, i.e. a\ndistribution of a number of moves with a median value of less than $30$.\nOverall, the EA method consistently requires less computational time, while\nfailing in most cases to minimise the number of moves for the puzzle dimensions\n$d=4$ and $d=5$.\n","subjects":["Computer Science/Artificial Intelligence","Computer Science/Discrete Mathematics","Computer Science/Machine Learning","Computer Science/Neural and Evolutionary Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"DmNGbVZPuhO3F6imPPQ5BVrsr4Xd3DB3HcKUSORN_gw","pdfSize":"1258338"}