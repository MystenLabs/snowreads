{"id":"2407.01489","title":"Agentless: Demystifying LLM-based Software Engineering Agents","authors":"Chunqiu Steven Xia, Yinlin Deng, Soren Dunn, Lingming Zhang","authorsParsed":[["Xia","Chunqiu Steven",""],["Deng","Yinlin",""],["Dunn","Soren",""],["Zhang","Lingming",""]],"versions":[{"version":"v1","created":"Mon, 1 Jul 2024 17:24:45 GMT"}],"updateDate":"2024-07-02","timestamp":1719854685000,"abstract":"  Recent advancements in large language models (LLMs) have significantly\nadvanced the automation of software development tasks, including code\nsynthesis, program repair, and test generation. More recently, researchers and\nindustry practitioners have developed various autonomous LLM agents to perform\nend-to-end software development tasks. These agents are equipped with the\nability to use tools, run commands, observe feedback from the environment, and\nplan for future actions. However, the complexity of these agent-based\napproaches, together with the limited abilities of current LLMs, raises the\nfollowing question: Do we really have to employ complex autonomous software\nagents? To attempt to answer this question, we build Agentless -- an agentless\napproach to automatically solve software development problems. Compared to the\nverbose and complex setup of agent-based approaches, Agentless employs a\nsimplistic two-phase process of localization followed by repair, without\nletting the LLM decide future actions or operate with complex tools. Our\nresults on the popular SWE-bench Lite benchmark show that surprisingly the\nsimplistic Agentless is able to achieve both the highest performance (27.33%)\nand lowest cost (\\$0.34) compared with all existing open-source software\nagents! Furthermore, we manually classified the problems in SWE-bench Lite and\nfound problems with exact ground truth patch or insufficient/misleading issue\ndescriptions. As such, we construct SWE-bench Lite-S by excluding such\nproblematic issues to perform more rigorous evaluation and comparison. Our work\nhighlights the current overlooked potential of a simple, interpretable\ntechnique in autonomous software development. We hope Agentless will help reset\nthe baseline, starting point, and horizon for autonomous software agents, and\ninspire future work along this crucial direction.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Computation and Language","Computing Research Repository/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"mVYubDPLrP0wfOUwievXYQQQEeBVupHTXxGyLtwEjGc","pdfSize":"1104563"}