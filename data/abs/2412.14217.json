{"id":"2412.14217","title":"Development and Adoption of SATD Detection Tools: A State-of-practice\n  Report","authors":"Edi Sutoyo, Andrea Capiluppi","authorsParsed":[["Sutoyo","Edi",""],["Capiluppi","Andrea",""]],"versions":[{"version":"v1","created":"Wed, 18 Dec 2024 12:06:53 GMT"}],"updateDate":"2024-12-20","timestamp":1734523613000,"abstract":"  Self-Admitted Technical Debt (SATD) refers to instances where developers\nknowingly introduce suboptimal solutions into code and document them, often\nthrough textual artifacts. This paper provides a comprehensive\nstate-of-practice report on the development and adoption of SATD detection\ntools. Through a systematic review of the available literature and tools, we\nexamined their overall accessibility. Our findings reveal that, although SATD\ndetection tools are crucial for maintaining software quality, many face\nchallenges such as technological obsolescence, poor maintenance, and limited\nplatform compatibility. Only a small number of tools are actively maintained,\nhindering their widespread adoption. This report discusses common anti-patterns\nin tool development, proposes corrections, and highlights the need for\nimplementing Findable, Accessible, Interoperable, and Reusable (FAIR)\nprinciples and fostering greater collaboration between academia and industry to\nensure the sustainability and efficacy of these tools. The insights presented\nhere aim to drive more robust management of technical debt and enhance the\nreliability of SATD tools.\n","subjects":["Computer Science/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"Y39vRmoCakwDZB-2k_0vBZopQ5JySF2xdl4o-H2sKl0","pdfSize":"617365"}