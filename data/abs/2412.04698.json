{
  "id": "2412.04698",
  "title": "One-Hop Sub-Query Result Caches for Graph Database Systems",
  "authors": "Hieu Nguyen, Jun Li, Shahram Ghandeharizadeh",
  "authorsParsed": [
    [
      "Nguyen",
      "Hieu",
      ""
    ],
    [
      "Li",
      "Jun",
      ""
    ],
    [
      "Ghandeharizadeh",
      "Shahram",
      ""
    ]
  ],
  "versions": [
    {
      "version": "v1",
      "created": "Fri, 6 Dec 2024 01:20:47 GMT"
    }
  ],
  "updateDate": "2024-12-09",
  "timestamp": 1733448047000,
  "abstract": "  This paper introduces a novel one-hop sub-query result cache for processing\ngraph read transactions, gR-Txs, in a graph database system. The one-hop\nnavigation is from a vertex using either its in-coming or out-going edges with\nselection predicates that filter edges and vertices. Its cache entry identifies\na unique one-hop sub-query (key) and its result set consisting of immutable\nvertex ids (value). When processing a gR-Tx, the query processor identifies its\nsequence of individual one-hop sub-queries and looks up their results in the\ncache. A cache hit fetches less data from the storage manager and eliminates\nthe requirement to process the one-hop sub-query. A cache miss populates the\ncache asynchronously and in a transactional manner, maintaining the separation\nof read and write paths of our transactional storage manager. A graph read and\nwrite transaction, gRW-Tx, identifies the impacted cache entries and either\ndeletes or updates them. Our implementation of the cache is inside the graph\nquery processing engine and transparent to a user application. We evaluate the\ncache using our eCommerce production workload and with rules that re-write\ngraph queries to maximize the performance enhancements observed with the cache.\nObtained results show the cache enhances 95th and 99th percentile of query\nresponse times by at least 2x and 1.63x, respectively. When combined with query\nre-writing, the enhancements are at least 2.33x and 4.48x, respectively. An\ninteresting result is the significant performance enhancement observed by the\nindirect beneficiaries of the cache, gRW-Txs and gR-Txs that do not reference\none-hop sub-queries. The cache frees system resources to expedite their\nprocessing significantly.\n",
  "subjects": [
    "Computer Science/Databases",
    "Computer Science/Performance"
  ],
  "license": "http://creativecommons.org/licenses/by/4.0/",
  "blobId": "HkOoq9msb7BCNkNNWqOSU_etpeBuaFRBJFRcVPZpXAM",
  "pdfSize": "2090939"
}