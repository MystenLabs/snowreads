{"id":"2407.02499","title":"Amortizing Pragmatic Program Synthesis with Rankings","authors":"Yewen Pu, Saujas Vaduguru, Priyan Vaithilingam, Elena Glassman, Daniel\n  Fried","authorsParsed":[["Pu","Yewen",""],["Vaduguru","Saujas",""],["Vaithilingam","Priyan",""],["Glassman","Elena",""],["Fried","Daniel",""]],"versions":[{"version":"v1","created":"Sat, 1 Jun 2024 22:55:33 GMT"}],"updateDate":"2024-07-17","timestamp":1717282533000,"abstract":"  The usage of Rational Speech Acts (RSA) framework has been successful in\nbuilding \\emph{pragmatic} program synthesizers that return programs which, in\naddition to being logically consistent with user-generated examples, account\nfor the fact that a user chooses their examples informatively. We present a\ngeneral method of amortizing the slow, exact RSA synthesizer. Our method first\nquery the exact RSA synthesizer to compile a communication dataset. The dataset\ncontains a number of example-dependent rankings of subsets of programs. It then\ndistills a \\textit{single} global ranking of all programs as an approximation\nto every ranking in the dataset. This global ranking is then used at inference\ntime to rank multiple logically consistent candidate programs generated from a\nfast, non-pragmatic synthesizer. Experiments on two program synthesis domains\nusing our ranking method resulted in orders of magnitudes of speed ups compared\nto the exact RSA synthesizer, while being more accurate than a non-pragmatic\nsynthesizer when communicating with humans. Finally, we prove that in the\nspecial case of synthesis from a single example, this approximation is exact.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"noLYn-BxRB9CF-cxAFjUzVAvSMx2EZn0ovNNe-HDEhQ","pdfSize":"3894280"}