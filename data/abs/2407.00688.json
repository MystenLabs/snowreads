{"id":"2407.00688","title":"On the Number of Quantifiers Needed to Define Boolean Functions","authors":"Marco Carmosino, Ronald Fagin, Neil Immerman, Phokion Kolaitis,\n  Jonathan Lenchner, and Rik Sengupta","authorsParsed":[["Carmosino","Marco",""],["Fagin","Ronald",""],["Immerman","Neil",""],["Kolaitis","Phokion",""],["Lenchner","Jonathan",""],["Sengupta","Rik",""]],"versions":[{"version":"v1","created":"Sun, 30 Jun 2024 12:59:01 GMT"},{"version":"v2","created":"Mon, 19 Aug 2024 20:08:47 GMT"}],"updateDate":"2024-08-21","timestamp":1719752341000,"abstract":"  The number of quantifiers needed to express first-order (FO) properties is\ncaptured by two-player combinatorial games called multi-structural games. We\nanalyze these games on binary strings with an ordering relation, using a\ntechnique we call parallel play, which significantly reduces the number of\nquantifiers needed in many cases. Ordered structures such as strings have\nhistorically been notoriously difficult to analyze in the context of these and\nsimilar games. Nevertheless, in this paper, we provide essentially tight upper\nbounds on the number of quantifiers needed to characterize different-sized\nsubsets of strings. The results immediately give bounds on the number of\nquantifiers necessary to define several different classes of Boolean functions.\nOne of our results is analogous to Lupanov's upper bounds on circuit size and\nformula size in propositional logic: we show that every Boolean function on\n$n$-bit inputs can be defined by a FO sentence having $(1 +\n\\varepsilon)n\\log(n) + O(1)$ quantifiers, and that this is essentially tight.\nWe reduce this number to $(1 + \\varepsilon)\\log(n) + O(1)$ when the Boolean\nfunction in question is sparse.\n","subjects":["Computing Research Repository/Logic in Computer Science","Computing Research Repository/Computational Complexity"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"Ge3znQ9m_c-ttNv1o3wC7d05fvs9mcak5QRx7zjI6Lg","pdfSize":"967358"}