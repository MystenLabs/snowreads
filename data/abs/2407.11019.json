{"id":"2407.11019","title":"Efficacy of Various Large Language Models in Generating Smart Contracts","authors":"Siddhartha Chatterjee, Bina Ramamurthy","authorsParsed":[["Chatterjee","Siddhartha",""],["Ramamurthy","Bina",""]],"versions":[{"version":"v1","created":"Fri, 28 Jun 2024 17:31:47 GMT"}],"updateDate":"2024-07-17","timestamp":1719595907000,"abstract":"  This study analyzes the application of code-generating Large Language Models\nin the creation of immutable Solidity smart contracts on the Ethereum\nBlockchain. Other works such as Evaluating Large Language Models Trained on\nCode, Mark Chen et. al (2012) have previously analyzed Artificial Intelligence\ncode generation abilities. This paper aims to expand this to a larger scope to\ninclude programs where security and efficiency are of utmost priority such as\nsmart contracts. The hypothesis leading into the study was that LLMs in general\nwould have difficulty in rigorously implementing security details in the code,\nwhich was shown through our results, but surprisingly generally succeeded in\nmany common types of contracts. We also discovered a novel way of generating\nsmart contracts through new prompting strategies.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Computation and Language"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"33iXUTyHlur6w4VLgEZId8peGJAXfxte_Iuj_nxTQfs","pdfSize":"1897092","objectId":"0x985e41330161cf726bdd17cafc6ea5f279a364ca4546c0e55379e3a3d40e3b7a","registeredEpoch":"2","certifiedEpoch":"2","startEpoch":"2","endEpoch":"202"}
