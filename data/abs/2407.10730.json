{"id":"2407.10730","title":"ConvBench: A Comprehensive Benchmark for 2D Convolution Primitive\n  Evaluation","authors":"Lucas Alvarenga, Victor Ferrari, Rafael Souza, Marcio Pereira, Guido\n  Araujo","authorsParsed":[["Alvarenga","Lucas",""],["Ferrari","Victor",""],["Souza","Rafael",""],["Pereira","Marcio",""],["Araujo","Guido",""]],"versions":[{"version":"v1","created":"Mon, 15 Jul 2024 13:58:24 GMT"}],"updateDate":"2024-07-16","timestamp":1721051904000,"abstract":"  Convolution is a compute-intensive operation placed at the heart of\nConvolution Neural Networks (CNNs). It has led to the development of many\nhigh-performance algorithms, such as Im2col-GEMM, Winograd, and\nDirect-Convolution. However, the comparison of different convolution algorithms\nis an error-prone task as it requires specific data layouts and system\nresources. Failure to address these requirements might lead to unwanted time\npenalties. Thus, considering all processing steps within convolution algorithms\nis essential to comprehensively evaluate and fairly compare their performance.\nFurthermore, most known convolution benchmarking adopts ad-hoc testing suites\nwith limited coverage and handmade operations. This paper proposes ConvBench, a\nprimitive-level benchmark for the evaluation and comparison of convolution\nalgorithms. It assesses 9243 convolution operations derived from 1097\nreal-world deep learning models, resulting in performance and execution\nbreakdown graphs for a detailed evaluation. ConvBench capability is evaluated\nacross the Sliced Convolution (SConv) algorithm. The experiments showed results\nfaster than Im2col-GEMM in 93.6% of the convolutions. However, the use of\nConvBench allowed the delving into the remaining 6.4% underperforming\nconvolutions, uncovering a critical slowdown of 79.5% on average of SConv's\npacking step. This analysis underscores a potential source of optimization for\nSConv, opening up new paths for convolution designers to improve their\nalgorithms.\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition","Computing Research Repository/Performance"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"TydiFmnsQlqfZTtCehw-lqqv0pDflFjjJrpwkwXDs5w","pdfSize":"655079"}