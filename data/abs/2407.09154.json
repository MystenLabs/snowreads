{"id":"2407.09154","title":"Simple Linear Loops: Algebraic Invariants and Applications","authors":"Rida Ait El Manssour, George Kenison, Mahsa Shirmohammadi, Anton\n  Varonka","authorsParsed":[["Manssour","Rida Ait El",""],["Kenison","George",""],["Shirmohammadi","Mahsa",""],["Varonka","Anton",""]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 10:38:04 GMT"}],"updateDate":"2024-07-15","timestamp":1720780684000,"abstract":"  Automatic generation of loop invariants is a fundamental challenge in\nsoftware verification. While this task is undecidable in general, it is\ndecidable for certain restricted classes of programs. This work focuses on\ninvariant generation for (branching-free) loops with a single linear update.\n  Our primary contribution is a polynomial-space algorithm that computes the\nstrongest algebraic invariant for simple linear loops, generating all\npolynomial equations that hold among program variables across all reachable\nstates. The key to achieving our complexity bounds lies in mitigating the\nblowup associated with variable elimination and Gr\\\"obner basis computation, as\nseen in prior works. Our procedure runs in polynomial time when the number of\nprogram variables is fixed.\n  We examine various applications of our results on invariant generation,\nfocusing on invariant verification and loop synthesis. The invariant\nverification problem investigates whether a polynomial ideal defining an\nalgebraic set serves as an invariant for a given linear loop. We show that this\nproblem is coNP-complete and lies in PSPACE when the input ideal is given in\ndense or sparse representations, respectively. In the context of loop\nsynthesis, we aim to construct a loop with an infinite set of reachable states\nthat upholds a specified algebraic property as an invariant. The strong\nsynthesis variant of this problem requires the construction of loops for which\nthe given property is the strongest invariant. In terms of hardness,\nsynthesising loops over integers (or rationals) is as hard as Hilbert's Tenth\nproblem (or its analogue over the rationals). When loop constants are\nconstrained to bit-bounded rational numbers, we demonstrate that loop synthesis\nand its strong variant are both decidable in PSPACE, and in NP when the number\nof program variables is fixed.\n","subjects":["Computing Research Repository/Computational Complexity","Mathematics/Algebraic Geometry"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"cd2oNJFf2jZhZEt35U7-gK0EDz2WcntdjkKHi5R4kjY","pdfSize":"654879","objectId":"0xf27ff249b4caa4ff50b33aeb8da275be151c56f52225ba55e7363527f0730db9","registeredEpoch":"2","certifiedEpoch":"2","startEpoch":"2","endEpoch":"202"}
