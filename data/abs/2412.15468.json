{"id":"2412.15468","title":"Computing the Non-Dominated Flexible Skyline in Vertically Distributed\n  Datasets with No Random Access","authors":"Davide Martinenghi","authorsParsed":[["Martinenghi","Davide",""]],"versions":[{"version":"v1","created":"Fri, 20 Dec 2024 00:06:13 GMT"}],"updateDate":"2024-12-23","timestamp":1734653173000,"abstract":"  In today's data-driven world, algorithms operating with vertically\ndistributed datasets are crucial due to the increasing prevalence of\nlarge-scale, decentralized data storage. These algorithms enhance data privacy\nby processing data locally, reducing the need for data transfer and minimizing\nexposure to breaches. They also improve scalability, as they can handle vast\namounts of data spread across multiple locations without requiring centralized\naccess. Top-k queries have been studied extensively under this lens, and are\nparticularly suitable in applications involving healthcare, finance, and IoT,\nwhere data is often sensitive and distributed across various sources. Classical\ntop-k algorithms are based on the availability of two kinds of access to\nsources: sorted access, i.e., a sequential scan in the internal sort order, one\ntuple at a time, of the dataset; random access, which provides all the\ninformation available at a data source for a tuple whose id is known. However,\nin scenarios where data retrieval costs are high or data is streamed in\nreal-time or, simply, data are from external sources that only offer sorted\naccess, random access may become impractical or impossible, due to latency\nissues or data access constraints. Fortunately, a long tradition of algorithms\ndesigned for the \"no random access\" (NRA) scenario exists for classical top-k\nqueries. Yet, these do not cover the recent advances in ranking queries,\nproposing hybridizations of top-k queries (which are preference-aware and\ncontrol the output size) and skyline queries (which are preference-agnostic and\nhave uncontrolled output size). The non-dominated flexible skyline (ND) is one\nsuch proposal. We introduce an algorithm for computing ND in the NRA scenario,\nprove its correctness and optimality within its class, and provide an\nexperimental evaluation covering a wide range of cases, with both synthetic and\nreal datasets.\n","subjects":["Computer Science/Databases"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"P77KrD2xAQSyMqt_agxCLgRwtMOxpr9s5QOg9GKc2jM","pdfSize":"748899"}