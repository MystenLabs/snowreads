{"id":"2412.01051","title":"An Efficient Unsupervised Framework for Convex Quadratic Programs via\n  Deep Unrolling","authors":"Linxin Yang, Bingheng Li, Tian Ding, Jianghua Wu, Akang Wang, Yuyi\n  Wang, Jiliang Tang, Ruoyu Sun, Xiaodong Luo","authorsParsed":[["Yang","Linxin",""],["Li","Bingheng",""],["Ding","Tian",""],["Wu","Jianghua",""],["Wang","Akang",""],["Wang","Yuyi",""],["Tang","Jiliang",""],["Sun","Ruoyu",""],["Luo","Xiaodong",""]],"versions":[{"version":"v1","created":"Mon, 2 Dec 2024 02:22:44 GMT"}],"updateDate":"2024-12-03","timestamp":1733106164000,"abstract":"  Quadratic programs (QPs) arise in various domains such as machine learning,\nfinance, and control. Recently, learning-enhanced primal-dual hybrid gradient\n(PDHG) methods have shown great potential in addressing large-scale linear\nprograms; however, this approach has not been extended to QPs. In this work, we\nfocus on unrolling \"PDQP\", a PDHG algorithm specialized for convex QPs.\nSpecifically, we propose a neural network model called \"PDQP-net\" to learn\noptimal QP solutions. Theoretically, we demonstrate that a PDQP-net of\npolynomial size can align with the PDQP algorithm, returning optimal\nprimal-dual solution pairs. We propose an unsupervised method that incorporates\nKKT conditions into the loss function. Unlike the standard learning-to-optimize\nframework that requires optimization solutions generated by solvers, our\nunsupervised method adjusts the network weights directly from the evaluation of\nthe primal-dual gap. This method has two benefits over supervised learning:\nfirst, it helps generate better primal-dual gap since the primal-dual gap is in\nthe objective function; second, it does not require solvers. We show that\nPDQP-net trained in this unsupervised manner can effectively approximate\noptimal QP solutions. Extensive numerical experiments confirm our findings,\nindicating that using PDQP-net predictions to warm-start PDQP can achieve up to\n45% acceleration on QP instances. Moreover, it achieves 14% to 31% acceleration\non out-of-distribution instances.\n","subjects":["Mathematics/Optimization and Control","Computer Science/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"_qonYQvyc2LaKTk_fvKsioOnkYT0HbkMPRROMbVrTjA","pdfSize":"659864"}