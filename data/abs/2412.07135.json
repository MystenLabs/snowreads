{"id":"2412.07135","title":"Oreo: Protecting ASLR Against Microarchitectural Attacks (Extended\n  Version)","authors":"Shixin Song, Joseph Zhang, Mengjia Yan","authorsParsed":[["Song","Shixin",""],["Zhang","Joseph",""],["Yan","Mengjia",""]],"versions":[{"version":"v1","created":"Tue, 10 Dec 2024 02:47:00 GMT"}],"updateDate":"2024-12-11","timestamp":1733798820000,"abstract":"  Address Space Layout Randomization (ASLR) is one of the most prominently\ndeployed mitigations against memory corruption attacks. ASLR randomly shuffles\nprogram virtual addresses to prevent attackers from knowing the location of\nprogram contents in memory. Microarchitectural side channels have been shown to\ndefeat ASLR through various hardware mechanisms. We systematically analyze\nexisting microarchitectural attacks and identify multiple leakage paths. Given\nthe vast attack surface exposed by ASLR, it is challenging to effectively\nprevent leaking the ASLR secret against microarchitectural attacks.\n  Motivated by this, we present Oreo, a software-hardware co-design mitigation\nthat strengthens ASLR against these attacks. Oreo uses a new memory mapping\ninterface to remove secret randomized bits in virtual addresses before\ntranslating them to their corresponding physical addresses. This extra step\nhides randomized virtual addresses from microarchitecture structures,\npreventing side channels from leaking ASLR secrets. Oreo is transparent to user\nprograms and incurs low overhead. We prototyped and evaluated our design on\nLinux using the hardware simulator gem5.\n","subjects":["Computer Science/Cryptography and Security","Computer Science/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by-sa/4.0/","blobId":"m65Nr55Bq0OC0-R4pCW4b6uIBR8kjIgPgWDkwnUAj9o","pdfSize":"1178794"}