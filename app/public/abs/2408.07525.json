{"id":"2408.07525","title":"Dinkel: Testing Graph Database Engines via State-Aware Query Generation","authors":"Dominic W\\\"ust, Zu-Ming Jiang, Zhendong Su","authorsParsed":[["WÃ¼st","Dominic",""],["Jiang","Zu-Ming",""],["Su","Zhendong",""]],"versions":[{"version":"v1","created":"Wed, 14 Aug 2024 13:00:24 GMT"}],"updateDate":"2024-08-15","timestamp":1723640424000,"abstract":"  Graph database management systems (GDBMSs) store and manipulate graph data\nand form a core part of many data-driven applications. To ensure their\nreliability, several approaches have been proposed to test GDBMSs by generating\nqueries in Cypher, the most popular graph query language. However, Cypher\nallows queries with complicated state changes and data dependencies, which\nexisting approaches do not support and thus fail to generate valid, complex\nqueries, thereby missing many bugs in GDBMSs.\n  In this paper, we propose a novel state-aware testing approach to generate\ncomplex Cypher queries for GDBMSs. Our approach models two kinds of graph\nstate, query context and graph schema. Query context describes the available\nCypher variables and their corresponding scopes, whereas graph schema\nsummarizes the manipulated graph labels and properties. While generating Cypher\nqueries, we modify the graph states on the fly to ensure each clause within the\nquery can reference the correct state information. In this way, our approach\ncan generate Cypher queries with multiple state changes and complicated data\ndependencies while retaining high query validity. We implemented this approach\nas a fully automatic GDBMS testing framework, Dinkel, and evaluated it on three\npopular open-source GDBMSs, namely Neo4j, RedisGraph, and Apache AGE. In total,\nDinkel found 60 bugs, among which 58 were confirmed and 51 fixed. Our\nevaluation results show that Dinkel can effectively generate complex queries\nwith high validity (93.43%). Compared to existing approaches, Dinkel can cover\nover 60% more code and find more bugs within the 48-hour testing campaign. We\nexpect Dinkel's powerful test-case generation to benefit GDBMS testing and help\nstrengthen the reliability of GDBMSs.\n","subjects":["Computing Research Repository/Databases","Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"ju5hvllmy94-nCdGwSN6ZaUta_T3ww2P1tQxl8n9x_A","pdfSize":"1043596"}
