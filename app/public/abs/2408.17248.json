{"id":"2408.17248","title":"DeTRAP: RISC-V Return Address Protection With Debug Triggers","authors":"Isaac Richter (University of Rochester) and Jie Zhou (George\n  Washington University) and John Criswell (University of Rochester)","authorsParsed":[["Richter","Isaac","","University of Rochester"],["Zhou","Jie","","George\n  Washington University"],["Criswell","John","","University of Rochester"]],"versions":[{"version":"v1","created":"Fri, 30 Aug 2024 12:42:54 GMT"}],"updateDate":"2024-09-02","timestamp":1725021774000,"abstract":"  Modern microcontroller software is often written in C/C++ and suffers from\ncontrol-flow hijacking vulnerabilities. Previous mitigations suffer from high\nperformance and memory overheads and require either the presence of memory\nprotection hardware or sophisticated program analysis in the compiler.\n  This paper presents DeTRAP (Debug Trigger Return Address Protection). DeTRAP\nutilizes a full implementation of the RISC-V debug hardware specification to\nprovide a write-protected shadow stack for return addresses. Unlike previous\nwork, DeTRAP requires no memory protection hardware and only minor changes to\nthe compiler toolchain.\n  We tested DeTRAP on an FPGA running a 32-bit RISC-V microcontroller core and\nfound average execution time overheads to be between 0.5% and 1.9% on evaluated\nbenchmark suites with code size overheads averaging 7.9% or less.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}