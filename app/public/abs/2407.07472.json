{"id":"2407.07472","title":"Rectifier: Code Translation with Corrector via LLMs","authors":"Xin Yin, Chao Ni, Tien N. Nguyen, Shaohua Wang, Xiaohu Yang","authorsParsed":[["Yin","Xin",""],["Ni","Chao",""],["Nguyen","Tien N.",""],["Wang","Shaohua",""],["Yang","Xiaohu",""]],"versions":[{"version":"v1","created":"Wed, 10 Jul 2024 08:58:41 GMT"}],"updateDate":"2024-07-11","timestamp":1720601921000,"abstract":"  Software migration is garnering increasing attention with the evolution of\nsoftware and society. Early studies mainly relied on handcrafted translation\nrules to translate between two languages, the translation process is\nerror-prone and time-consuming. In recent years, researchers have begun to\nexplore the use of pre-trained large language models (LLMs) in code\ntranslation. However, code translation is a complex task that LLMs would\ngenerate mistakes during code translation, they all produce certain types of\nerrors when performing code translation tasks, which include (1) compilation\nerror, (2) runtime error, (3) functional error, and (4) non-terminating\nexecution. We found that the root causes of these errors are very similar (e.g.\nfailure to import packages, errors in loop boundaries, operator errors, and\nmore). In this paper, we propose a general corrector, namely Rectifier, which\nis a micro and universal model for repairing translation errors. It learns from\nerrors generated by existing LLMs and can be widely applied to correct errors\ngenerated by any LLM. The experimental results on translation tasks between\nC++, Java, and Python show that our model has effective repair ability, and\ncross experiments also demonstrate the robustness of our method.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}