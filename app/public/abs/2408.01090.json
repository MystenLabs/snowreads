{"id":"2408.01090","title":"General-purpose Dataflow Model with Neuromorphic Primitives","authors":"Weihao Zhang and Yu Du and Hongyi Li and Songchen Ma and Rong Zhao","authorsParsed":[["Zhang","Weihao",""],["Du","Yu",""],["Li","Hongyi",""],["Ma","Songchen",""],["Zhao","Rong",""]],"versions":[{"version":"v1","created":"Fri, 2 Aug 2024 08:09:13 GMT"}],"updateDate":"2024-08-05","timestamp":1722586153000,"abstract":"  Neuromorphic computing exhibits great potential to provide high-performance\nbenefits in various applications beyond neural networks. However, a\ngeneral-purpose program execution model that aligns with the features of\nneuromorphic computing is required to bridge the gap between program\nversatility and neuromorphic hardware efficiency. The dataflow model offers a\npotential solution, but it faces high graph complexity and incompatibility with\nneuromorphic hardware when dealing with control flow programs, which decreases\nthe programmability and performance. Here, we present a dataflow model tailored\nfor neuromorphic hardware, called neuromorphic dataflow, which provides a\ncompact, concise, and neuromorphic-compatible program representation for\ncontrol logic. The neuromorphic dataflow introduces \"when\" and \"where\"\nprimitives, which restructure the view of control. The neuromorphic dataflow\nembeds these primitives in the dataflow schema with the plasticity inherited\nfrom the spiking algorithms. Our method enables the deployment of\ngeneral-purpose programs on neuromorphic hardware with both programmability and\nplasticity, while fully utilizing the hardware's potential.\n","subjects":["Computing Research Repository/Computation and Language","Computing Research Repository/Hardware Architecture","Computing Research Repository/Neural and Evolutionary Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"Gb6-hn-baIVNwtvu1q4bELBybOICsUIfQCgjKueDjvg","pdfSize":"750964"}
