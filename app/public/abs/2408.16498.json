{"id":"2408.16498","title":"A Survey on Evaluating Large Language Models in Code Generation Tasks","authors":"Liguo Chen, Qi Guo, Hongrui Jia, Zhengran Zeng, Xin Wang, Yijiang Xu,\n  Jian Wu, Yidong Wang, Qing Gao, Jindong Wang, Wei Ye, Shikun Zhang","authorsParsed":[["Chen","Liguo",""],["Guo","Qi",""],["Jia","Hongrui",""],["Zeng","Zhengran",""],["Wang","Xin",""],["Xu","Yijiang",""],["Wu","Jian",""],["Wang","Yidong",""],["Gao","Qing",""],["Wang","Jindong",""],["Ye","Wei",""],["Zhang","Shikun",""]],"versions":[{"version":"v1","created":"Thu, 29 Aug 2024 12:56:06 GMT"}],"updateDate":"2024-08-30","timestamp":1724936166000,"abstract":"  This paper provides a comprehensive review of the current methods and metrics\nused to evaluate the performance of Large Language Models (LLMs) in code\ngeneration tasks. With the rapid growth in demand for automated software\ndevelopment, LLMs have demonstrated significant potential in the field of code\ngeneration. The paper begins by reviewing the historical development of LLMs\nand their applications in code generation. Next, it details various methods and\nmetrics for assessing the code generation capabilities of LLMs, including code\ncorrectness, efficiency, readability, and evaluation methods based on expert\nreview and user experience. The paper also evaluates the widely used benchmark\ndatasets, identifying their limitations and proposing directions for future\nimprovements. Specifically, the paper analyzes the performance of code\ngeneration models across different tasks by combining multiple evaluation\nmetrics, such as code compilation/interpretation success rates, unit test pass\nrates, and performance and efficiency metrics, to comprehensively assess the\npractical application of LLMs in code generation. Finally, the paper discusses\nthe challenges faced in evaluating LLMs in code generation, particularly how to\nensure the comprehensiveness and accuracy of evaluation methods and how to\nadapt to the evolving practices of software development. These analyses and\ndiscussions provide valuable insights for further optimizing and improving the\napplication of LLMs in code generation tasks.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"jGQpa-g-im2Tvgv3SNUeaRcwi_R7sBhp8-H8x4gIL6E","pdfSize":"451831"}
