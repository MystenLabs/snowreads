{"id":"2407.11999","title":"Optimising GPGPU Execution Through Runtime Micro-Architecture Parameter\n  Analysis","authors":"Giuseppe M. Sarda and Nimish Shah and Debjyoti Bhattacharjee and Peter\n  Debacker and Marian Verhelst","authorsParsed":[["Sarda","Giuseppe M.",""],["Shah","Nimish",""],["Bhattacharjee","Debjyoti",""],["Debacker","Peter",""],["Verhelst","Marian",""]],"versions":[{"version":"v1","created":"Fri, 14 Jun 2024 08:59:08 GMT"}],"updateDate":"2024-07-18","timestamp":1718355548000,"abstract":"  GPGPU execution analysis has always been tied to closed-source, proprietary\nbenchmarking tools that provide high-level, non-exhaustive, and/or statistical\ninformation, preventing a thorough understanding of bottlenecks and\noptimization possibilities. Open-source hardware platforms offer opportunities\nto overcome such limits and co-optimize the full {hardware-mapping-algorithm}\ncompute stack. Yet, so far, this has remained under-explored. In this work, we\nexploit micro-architecture parameter analysis to develop a hardware-aware,\nruntime mapping technique for OpenCL kernels on the open Vortex RISC-V GPGPU.\nOur method is based on trace observations and targets optimal hardware resource\nutilization to achieve superior performance and flexibility compared to\nhardware-agnostic mapping approaches. The technique was validated on different\narchitectural GPU configurations across several OpenCL kernels. Overall, our\napproach significantly enhances the performance of the open-source Vortex\nGPGPU, contributing to unlocking its potential and usability.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"6haV1Mft0zYlZ0Bf6X2UngPPabZxxZr9RToTbcBxYa4","pdfSize":"1236014","objectId":"0xdbb5b07deca75c1aa2cd3fa21ea09fe012597f094cfc8d6b261883281ec5b80f","registeredEpoch":"2","certifiedEpoch":"2","startEpoch":"2","endEpoch":"202"}
