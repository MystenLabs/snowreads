{"id":"2407.05445","title":"Shared Randomness Helps with Local Distributed Problems","authors":"Alkida Balliu, Mohsen Ghaffari, Fabian Kuhn, Augusto Modanese, Dennis\n  Olivetti, Mika\\\"el Rabie, Jukka Suomela, Jara Uitto","authorsParsed":[["Balliu","Alkida",""],["Ghaffari","Mohsen",""],["Kuhn","Fabian",""],["Modanese","Augusto",""],["Olivetti","Dennis",""],["Rabie","MikaÃ«l",""],["Suomela","Jukka",""],["Uitto","Jara",""]],"versions":[{"version":"v1","created":"Sun, 7 Jul 2024 17:14:23 GMT"}],"updateDate":"2024-07-09","timestamp":1720372463000,"abstract":"  By prior work, we have many results related to distributed graph algorithms\nfor problems that can be defined with local constraints; the formal framework\nused in prior work is locally checkable labeling problems (LCLs), introduced by\nNaor and Stockmeyer in the 1990s. It is known, for example, that if we have a\ndeterministic algorithm that solves an LCL in $o(\\log n)$ rounds, we can speed\nit up to $O(\\log^*n)$ rounds, and if we have a randomized $O(\\log^*n)$ rounds\nalgorithm, we can derandomize it for free.\n  It is also known that randomness helps with some LCL problems: there are LCL\nproblems with randomized complexity $\\Theta(\\log\\log n)$ and deterministic\ncomplexity $\\Theta(\\log n)$. However, so far there have not been any LCL\nproblems in which the use of shared randomness has been necessary; in all prior\nalgorithms it has been enough that the nodes have access to their own private\nsources of randomness.\n  Could it be the case that shared randomness never helps with LCLs? Could we\nhave a general technique that takes any distributed graph algorithm for any LCL\nthat uses shared randomness, and turns it into an equally fast algorithm where\nprivate randomness is enough?\n  In this work we show that the answer is no. We present an LCL problem $\\Pi$\nsuch that the round complexity of $\\Pi$ is $\\Omega(\\sqrt n)$ in the usual\nrandomized \\local model with private randomness, but if the nodes have access\nto a source of shared randomness, then the complexity drops to $O(\\log n)$.\n  As corollaries, we also resolve several other open questions related to the\nlandscape of distributed computing in the context of LCL problems. In\nparticular, problem $\\Pi$ demonstrates that distributed quantum algorithms for\nLCL problems strictly benefit from a shared quantum state. Problem $\\Pi$ also\ngives a separation between finitely dependent distributions and non-signaling\ndistributions.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/"}