{"id":"2408.09442","title":"Parallel Sampling via Counting","authors":"Nima Anari, Ruiquan Gao, Aviad Rubinstein","authorsParsed":[["Anari","Nima",""],["Gao","Ruiquan",""],["Rubinstein","Aviad",""]],"versions":[{"version":"v1","created":"Sun, 18 Aug 2024 11:42:54 GMT"}],"updateDate":"2024-08-20","timestamp":1723981374000,"abstract":"  We show how to use parallelization to speed up sampling from an arbitrary\ndistribution $\\mu$ on a product space $[q]^n$, given oracle access to counting\nqueries: $\\mathbb{P}_{X\\sim \\mu}[X_S=\\sigma_S]$ for any $S\\subseteq [n]$ and\n$\\sigma_S \\in [q]^S$. Our algorithm takes $O({n^{2/3}\\cdot\n\\operatorname{polylog}(n,q)})$ parallel time, to the best of our knowledge, the\nfirst sublinear in $n$ runtime for arbitrary distributions. Our results have\nimplications for sampling in autoregressive models. Our algorithm directly\nworks with an equivalent oracle that answers conditional marginal queries\n$\\mathbb{P}_{X\\sim \\mu}[X_i=\\sigma_i\\;\\vert\\; X_S=\\sigma_S]$, whose role is\nplayed by a trained neural network in autoregressive models. This suggests a\nroughly $n^{1/3}$-factor speedup is possible for sampling in any-order\nautoregressive models. We complement our positive result by showing a lower\nbound of $\\widetilde{\\Omega}(n^{1/3})$ for the runtime of any parallel sampling\nalgorithm making at most $\\operatorname{poly}(n)$ queries to the counting\noracle, even for $q=2$.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Machine Learning","Mathematics/Probability"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}