{"id":"2407.06320","title":"An Open-source Hardware/Software Architecture and Supporting Simulation\n  Environment to Perform Human FPV Flight Demonstrations for Unmanned Aerial\n  Vehicle Autonomy","authors":"Haosong Xiao, Prajit Krisshnakumar, Jagadeswara P K V Pothuri, Puru\n  Soni, Eric Butcher, Souma Chowdhury","authorsParsed":[["Xiao","Haosong",""],["Krisshnakumar","Prajit",""],["Pothuri","Jagadeswara P K V",""],["Soni","Puru",""],["Butcher","Eric",""],["Chowdhury","Souma",""]],"versions":[{"version":"v1","created":"Mon, 8 Jul 2024 18:37:15 GMT"},{"version":"v2","created":"Thu, 5 Sep 2024 21:12:36 GMT"}],"updateDate":"2024-09-09","timestamp":1720463835000,"abstract":"  Small multi-rotor unmanned aerial vehicles (UAVs), mainly quadcopters, are\nnowadays ubiquitous in research on aerial autonomy, including serving as\nscaled-down models for much larger aircraft such as vertical-take-off-and-lift\nvehicles for urban air mobility. Among the various research use cases,\nfirst-person-view RC flight experiments allow for collecting data on how human\npilots fly such aircraft, which could then be used to compare, contrast,\nvalidate, or train autonomous flight agents. While this could be uniquely\nbeneficial, especially for studying UAV operation in contextually complex and\nsafety-critical environments such as in human-UAV shared spaces, the lack of\ninexpensive and open-source hardware/software platforms that offer this\ncapability along with low-level access to the underlying control software and\ndata remains limited. To address this gap and significantly reduce barriers to\nhuman-guided autonomy research with UAVs, this paper presents an open-source\nsoftware architecture implemented with an inexpensive in-house built quadcopter\nplatform based on the F450 Quadcopter Frame. This setup uses two cameras to\nprovide a dual-view FPV and an open-source flight controller, Pixhawk. The\nunderlying software architecture, developed using the Python-based Kivy\nlibrary, allows logging telemetry, GPS, control inputs, and camera frame data\nin a synchronized manner on the ground station computer. Since costs (time) and\nweather constraints typically limit numbers of physical outdoor flight\nexperiments, this paper also presents a unique AirSim/Unreal Engine based\nsimulation environment and graphical user interface aka digital twin, that\nprovides a Hardware In The Loop setup via the Pixhawk flight controller. We\ndemonstrate the usability and reliability of the overall framework through a\nset of diverse physical FPV flight experiments and corresponding flight tests\nin the digital twin.\n","subjects":["Computing Research Repository/Robotics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}