{"id":"2407.03889","title":"Automated C/C++ Program Repair for High-Level Synthesis via Large\n  Language Models","authors":"Kangwei Xu, Grace Li Zhang, Xunzhao Yin, Cheng Zhuo, Ulf Schlichtmann,\n  Bing Li","authorsParsed":[["Xu","Kangwei",""],["Zhang","Grace Li",""],["Yin","Xunzhao",""],["Zhuo","Cheng",""],["Schlichtmann","Ulf",""],["Li","Bing",""]],"versions":[{"version":"v1","created":"Thu, 4 Jul 2024 12:29:06 GMT"}],"updateDate":"2024-07-08","timestamp":1720096146000,"abstract":"  In High-Level Synthesis (HLS), converting a regular C/C++ program into its\nHLS-compatible counterpart (HLS-C) still requires tremendous manual effort.\nVarious program scripts have been introduced to automate this process. But the\nresulting codes usually contain many issues that should be manually repaired by\ndevelopers. Since Large Language Models (LLMs) have the ability to automate\ncode generation, they can also be used for automated program repair in HLS.\nHowever, due to the limited training of LLMs considering hardware and software\nsimultaneously, hallucinations may occur during program repair using LLMs,\nleading to compilation failures. Besides, using LLMs for iterative repair also\nincurs a high cost. To address these challenges, we propose an LLM-driven\nprogram repair framework that takes regular C/C++ code as input and\nautomatically generates its corresponding HLS-C code for synthesis while\nminimizing human repair effort. To mitigate the hallucinations in LLMs and\nenhance the prompt quality, a Retrieval-Augmented Generation (RAG) paradigm is\nintroduced to guide the LLMs toward correct repair. In addition, we use LLMs to\ncreate a static bit width optimization program to identify the optimized bit\nwidths for variables. Moreover, LLM-driven HLS optimization strategies are\nintroduced to add/tune pragmas in HLS-C programs for circuit optimization.\nExperimental results demonstrate that the proposed LLM-driven automated\nframework can achieve much higher repair pass rates in 24 real-world\napplications compared with the traditional scripts and the direct application\nof LLMs for program repair.\n","subjects":["Electrical Engineering and Systems Science/Systems and Control","Computing Research Repository/Systems and Control"],"license":"http://creativecommons.org/licenses/by-nc-sa/4.0/"}