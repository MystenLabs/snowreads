{"id":"2408.15561","title":"CGRA4ML: A Framework to Implement Modern Neural Networks for Scientific\n  Edge Computing","authors":"G Abarajithan, Zhenghua Ma, Zepeng Li, Shrideep Koparkar, Ravidu\n  Munasinghe, Francesco Restuccia, and Ryan Kastner","authorsParsed":[["Abarajithan","G",""],["Ma","Zhenghua",""],["Li","Zepeng",""],["Koparkar","Shrideep",""],["Munasinghe","Ravidu",""],["Restuccia","Francesco",""],["Kastner","Ryan",""]],"versions":[{"version":"v1","created":"Wed, 28 Aug 2024 06:24:13 GMT"},{"version":"v2","created":"Thu, 29 Aug 2024 01:26:50 GMT"}],"updateDate":"2024-08-30","timestamp":1724826253000,"abstract":"  Scientific edge computing increasingly relies on hardware-accelerated neural\nnetworks to implement complex, near-sensor processing at extremely high\nthroughputs and low latencies. Existing frameworks like HLS4ML are effective\nfor smaller models, but struggle with larger, modern neural networks due to\ntheir requirement of spatially implementing the neural network layers and\nstoring all weights in on-chip memory. CGRA4ML is an open-source, modular\nframework designed to bridge the gap between neural network model complexity\nand extreme performance requirements. CGRA4ML extends the capabilities of\nHLS4ML by allowing off-chip data storage and supporting a broader range of\nneural network architectures, including models like ResNet, PointNet, and\ntransformers. Unlike HLS4ML, CGRA4ML generates SystemVerilog RTL, making it\nmore suitable for targeting ASIC and FPGA design flows. We demonstrate the\neffectiveness of our framework by implementing and scaling larger models that\nwere previously unattainable with HLS4ML, showcasing its adaptability and\nefficiency in handling complex computations. CGRA4ML also introduces an\nextensive verification framework, with a generated runtime firmware that\nenables its integration into different SoC platforms. CGRA4ML's minimal and\nmodular infrastructure of Python API, SystemVerilog hardware, Tcl toolflows,\nand C runtime, facilitates easy integration and experimentation, allowing\nscientists to focus on innovation rather than the intricacies of hardware\ndesign and optimization.\n","subjects":["Computing Research Repository/Hardware Architecture","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by/4.0/"}