{"id":"2408.15843","title":"On the (In)security of optimized Stern-like signature schemes","authors":"Andr\\'e Chailloux and Simona Etinski","authorsParsed":[["Chailloux","Andr√©",""],["Etinski","Simona",""]],"versions":[{"version":"v1","created":"Wed, 28 Aug 2024 15:03:38 GMT"}],"updateDate":"2024-08-29","timestamp":1724857418000,"abstract":"  Stern's signature scheme is a historically important code-based signature\nscheme. A crucial optimization of this scheme is to generate pseudo-random\nvectors and a permutation instead of random ones, and most proposals that are\nbased on Stern's signature use this optimization. However, its security has not\nbeen properly analyzed, especially when we use deterministic commitments. In\nthis article, we study the security of this optimization. We first show that\nfor some parameters, there is an attack that exploits this optimization and\nbreaks the scheme in time $O(2^{\\frac{\\lambda}{2}})$ while the claimed security\nis $\\lambda$ bits. This impacts in particular the recent Quasy-cyclic Stern\nsignature scheme [BGMS22]. Our second result shows that there is an efficient\nfix to this attack. By adding a string $salt \\in \\{0,1\\}^{2\\lambda}$ to the\nscheme, and changing slightly how the pseudo-random strings are generated, we\nprove not only that our attack doesn't work but that for any attack, the scheme\npreserves $\\lambda$ bits of security, and this fix increases the total\nsignature size by only $2\\lambda$ bits. We apply this construction to other\noptimizations on Stern's signature scheme, such as the use of Lee's metric or\nthe use of hash trees, and we show how these optimizations improve the\nsignature length of Stern's signature scheme.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://creativecommons.org/licenses/by/4.0/"}