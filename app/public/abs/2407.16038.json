{"id":"2407.16038","title":"MINT: Securely Mitigating Rowhammer with a Minimalist In-DRAM Tracker","authors":"Moinuddin Qureshi, Salman Qazi, Aamer Jaleel","authorsParsed":[["Qureshi","Moinuddin",""],["Qazi","Salman",""],["Jaleel","Aamer",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 20:29:56 GMT"}],"updateDate":"2024-07-24","timestamp":1721680196000,"abstract":"  This paper investigates secure low-cost in-DRAM trackers for mitigating\nRowhammer (RH). In-DRAM solutions have the advantage that they can solve the RH\nproblem within the DRAM chip, without relying on other parts of the system.\nHowever, in-DRAM mitigation suffers from two key challenges: First, the\nmitigations are synchronized with refresh, which means we cannot mitigate at\narbitrary times. Second, the SRAM area available for aggressor tracking is\nseverely limited, to only a few bytes. Existing low-cost in-DRAM trackers (such\nas TRR) have been broken by well-crafted access patterns, whereas prior\ncounter-based schemes require impractical overheads of hundreds or thousands of\nentries per bank. The goal of our paper is to develop an ultra low-cost secure\nin-DRAM tracker.\n  Our solution is based on a simple observation: if only one row can be\nmitigated at refresh, then we should ideally need to track only one row. We\npropose a Minimalist In-DRAM Tracker (MINT), which provides secure mitigation\nwith just a single entry. At each refresh, MINT probabilistically decides which\nactivation in the upcoming interval will be selected for mitigation at the next\nrefresh. MINT provides guaranteed protection against classic single and\ndouble-sided attacks. We also derive the minimum RH threshold (MinTRH)\ntolerated by MINT across all patterns. MINT has a MinTRH of 1482 which can be\nlowered to 356 with RFM. The MinTRH of MINT is lower than a prior counter-based\ndesign with 677 entries per bank, and is within 2x of the MinTRH of an\nidealized design that stores one-counter-per-row. We also analyze the impact of\nrefresh postponement on the MinTRH of low-cost in-DRAM trackers, and propose an\nefficient solution to make such trackers compatible with refresh postponement.\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by/4.0/"}