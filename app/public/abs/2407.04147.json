{"id":"2407.04147","title":"ALPINE: An adaptive language-agnostic pruning method for language models\n  for code","authors":"Mootez Saad and Jos\\'e Antonio Hern\\'andez L\\'opez and Boqi Chen and\n  D\\'aniel Varr\\'o and Tushar Sharma","authorsParsed":[["Saad","Mootez",""],["López","José Antonio Hernández",""],["Chen","Boqi",""],["Varró","Dániel",""],["Sharma","Tushar",""]],"versions":[{"version":"v1","created":"Thu, 4 Jul 2024 20:42:51 GMT"}],"updateDate":"2024-07-08","timestamp":1720125771000,"abstract":"  Language models of code have demonstrated state-of-the-art performance across\nvarious software engineering and source code analysis tasks. However, their\ndemanding computational resource requirements and consequential environmental\nfootprint remain as significant challenges. This work introduces ALPINE, an\nadaptive programming language-agnostic pruning technique designed to\nsubstantially reduce these models' computational overhead. The proposed method\noffers a pluggable layer that can be integrated with all Transformer-based\nmodels. With ALPINE, input sequences undergo adaptive compression throughout\nthe pipeline, reaching a size up to $\\times 3$ less their initial size,\nresulting in significantly reduced computational load. Our experiments on two\nsoftware engineering tasks, defect prediction and code clone detection across\nthree language models CodeBERT, GraphCodeBERT and UniXCoder show that ALPINE\nachieves up to a 50% reduction in FLOPs, a 58.1% decrease in memory footprint,\nand a 28.1% improvement in throughput on average. This led to a reduction in\nCO2 by up to $44.85$%. Importantly, it achieves the reduction in computation\nresources while maintaining up to 98.1% of the original predictive performance.\nThese findings highlight the potential of ALPINE in making language models of\ncode more resource-efficient and accessible while preserving their performance,\ncontributing to the overall sustainability of adopting language models in\nsoftware development. Also, it sheds light on redundant and noisy information\nin source code analysis corpora, as shown by the substantial sequence\ncompression achieved by ALPINE.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}