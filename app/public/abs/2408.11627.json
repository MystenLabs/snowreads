{"id":"2408.11627","title":"Runtime Verification via Rational Monitor with Imperfect Information","authors":"Angelo Ferrando and Vadim Malvone","authorsParsed":[["Ferrando","Angelo",""],["Malvone","Vadim",""]],"versions":[{"version":"v1","created":"Wed, 21 Aug 2024 13:56:06 GMT"}],"updateDate":"2024-08-22","timestamp":1724248566000,"abstract":"  Trusting software systems, particularly autonomous ones, is challenging. To\naddress this, formal verification techniques can ensure these systems behave as\nexpected. Runtime Verification (RV) is a leading, lightweight method for\nverifying system behaviour during execution. However, traditional RV assumes\nperfect information, meaning the monitoring component perceives everything\naccurately. This assumption often fails, especially with autonomous systems\noperating in real-world environments where sensors might be faulty.\nAdditionally, traditional RV considers the monitor to be passive, lacking the\ncapability to interpret the system's information and thus unable to address\nincomplete data. In this work, we extend standard RV of Linear Temporal Logic\nproperties to accommodate scenarios where the monitor has imperfect information\nand behaves rationally. We outline the necessary engineering steps to update\nthe verification pipeline and demonstrate our implementation in a case study\ninvolving robotic systems.\n","subjects":["Computing Research Repository/Formal Languages and Automata Theory","Computing Research Repository/Logic in Computer Science","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}