{"id":"2408.09536","title":"Galapagos: Automated N-Version Programming with LLMs","authors":"Javier Ron, Diogo Gaspar, Javier Cabrera-Arteaga, Benoit Baudry,\n  Martin Monperrus","authorsParsed":[["Ron","Javier",""],["Gaspar","Diogo",""],["Cabrera-Arteaga","Javier",""],["Baudry","Benoit",""],["Monperrus","Martin",""]],"versions":[{"version":"v1","created":"Sun, 18 Aug 2024 16:44:01 GMT"}],"updateDate":"2024-08-23","timestamp":1723999441000,"abstract":"  One of the main challenges of N-Version Programming is development cost: it\nrequires paying multiple teams to develop variants of the same system. To\naddress this issue, we propose the automated generation of variants using large\nlanguage models. We design, develop and evaluate Gal\\'apagos: a tool for\ngenerating program variants using LLMs, validating their correctness and\nequivalence, and using them to assemble N-Version binaries. We evaluate\nGal\\'apagos by creating N-Version components of real-world C code. Our original\nresults show that Gal\\'apagos can produce program variants that are proven to\nbe functionally equivalent, even when the variants are written in a different\nprogramming language. Our systematic diversity measurement indicate that\nfunctionally equivalent variants produced by Gal\\'apagos, are statically\ndifferent after compilation, and present diverging internal behavior at\nruntime. We demonstrate that the variants produced by Gal\\'apagos can protect C\ncode against real miscompilation bugs which affect the Clang compiler. Overall,\nour paper shows that producing N-Version software can be drastically automated\nby advanced usage of practical formal verification and generative language\nmodels.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}