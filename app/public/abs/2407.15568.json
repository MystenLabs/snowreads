{"id":"2407.15568","title":"Empowering Agile-Based Generative Software Development through Human-AI\n  Teamwork","authors":"Sai Zhang, Zhenchang Xing, Ronghui Guo, Fangzhou Xu, Lei Chen,\n  Zhaoyuan Zhang, Xiaowang Zhang, Zhiyong Feng, Zhiqiang Zhuang","authorsParsed":[["Zhang","Sai",""],["Xing","Zhenchang",""],["Guo","Ronghui",""],["Xu","Fangzhou",""],["Chen","Lei",""],["Zhang","Zhaoyuan",""],["Zhang","Xiaowang",""],["Feng","Zhiyong",""],["Zhuang","Zhiqiang",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 11:54:44 GMT"}],"updateDate":"2024-07-23","timestamp":1721649284000,"abstract":"  In software development, the raw requirements proposed by users are\nfrequently incomplete, which impedes the complete implementation of application\nfunctionalities. With the emergence of large language models, recent methods\nwith the top-down waterfall model employ a questioning approach for requirement\ncompletion, attempting to explore further user requirements. However, users,\nconstrained by their domain knowledge, lack effective acceptance criteria,\nwhich fail to capture the implicit needs of the user. Moreover, the cumulative\nerrors of the waterfall model can lead to discrepancies between the generated\ncode and user requirements. The Agile methodologies reduce cumulative errors\nthrough lightweight iteration and collaboration with users, but the challenge\nlies in ensuring semantic consistency between user requirements and the code\ngenerated. We propose AgileGen, an agile-based generative software development\nthrough human-AI teamwork. AgileGen attempts for the first time to use testable\nrequirements by Gherkin for semantic consistency between requirements and code.\nAdditionally, we innovate in human-AI teamwork, allowing users to participate\nin decision-making processes they do well and enhancing the completeness of\napplication functionality. Finally, to improve the reliability of user\nscenarios, a memory pool mechanism is used to collect user decision-making\nscenarios and recommend them to new users. AgileGen, as a user-friendly\ninteractive system, significantly outperformed existing best methods by 16.4%\nand garnered higher user satisfaction.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Human-Computer Interaction"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}