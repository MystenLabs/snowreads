{"id":"2407.04250","title":"Effective Targeted Testing of Smart Contracts","authors":"Mahdi Fooladgar, Fathiyeh Faghih","authorsParsed":[["Fooladgar","Mahdi",""],["Faghih","Fathiyeh",""]],"versions":[{"version":"v1","created":"Fri, 5 Jul 2024 04:38:11 GMT"}],"updateDate":"2024-07-08","timestamp":1720154291000,"abstract":"  Smart contracts are autonomous and immutable pieces of code that are deployed\non blockchain networks and run by miners. They were first introduced by\nEthereum in 2014 and have since been used for various applications such as\nsecurity tokens, voting, gambling, non-fungible tokens, self-sovereign\nidentities, stock taking, decentralized finances, decentralized exchanges, and\natomic swaps. Since smart contracts are immutable, their bugs cannot be fixed,\nwhich may lead to significant monetary losses. While many researchers have\nfocused on testing smart contracts, our recent work has highlighted a gap\nbetween test adequacy and test data generation, despite numerous efforts in\nboth fields. Our framework, Griffin, tackles this deficiency by employing a\ntargeted symbolic execution technique for generating test data. This tool can\nbe used in diverse applications, such as killing the survived mutants in\nmutation testing, validating static analysis alarms, creating counter-examples\nfor safety conditions, and reaching manually selected lines of code. This paper\ndiscusses how smart contracts differ from legacy software in targeted symbolic\nexecution and how these differences can affect the tool structure, leading us\nto propose an enhanced version of the control-flow graph for Solidity smart\ncontracts called CFG+. We also discuss how Griffin can utilize custom\nheuristics to explore the program space and find the test data that reaches a\ntarget line while considering a safety condition in a reasonable execution\ntime. We conducted experiments involving an extensive set of smart contracts,\ntarget lines, and safety conditions based on real-world faults and test suites\nfrom related tools. The results of our evaluation demonstrate that Griffin can\neffectively identify the required test data within a reasonable timeframe.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-sa/4.0/"}