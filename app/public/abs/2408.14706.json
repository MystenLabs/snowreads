{"id":"2408.14706","title":"Galley: Modern Query Optimization for Sparse Tensor Programs","authors":"Kyle Deeds, Willow Ahrens, Magda Balazinska, Dan Suciu","authorsParsed":[["Deeds","Kyle",""],["Ahrens","Willow",""],["Balazinska","Magda",""],["Suciu","Dan",""]],"versions":[{"version":"v1","created":"Tue, 27 Aug 2024 00:21:26 GMT"},{"version":"v2","created":"Thu, 29 Aug 2024 16:55:52 GMT"},{"version":"v3","created":"Sat, 31 Aug 2024 19:10:44 GMT"}],"updateDate":"2024-09-04","timestamp":1724718086000,"abstract":"  The tensor programming abstraction has become a foundational paradigm for\nmodern computing. This framework allows users to write high performance\nprograms for bulk computation via a high-level imperative interface. Recent\nwork has extended this paradigm to sparse tensors (i.e. tensors where most\nentries are not explicitly represented) with the use of sparse tensor\ncompilers. These systems excel at producing efficient code for computation over\nsparse tensors, which may be stored in a wide variety of formats. However, they\nrequire the user to manually choose the order of operations and the data\nformats at every step. Unfortunately, these decisions are both highly impactful\nand complicated, requiring significant effort to manually optimize. In this\nwork, we present Galley, a system for declarative sparse tensor programming.\nGalley performs cost-based optimization to lower these programs to a logical\nplan then to a physical plan. It then leverages sparse tensor compilers to\nexecute the physical plan efficiently. We show that Galley achieves high\nperformance on a wide variety of problems including machine learning\nalgorithms, subgraph counting, and iterative graph algorithms.\n","subjects":["Computing Research Repository/Databases","Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}