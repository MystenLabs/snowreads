{"id":"2408.09237","title":"QEDCartographer: Automating Formal Verification Using Reward-Free\n  Reinforcement Learning","authors":"Alex Sanchez-Stern, Abhishek Varghese, Zhanna Kaufman, Dylan Zhang,\n  Talia Ringer, Yuriy Brun","authorsParsed":[["Sanchez-Stern","Alex",""],["Varghese","Abhishek",""],["Kaufman","Zhanna",""],["Zhang","Dylan",""],["Ringer","Talia",""],["Brun","Yuriy",""]],"versions":[{"version":"v1","created":"Sat, 17 Aug 2024 16:06:14 GMT"},{"version":"v2","created":"Wed, 28 Aug 2024 13:10:40 GMT"},{"version":"v3","created":"Thu, 5 Sep 2024 21:16:28 GMT"},{"version":"v4","created":"Mon, 9 Sep 2024 15:51:05 GMT"},{"version":"v5","created":"Thu, 12 Sep 2024 18:03:54 GMT"}],"updateDate":"2024-09-16","timestamp":1723910774000,"abstract":"  Formal verification is a promising method for producing reliable software,\nbut the difficulty of manually writing verification proofs severely limits its\nutility in practice. Recent methods have automated some proof synthesis by\nguiding a search through the proof space using a theorem prover. Unfortunately,\nthe theorem prover provides only the crudest estimate of progress, resulting in\neffectively undirected search. To address this problem, we create\nQEDCartographer, an automated proof-synthesis tool that combines supervised and\nreinforcement learning to more effectively explore the proof space.\nQEDCartographer incorporates the proofs' branching structure, enabling\nreward-free search and overcoming the sparse reward problem inherent to formal\nverification. We evaluate QEDCartographer using the CoqGym benchmark of 68.5K\ntheorems from 124 open-source Coq projects. QEDCartographer fully automatically\nproves 21.4% of the test-set theorems. Previous search-based proof-synthesis\ntools Tok, Tac, ASTactic, Passport, and Proverbot9001, which rely only on\nsupervised learning, prove 9.6%, 9.8%, 10.9%, 12.5%, and 19.8%, respectively.\nDiva, which combines 62 tools, proves 19.2%. Comparing to the most effective\nprior tool, Proverbot9001, QEDCartographer produces 34% shorter proofs 29%\nfaster, on average over the theorems both tools prove. Together,\nQEDCartographer and non-learning-based CoqHammer prove 30.3% of the theorems,\nwhile CoqHammer alone proves 26.6%. Our work demonstrates that reinforcement\nlearning is a fruitful research direction for improving proof-synthesis tools'\nsearch mechanisms.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Machine Learning","Computing Research Repository/Programming Languages"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}