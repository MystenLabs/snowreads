{"id":"2408.09128","title":"Identifying Technical Debt and Its Types Across Diverse Software\n  Projects Issues","authors":"Karthik Shivashankar, Mili Orucevic, Maren Maritsdatter Kruke, Antonio\n  Martini","authorsParsed":[["Shivashankar","Karthik",""],["Orucevic","Mili",""],["Kruke","Maren Maritsdatter",""],["Martini","Antonio",""]],"versions":[{"version":"v1","created":"Sat, 17 Aug 2024 07:46:54 GMT"}],"updateDate":"2024-08-20","timestamp":1723880814000,"abstract":"  Technical Debt (TD) identification in software projects issues is crucial for\nmaintaining code quality, reducing long-term maintenance costs, and improving\noverall project health. This study advances TD classification using\ntransformer-based models, addressing the critical need for accurate and\nefficient TD identification in large-scale software development.\n  Our methodology employs multiple binary classifiers for TD and its type,\ncombined through ensemble learning, to enhance accuracy and robustness in\ndetecting various forms of TD. We train and evaluate these models on a\ncomprehensive dataset from GitHub Archive Issues (2015-2024), supplemented with\nindustrial data validation.\n  We demonstrate that in-project fine-tuned transformer models significantly\noutperform task-specific fine-tuned models in TD classification, highlighting\nthe importance of project-specific context in accurate TD identification. Our\nresearch also reveals the superiority of specialized binary classifiers over\nmulti-class models for TD and its type identification, enabling more targeted\ndebt resolution strategies. A comparative analysis shows that the smaller\nDistilRoBERTa model is more effective than larger language models like GPTs for\nTD classification tasks, especially after fine-tuning, offering insights into\nefficient model selection for specific TD detection tasks.\n  The study also assesses generalization capabilities using metrics such as\nMCC, AUC ROC, Recall, and F1 score, focusing on model effectiveness,\nfine-tuning impact, and relative performance. By validating our approach on\nout-of-distribution and real-world industrial datasets, we ensure practical\napplicability, addressing the diverse nature of software projects.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/"}