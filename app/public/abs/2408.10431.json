{"id":"2408.10431","title":"System-Level Design Space Exploration for High-Level Synthesis under\n  End-to-End Latency Constraints","authors":"Yuchao Liao, Tosiron Adegbija, Roman Lysecky","authorsParsed":[["Liao","Yuchao",""],["Adegbija","Tosiron",""],["Lysecky","Roman",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 21:46:22 GMT"}],"updateDate":"2024-08-21","timestamp":1724103982000,"abstract":"  Many modern embedded systems have end-to-end (EtoE) latency constraints that\nnecessitate precise timing to ensure high reliability and functional\ncorrectness. The combination of High-Level Synthesis (HLS) and Design Space\nExploration (DSE) enables the rapid generation of embedded systems using\nvarious constraints/directives to find Pareto-optimal configurations. Current\nHLS DSE approaches often address latency by focusing on individual components,\nwithout considering the EtoE latency during the system-level optimization\nprocess. However, to truly optimize the system under EtoE latency, we need a\nholistic approach that analyzes individual system components' timing\nconstraints in the context of how the different components interact and impact\nthe overall design. This paper presents a novel system-level HLS DSE approach,\ncalled EtoE-DSE, that accommodates EtoE latency and variable timing constraints\nfor complex multi-component application-specific embedded systems. EtoE-DSE\nemploys a latency estimation model and a pathfinding algorithm to identify and\nestimate the EtoE latency for paths between any endpoints. It also uses a\nfrequency-based segmentation process to segment and prune the design space,\nalongside a latency-constrained optimization algorithm for efficiently and\naccurately exploring the system-level design space. We evaluate our approach\nusing a real-world use case of an autonomous driving subsystem compared to the\nstate-of-the-art in HLS DSE. We show that our approach yields substantially\nbetter optimization results than prior DSE approaches, improving the quality of\nresults by up to 89.26%, while efficiently identifying Pareto-optimal\nconfigurations in terms of energy and area.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"9KKWQReCY04r_Qc29DgPd_4S-pTWW0bugrO14GpqS80","pdfSize":"2066797"}
