{"id":"2408.08365","title":"Coqa: Blazing Fast Compiler Optimizations for QAOA","authors":"Yuchen Zhu, Yidong Zhou, Jinglei Cheng, Yuwei Jin, Boxi Li, Siyuan\n  Niu, Zhiding Liang","authorsParsed":[["Zhu","Yuchen",""],["Zhou","Yidong",""],["Cheng","Jinglei",""],["Jin","Yuwei",""],["Li","Boxi",""],["Niu","Siyuan",""],["Liang","Zhiding",""]],"versions":[{"version":"v1","created":"Thu, 15 Aug 2024 18:12:04 GMT"}],"updateDate":"2024-08-19","timestamp":1723745524000,"abstract":"  The Quantum Approximate Optimization Algorithm (QAOA) is one of the most\npromising candidates for achieving quantum advantage over classical computers.\nHowever, existing compilers lack specialized methods for optimizing QAOA\ncircuits. There are circuit patterns inside the QAOA circuits, and current\nquantum hardware has specific qubit connectivity topologies. Therefore, we\npropose Coqa to optimize QAOA circuit compilation tailored to different types\nof quantum hardware. Our method integrates a linear nearest-neighbor (LNN)\ntopology and efficiently map the patterns of QAOA circuits to the LNN topology\nby heuristically checking the interaction based on the weight of problem\nHamiltonian. This approach allows us to reduce the number of SWAP gates during\ncompilation, which directly impacts the circuit depth and overall fidelity of\nthe quantum computation. By leveraging the inherent patterns in QAOA circuits,\nour approach achieves more efficient compilation compared to general-purpose\ncompilers. With our proposed method, we are able to achieve an average of 30%\nreduction in gate count and a 39x acceleration in compilation time across our\nbenchmarks.\n","subjects":["Physics/Quantum Physics"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"T9VXTpkEfoSAI5z5ZzhKf-uGD4LIreeGNIfG0pPad8I","pdfSize":"2664554"}
