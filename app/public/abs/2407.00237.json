{"id":"2407.00237","title":"The Even-Path Problem in Directed Single-Crossing-Minor-Free Graphs","authors":"Archit Chauhan, Samir Datta, Chetan Gupta, Vimal Raj Sharma","authorsParsed":[["Chauhan","Archit",""],["Datta","Samir",""],["Gupta","Chetan",""],["Sharma","Vimal Raj",""]],"versions":[{"version":"v1","created":"Fri, 28 Jun 2024 21:17:31 GMT"}],"updateDate":"2024-07-02","timestamp":1719609451000,"abstract":"  Finding a simple path of even length between two designated vertices in a\ndirected graph is a fundamental NP-complete problem known as the EvenPath\nproblem. Nedev proved in 1999, that for directed planar graphs, the problem can\nbe solved in polynomial time. More than two decades since then, we make the\nfirst progress in extending the tractable classes of graphs for this problem.\nWe give a polynomial time algorithm to solve the EvenPath problem for classes\nof H-minor-free directed graphs,1 where H is a single-crossing graph. We make\ntwo new technical contributions along the way, that might be of independent\ninterest. The first, and perhaps our main, contribution is the construction of\nsmall, planar, parity-mimicking networks. These are graphs that mimic parities\nof all possible paths between a designated set of terminals of the original\ngraph. Finding vertex disjoint paths between given source-destination pairs of\nvertices is another fundamental problem, known to be NP-complete in directed\ngraphs, though known to be tractable in planar directed graphs. We encounter a\nnatural variant of this problem, that of finding disjoint paths between given\npairs of vertices, but with constraints on parity of the total length of paths.\nThe other significant contribution of our paper is to give a polynomial time\nalgorithm for the 3-disjoint paths with total parity problem, in directed\nplanar graphs with some restrictions (and also in directed graphs of bounded\ntreewidth).\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/"}