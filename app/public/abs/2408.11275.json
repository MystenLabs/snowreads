{"id":"2408.11275","title":"Softening the Impact of Collisions in Contention Resolution","authors":"Umesh Biswas and Trisha Chakraborty and Maxwell Young","authorsParsed":[["Biswas","Umesh",""],["Chakraborty","Trisha",""],["Young","Maxwell",""]],"versions":[{"version":"v1","created":"Wed, 21 Aug 2024 01:56:33 GMT"}],"updateDate":"2024-08-22","timestamp":1724205393000,"abstract":"  Contention resolution addresses the problem of coordinating access to a\nshared communication channel. Time is discretized into synchronized slots, and\na packet can be sent in any slot. If no packet is sent, then the slot is empty;\nif a single packet is sent, then it is successful; and when multiple packets\nare sent at the same time, a collision occurs, resulting in the failure of the\ncorresponding transmissions. In each slot, every packet receives ternary\nchannel feedback indicating whether the current slot is empty, successful, or a\ncollision.\n  Much of the prior work on contention resolution has focused on optimizing the\nmakespan, which is the number of slots required for all packets to succeed.\nHowever, in many modern systems, collisions are also costly in terms of the\ntime they incur, which existing contention-resolution algorithms do not\naddress.\n  In this paper, we design and analyze a randomized algorithm, Collision\nAversion Backoff (CAB), that optimizes both the makespan and the collision\ncost. We consider the static case where an unknown $n\\geq 2$ packets are\ninitially present in the system, and each collision has a known cost\n$\\mathcal{C}$, where $1 \\leq \\mathcal{C} \\leq n^{\\kappa}$ for a known constant\n$\\kappa\\geq 0$. With error probability polynomially small in $n$, CAB\nguarantees that all packets succeed with makespan and a total expected\ncollision cost of $\\tilde{O}(n\\sqrt{\\mathcal{C}})$. We give a lower bound for\nthe class of fair algorithms: where, in each slot, every packet executing the\nfair algorithm sends with the same probability (and the probability may change\nfrom slot to slot). Our lower bound is asymptotically tight up to a\n$\\texttt{poly}(\\log n)$-factor for sufficiently large $\\mathcal{C}$.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}