{"id":"2408.16927","title":"Serial and Parallel Two-Column Probing for Mixed-Integer Programming","authors":"Yongzheng Dai, Chen Chen","authorsParsed":[["Dai","Yongzheng",""],["Chen","Chen",""]],"versions":[{"version":"v1","created":"Thu, 29 Aug 2024 22:02:25 GMT"}],"updateDate":"2024-09-02","timestamp":1724968945000,"abstract":"  Probing in mixed-integer programming (MIP) is a technique of temporarily\nfixing variables to discover implications that are useful to branch-and-cut\nsolvers. Such fixing is typically performed one variable at a time -- this\npaper develops instead a two-column probing scheme that instead fixes a pair of\nvariables per iteration. Although the scheme involves more work per iteration\ncompared to the one-column approach, stronger implied bounds as well as more\nconflicts identified may compensate. Indeed, our prototype implementation was\nawarded first prize at the MIP Workshop 2024 Computational Competition on novel\npresolving approaches. This paper presents the aforementioned (serial)\nprototype and additionally develops an efficient parallelization, leveraging\nhardware acceleration to further improve overall solve times. Compared to\nserial two-column probing, our parallel version sacrifices some strength\nper-pair probed in exchange for greatly increasing the total number of such\nprobings; computational experiments demonstrate its promise.\n","subjects":["Mathematics/Optimization and Control"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"wKxwIqsVxE0jVM0kF-vaCBmj2JRgAUzcm5xL4hgrJ9k","pdfSize":"253886"}
