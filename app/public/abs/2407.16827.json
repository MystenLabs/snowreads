{"id":"2407.16827","title":"Path-optimal symbolic execution of heap-manipulating programs","authors":"Pietro Braione and Giovanni Denaro","authorsParsed":[["Braione","Pietro",""],["Denaro","Giovanni",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 20:35:33 GMT"}],"updateDate":"2024-07-25","timestamp":1721766933000,"abstract":"  Symbolic execution is at the core of many techniques for program analysis and\ntest generation. Traditional symbolic execution of programs with numeric inputs\nenjoys the property of forking as many analysis traces as the number of\nanalyzed program paths, a property that in this paper we refer to as path\noptimality. On the contrary, current approaches for symbolic execution of\nheap-manipulating programs fail to satisfy this property, thereby incurring\nheavy path explosion effects that crucially penalize the efficiency of the\nanalysis. This paper introduces POSE, path-optimal symbolic execution, a\nsymbolic execution algorithm that originally accomplishes path optimality\nagainst heap-manipulating programs. We formalize the POSE algorithm for a tiny,\nbut representative object-oriented programming language, and implement the\nformalization into a prototype symbolic executor to experiment the algorithm\nagainst a benchmark of sample programs that take data structures as inputs. Our\nexperiments provide initial empirical evidence of the potential of POSE for\nimproving on the state of the art of symbolic execution of heap-manipulating\nprograms.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Logic in Computer Science"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/"}