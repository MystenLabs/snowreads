{"id":"2408.07378","title":"Inspection of I/O Operations from System Call Traces using\n  Directly-Follows-Graph","authors":"Aravind Sankaran, Ilya Zhukov, Wolfgang Frings, Paolo Bientinesi","authorsParsed":[["Sankaran","Aravind",""],["Zhukov","Ilya",""],["Frings","Wolfgang",""],["Bientinesi","Paolo",""]],"versions":[{"version":"v1","created":"Wed, 14 Aug 2024 08:54:29 GMT"}],"updateDate":"2024-08-15","timestamp":1723625669000,"abstract":"  We aim to identify the differences in Input/Output(I/O) behavior between\nmultiple user programs in terms of contentions for system resources by\ninspecting the I/O requests made to the operating system. A typical program\nissues a large number of I/O requests to the operating system, thereby making\nthe process of inspection challenging. In this paper, we address this challenge\nby presenting a methodology to synthesize I/O system call traces into a\nspecific type of directed graph, known as the Directly-Follows-Graph (DFG).\nBased on the DFG, we present a technique to compare the traces from multiple\nprograms or different configurations of the same program, such that it is\npossible to identify the differences in the I/O requests made to the operating\nsystem. We apply our methodology to the IOR benchmark, and compare the\ncontentions for file accesses when the benchmark is run with different options\nfor file output and software interface.\n","subjects":["Computing Research Repository/Performance","Computing Research Repository/Operating Systems"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}