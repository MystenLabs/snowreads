{"id":"2407.20924","title":"Automatically Removing Unnecessary Stubbings from Test Suites","authors":"Mengzhen Li and Mattia Fazzini","authorsParsed":[["Li","Mengzhen",""],["Fazzini","Mattia",""]],"versions":[{"version":"v1","created":"Tue, 30 Jul 2024 16:01:21 GMT"}],"updateDate":"2024-07-31","timestamp":1722355281000,"abstract":"  Most modern software systems are characterized by a high number of components\nwhose interactions can affect and complicate testing activities. During\ntesting, developers can account for the interactions by isolating the code\nunder test using test doubles and stubbings. During the evolution of a test\nsuite, stubbings might become unnecessary, and developers should remove\nunnecessary stubbings, as their definitions can introduce unreliable test\nresults in future versions of the test suite. Unfortunately, removing\nunnecessary stubbings is still a manual task that can be complex and\ntime-consuming.\n  To help developers in this task, we propose ARUS, a technique to\nautomatically remove unnecessary stubbings from test suites. Given a software\nproject and its test suite, the technique executes the tests to identify\nunnecessary stubbings and then removes them using different approaches based on\nthe characteristics of the stubbings. We performed an empirical evaluation\nbased on 128 Java projects that use Mockito for stubbing and contain 280\nstubbing definitions that lead to 1,529 unnecessary stubbings. Overall, our\ntechnique provides a solution for 276 of the definitions (98.6% resolution\nrate), ARUS' time cost is negligible, and, on average, the technique's changes\nintroduce a limited increase in code complexity. We submitted ARUS' changes to\nthe projects through pull requests and 83 resolutions are already merged.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}