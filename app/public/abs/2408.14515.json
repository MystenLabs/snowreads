{"id":"2408.14515","title":"A Joint Learning Model with Variational Interaction for Multilingual\n  Program Translation","authors":"Yali Du, Hui Sun, and Ming Li","authorsParsed":[["Du","Yali",""],["Sun","Hui",""],["Li","Ming",""]],"versions":[{"version":"v1","created":"Sun, 25 Aug 2024 11:33:52 GMT"},{"version":"v2","created":"Fri, 13 Sep 2024 04:25:37 GMT"}],"updateDate":"2024-09-16","timestamp":1724585632000,"abstract":"  Programs implemented in various programming languages form the foundation of\nsoftware applications. To alleviate the burden of program migration and\nfacilitate the development of software systems, automated program translation\nacross languages has garnered significant attention. Previous approaches\nprimarily focus on pairwise translation paradigms, learning translation between\npairs of languages using bilingual parallel data. However, parallel data is\ndifficult to collect for some language pairs, and the distribution of program\nsemantics across languages can shift, posing challenges for pairwise program\ntranslation. In this paper, we argue that jointly learning a unified model to\ntranslate code across multiple programming languages is superior to separately\nlearning from bilingual parallel data. We propose Variational Interaction for\nMultilingual Program Translation~(VIM-PT), a disentanglement-based generative\napproach that jointly trains a unified model for multilingual program\ntranslation across multiple languages. VIM-PT disentangles code into\nlanguage-shared and language-specific features, using variational inference and\ninteraction information with a novel lower bound, then achieves program\ntranslation through conditional generation. VIM-PT demonstrates four\nadvantages: 1) captures language-shared information more accurately from\nvarious implementations and improves the quality of multilingual program\ntranslation, 2) mines and leverages the capability of non-parallel data, 3)\naddresses the distribution shift of program semantics across languages, 4) and\nserves as a unified model, reducing deployment complexity.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Machine Learning","Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}