{"id":"2407.09787","title":"Semi-supervised 3D Object Detection with PatchTeacher and PillarMix","authors":"Xiaopei Wu, Liang Peng, Liang Xie, Yuenan Hou, Binbin Lin, Xiaoshui\n  Huang, Haifeng Liu, Deng Cai, Wanli Ouyang","authorsParsed":[["Wu","Xiaopei",""],["Peng","Liang",""],["Xie","Liang",""],["Hou","Yuenan",""],["Lin","Binbin",""],["Huang","Xiaoshui",""],["Liu","Haifeng",""],["Cai","Deng",""],["Ouyang","Wanli",""]],"versions":[{"version":"v1","created":"Sat, 13 Jul 2024 06:58:49 GMT"}],"updateDate":"2024-07-16","timestamp":1720853929000,"abstract":"  Semi-supervised learning aims to leverage numerous unlabeled data to improve\nthe model performance. Current semi-supervised 3D object detection methods\ntypically use a teacher to generate pseudo labels for a student, and the\nquality of the pseudo labels is essential for the final performance. In this\npaper, we propose PatchTeacher, which focuses on partial scene 3D object\ndetection to provide high-quality pseudo labels for the student. Specifically,\nwe divide a complete scene into a series of patches and feed them to our\nPatchTeacher sequentially. PatchTeacher leverages the low memory consumption\nadvantage of partial scene detection to process point clouds with a\nhigh-resolution voxelization, which can minimize the information loss of\nquantization and extract more fine-grained features. However, it is non-trivial\nto train a detector on fractions of the scene. Therefore, we introduce three\nkey techniques, i.e., Patch Normalizer, Quadrant Align, and Fovea Selection, to\nimprove the performance of PatchTeacher. Moreover, we devise PillarMix, a\nstrong data augmentation strategy that mixes truncated pillars from different\nLiDAR scans to generate diverse training samples and thus help the model learn\nmore general representation. Extensive experiments conducted on Waymo and ONCE\ndatasets verify the effectiveness and superiority of our method and we achieve\nnew state-of-the-art results, surpassing existing methods by a large margin.\nCodes are available at https://github.com/LittlePey/PTPM.\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}