{"id":"2408.12290","title":"KS+: Predicting Workflow Task Memory Usage Over Time","authors":"Jonathan Bader, Ansgar L\\\"o{\\ss}er, Lauritz Thamsen, Bj\\\"orn\n  Scheuermann and Odej Kao","authorsParsed":[["Bader","Jonathan",""],["Lößer","Ansgar",""],["Thamsen","Lauritz",""],["Scheuermann","Björn",""],["Kao","Odej",""]],"versions":[{"version":"v1","created":"Thu, 22 Aug 2024 10:59:48 GMT"}],"updateDate":"2024-08-23","timestamp":1724324388000,"abstract":"  Scientific workflow management systems enable the reproducible execution of\ndata analysis pipelines on cluster infrastructures managed by resource managers\nsuch as Kubernetes, Slurm, or HTCondor. These resource managers require\nresource estimates for each workflow task to be executed on one of the cluster\nnodes. However, task resource consumption varies significantly between\ndifferent tasks and for the same task with different inputs. Furthermore,\nresource consumption also fluctuates during a task's execution. As a result,\nmanually configuring static memory allocations is error-prone, often leading\nusers to overestimate memory usage to avoid costly failures from\nunder-provisioning, which results in significant memory wastage.\n  We propose KS+, a method that predicts a task's memory consumption over time\ndepending on its inputs. For this, KS+ dynamically segments the task execution\nand predicts the memory required for each segment. Our experimental evaluation\nshows an average reduction in memory wastage of 38% compared to the\nbest-performing state-of-the-art baseline for two real-world workflows from the\npopular nf-core repository.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}