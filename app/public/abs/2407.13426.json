{"id":"2407.13426","title":"WiNet: Wavelet-based Incremental Learning for Efficient Medical Image\n  Registration","authors":"Xinxing Cheng, Xi Jia, Wenqi Lu, Qiufu Li, Linlin Shen, Alexander\n  Krull, Jinming Duan","authorsParsed":[["Cheng","Xinxing",""],["Jia","Xi",""],["Lu","Wenqi",""],["Li","Qiufu",""],["Shen","Linlin",""],["Krull","Alexander",""],["Duan","Jinming",""]],"versions":[{"version":"v1","created":"Thu, 18 Jul 2024 11:51:01 GMT"}],"updateDate":"2024-07-19","timestamp":1721303461000,"abstract":"  Deep image registration has demonstrated exceptional accuracy and fast\ninference. Recent advances have adopted either multiple cascades or pyramid\narchitectures to estimate dense deformation fields in a coarse-to-fine manner.\nHowever, due to the cascaded nature and repeated composition/warping operations\non feature maps, these methods negatively increase memory usage during training\nand testing. Moreover, such approaches lack explicit constraints on the\nlearning process of small deformations at different scales, thus lacking\nexplainability. In this study, we introduce a model-driven WiNet that\nincrementally estimates scale-wise wavelet coefficients for the\ndisplacement/velocity field across various scales, utilizing the wavelet\ncoefficients derived from the original input image pair. By exploiting the\nproperties of the wavelet transform, these estimated coefficients facilitate\nthe seamless reconstruction of a full-resolution displacement/velocity field\nvia our devised inverse discrete wavelet transform (IDWT) layer. This approach\navoids the complexities of cascading networks or composition operations, making\nour WiNet an explainable and efficient competitor with other coarse-to-fine\nmethods. Extensive experimental results from two 3D datasets show that our\nWiNet is accurate and GPU efficient. The code is available at\nhttps://github.com/x-xc/WiNet .\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}