{"id":"2407.18490","title":"Fast and Parallelizable Logical Computation with Homological Product\n  Codes","authors":"Qian Xu, Hengyun Zhou, Guo Zheng, Dolev Bluvstein, J. Pablo Bonilla\n  Ataides, Mikhail D. Lukin, Liang Jiang","authorsParsed":[["Xu","Qian",""],["Zhou","Hengyun",""],["Zheng","Guo",""],["Bluvstein","Dolev",""],["Ataides","J. Pablo Bonilla",""],["Lukin","Mikhail D.",""],["Jiang","Liang",""]],"versions":[{"version":"v1","created":"Fri, 26 Jul 2024 03:49:59 GMT"}],"updateDate":"2024-07-29","timestamp":1721965799000,"abstract":"  Quantum error correction is necessary to perform large-scale quantum\ncomputation, but requires extremely large overheads in both space and time.\nHigh-rate quantum low-density-parity-check (qLDPC) codes promise a route to\nreduce qubit numbers, but performing computation while maintaining low space\ncost has required serialization of operations and extra time costs. In this\nwork, we design fast and parallelizable logical gates for qLDPC codes, and\ndemonstrate their utility for key algorithmic subroutines such as the quantum\nadder. Our gate gadgets utilize transversal logical CNOTs between a data qLDPC\ncode and a suitably constructed ancilla code to perform parallel Pauli product\nmeasurements (PPMs) on the data logical qubits. For hypergraph product codes,\nwe show that the ancilla can be constructed by simply modifying the base\nclassical codes of the data code, achieving parallel PPMs on a subgrid of the\nlogical qubits with a lower space-time cost than existing schemes for an\nimportant class of circuits. Generalizations to 3D and 4D homological product\ncodes further feature fast PPMs in constant depth. While prior work on qLDPC\ncodes has focused on individual logical gates, we initiate the study of\nfault-tolerant compilation with our expanded set of native qLDPC code\noperations, constructing algorithmic primitives for preparing $k$-qubit GHZ\nstates and distilling/teleporting $k$ magic states with $O(1)$ space overhead\nin $O(1)$ and $O(\\sqrt{k} \\log k)$ logical cycles, respectively. We further\ngeneralize this to key algorithmic subroutines, demonstrating the efficient\nimplementation of quantum adders using parallel operations. Our constructions\nare naturally compatible with reconfigurable architectures such as neutral atom\narrays, paving the way to large-scale quantum computation with low space and\ntime overheads.\n","subjects":["Physics/Quantum Physics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}