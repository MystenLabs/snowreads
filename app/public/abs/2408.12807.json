{"id":"2408.12807","title":"Code Ownership: The Principles, Differences, and Their Associations with\n  Software Quality","authors":"Patanamon Thongtanunam, Chakkrit Tantithamthavorn","authorsParsed":[["Thongtanunam","Patanamon",""],["Tantithamthavorn","Chakkrit",""]],"versions":[{"version":"v1","created":"Fri, 23 Aug 2024 03:01:59 GMT"}],"updateDate":"2024-08-26","timestamp":1724382119000,"abstract":"  Code ownership -- an approximation of the degree of ownership of a software\ncomponent -- is one of the important software measures used in quality\nimprovement plans. However, prior studies proposed different variants of code\nownership approximations. Yet, little is known about the difference in code\nownership approximations and their association with software quality. In this\npaper, we investigate the differences in the commonly used ownership\napproximations (i.e., commit-based and line-based) in terms of the set of\ndevelopers, the approximated code ownership values, and the expertise level.\nThen, we analyze the association of each code ownership approximation with the\ndefect-proneness. Through an empirical study of 25 releases that span\nreal-world open-source software systems, we find that commit-based and\nline-based ownership approximations produce different sets of developers,\ndifferent code ownership values, and different sets of major developers. In\naddition, we find that the commit-based approximation has a stronger\nassociation with software quality than the line-based approximation. Based on\nour analysis, we recommend line-based code ownership be used for accountability\npurposes (e.g., authorship attribution, intellectual property), while\ncommit-based code ownership should be used for rapid bug-fixing and charting\nquality improvement plans.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-sa/4.0/"}