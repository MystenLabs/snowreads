{"id":"2407.14906","title":"Interdiction of minimum spanning trees and other matroid bases","authors":"Noah Weninger and Ricardo Fukasawa","authorsParsed":[["Weninger","Noah",""],["Fukasawa","Ricardo",""]],"versions":[{"version":"v1","created":"Sat, 20 Jul 2024 15:38:36 GMT"}],"updateDate":"2024-07-23","timestamp":1721489916000,"abstract":"  In the minimum spanning tree (MST) interdiction problem, we are given a graph\n$G=(V,E)$ with edge weights, and want to find some $X\\subseteq E$ satisfying a\nknapsack constraint such that the MST weight in $(V,E\\setminus X)$ is\nmaximized. Since MSTs of $G$ are the minimum weight bases in the graphic\nmatroid of $G$, this problem is a special case of matroid interdiction on a\nmatroid $M=(E,\\mathcal{I})$, in which the objective is instead to maximize the\nminimum weight of a basis of $M$ which is disjoint from $X$. By reduction from\n0-1 knapsack, matroid interdiction is NP-complete, even for uniform matroids.\n  We develop a new exact algorithm to solve the matroid interdiction problem.\nOne of the key components of our algorithm is a dynamic programming upper bound\nwhich only requires that a simpler discrete derivative problem can be\ncalculated/approximated for the given matroid. Our exact algorithm then uses\nthis bound within a custom branch-and-bound algorithm. For different matroids,\nwe show how this discrete derivative can be calculated/approximated. In\nparticular, for partition matroids, this yields a pseudopolynomial time\nalgorithm. For graphic matroids, an approximation can be obtained by solving a\nsequence of minimum cut problems, which we apply to the MST interdiction\nproblem. The running time of our algorithm is asymptotically faster than the\nbest known MST interdiction algorithm, up to polylog factors. Furthermore, our\nalgorithm achieves state-of-the-art computational performance: we solved all\navailable instances from the literature, and in many cases reduced the best\nrunning time from hours to seconds.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Discrete Mathematics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}