{"id":"2407.21049","title":"Evaluating Long Range Dependency Handling in Code Generation Models\n  using Multi-Step Key Retrieval","authors":"Yannick Assogba, Donghao Ren","authorsParsed":[["Assogba","Yannick",""],["Ren","Donghao",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 02:45:22 GMT"}],"updateDate":"2024-08-01","timestamp":1721702722000,"abstract":"  As language models support larger and larger context sizes, evaluating their\nability to make effective use of that context becomes increasingly important.\nWe analyze the ability of several code generation models to handle long range\ndependencies using a suite of multi-step key retrieval tasks in context windows\nup to 8k tokens in length. The tasks progressively increase in difficulty and\nallow more nuanced evaluation of model capabilities than tests like the popular\nneedle-in-the-haystack test. We find that performance degrades significantly\n(up to 2x) when a function references another function that is defined later in\nthe prompt. We also observe that models that use sliding window attention\nmechanisms have difficulty handling references further than the size of a\nsingle window. We perform simple prompt modifications using call graph\ninformation to improve multi-step retrieval performance up to 3x. Our analysis\nhighlights different facets of long-context performance and is suggestive of\nprompt construction strategies for code completion tools\n","subjects":["Computing Research Repository/Computation and Language","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Machine Learning"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}