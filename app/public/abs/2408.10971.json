{"id":"2408.10971","title":"Asynchronous Fault-Tolerant Distributed Proper Coloring of Graphs","authors":"Alkida Balliu and Pierre Fraigniaud and Patrick Lambein-Monette and\n  Dennis Olivetti and Mikael Rabie","authorsParsed":[["Balliu","Alkida",""],["Fraigniaud","Pierre",""],["Lambein-Monette","Patrick",""],["Olivetti","Dennis",""],["Rabie","Mikael",""]],"versions":[{"version":"v1","created":"Tue, 20 Aug 2024 16:03:23 GMT"}],"updateDate":"2024-08-21","timestamp":1724169803000,"abstract":"  We revisit asynchronous computing in networks of crash-prone processes, under\nthe asynchronous variant of the standard LOCAL model, recently introduced by\nFraigniaud et al. [DISC 2022]. We focus on the vertex coloring problem, and our\ncontributions concern both lower and upper bounds for this problem.\n  On the upper bound side, we design an algorithm tolerating an arbitrarily\nlarge number of crash failures that computes an $O(\\Delta^2)$-coloring of any\n$n$-node graph of maximum degree $\\Delta$, in $O(\\log^\\star n)$ rounds. This\nextends Linial's seminal result from the (synchronous failure-free) LOCAL model\nto its asynchronous crash-prone variant. Then, by allowing a dependency on\n$\\Delta$ on the runtime, we show that we can reduce the colors to\n$\\big(\\frac12(\\Delta+1)(\\Delta+2)-1 \\big)$. For cycles (i.e., for $\\Delta=2$),\nour algorithm achieves a 5-coloring of any $n$-node cycle, in $O(\\log^\\star n)$\nrounds. This improves the known 6-coloring algorithm by Fraigniaud et al., and\nfixes a bug in their algorithm, which was erroneously claimed to produce a\n5-coloring.\n  On the lower bound side, we show that, for $k<5$, and for every prime\ninteger~$n$, no algorithm can $k$-color the $n$-node cycle in the asynchronous\ncrash-prone variant of LOCAL, independently from the round-complexities of the\nalgorithms. This lower bound is obtained by reduction from an original\nextension of the impossibility of solving weak symmetry-breaking in the\nwait-free shared-memory model. We show that this impossibility still holds even\nif the processes are provided with inputs susceptible to help breaking\nsymmetry.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}