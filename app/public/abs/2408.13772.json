{"id":"2408.13772","title":"FRAP: A Flexible Resource Accessing Protocol for Multiprocessor\n  Real-Time Systems","authors":"Shuai Zhao, Hanzhi Xu, Nan Chen, Ruoxian Su, Wanli Chang","authorsParsed":[["Zhao","Shuai",""],["Xu","Hanzhi",""],["Chen","Nan",""],["Su","Ruoxian",""],["Chang","Wanli",""]],"versions":[{"version":"v1","created":"Sun, 25 Aug 2024 08:44:45 GMT"},{"version":"v2","created":"Tue, 27 Aug 2024 13:18:42 GMT"}],"updateDate":"2024-08-28","timestamp":1724575485000,"abstract":"  Fully-partitioned fixed-priority scheduling (FP-FPS) multiprocessor systems\nare widely found in real-time applications, where spin-based protocols are\noften deployed to manage the mutually exclusive access of shared resources.\nUnfortunately, existing approaches either enforce rigid spin priority rules for\nresource accessing or carry significant pessimism in the schedulability\nanalysis, imposing substantial blocking time regardless of task execution\nurgency or resource over-provisioning. This paper proposes FRAP, a spin-based\nflexible resource accessing protocol for FP-FPS systems. A task under FRAP can\nspin at any priority within a range for accessing a resource, allowing flexible\nand fine-grained resource control with predictable worst-case behaviour. Under\nflexible spinning, we demonstrate that the existing analysis techniques can\nlead to incorrect timing bounds and present a novel MCMF (minimum cost maximum\nflow)-based blocking analysis, providing predictability guarantee for FRAP. A\nspin priority assignment is reported that fully exploits flexible spinning to\nreduce the blocking time of tasks with high urgency, enhancing the performance\nof FRAP. Experimental results show that FRAP outperforms the existing\nspin-based protocols in schedulability by 15.20%-32.73% on average, up to\n65.85%.\n","subjects":["Computing Research Repository/Operating Systems"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}