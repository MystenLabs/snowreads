{"id":"2408.01751","title":"On the Rationale and Use of Assertion Messages in Test Code: Insights\n  from Software Practitioners","authors":"Anthony Peruma, Taryn Takebayashi, Rocky Huang, Joseph Carmelo\n  Averion, Veronica Hodapp, Christian D. Newman, Mohamed Wiem Mkaouer","authorsParsed":[["Peruma","Anthony",""],["Takebayashi","Taryn",""],["Huang","Rocky",""],["Averion","Joseph Carmelo",""],["Hodapp","Veronica",""],["Newman","Christian D.",""],["Mkaouer","Mohamed Wiem",""]],"versions":[{"version":"v1","created":"Sat, 3 Aug 2024 11:13:36 GMT"}],"updateDate":"2024-08-06","timestamp":1722683616000,"abstract":"  Unit testing is an important practice that helps ensure the quality of a\nsoftware system by validating its behavior through a series of test cases. Core\nto these test cases are assertion statements, which enable software\npractitioners to validate the correctness of the system's behavior. To aid with\nunderstanding and troubleshooting test case failures, practitioners can include\na message (i.e., assertion message) within the assertion statement. While prior\nstudies have examined the frequency and structure of assertion messages by\nmining software repositories, they do not determine their types or purposes or\nhow practitioners perceive the need for or the usage of various types of\nassertion messages.\n  In this paper, we survey 138 professional software practitioners to gather\ninsights into their experience and views regarding assertion messages. Our\nfindings reveal that a majority of survey respondents find assertion messages\nvaluable for troubleshooting failures, improving test understandability, and\nserving as documentation. However, not all respondents consistently include\nmessages in their assertion methods. We also identified common considerations\nfor constructing effective assertion messages, challenges in crafting them,\nmaintenance techniques, and their integration into debugging processes.\n  Our results contribute to the understanding of current practices and provide\nguidelines for authoring high-quality assertion messages, serving as a\nfoundation for best practices and coding standards. Furthermore, the insights\ncan guide the improvement of automated unit testing tools by incorporating\nchecks for the presence and quality of assertion messages and providing\nreal-time feedback to practitioners.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}