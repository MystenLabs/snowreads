{"id":"2408.09902","title":"Implementing OpenMP for Zig to enable its use in HPC context","authors":"David Kacs, Nick Brown, Joseph Lee","authorsParsed":[["Kacs","David",""],["Brown","Nick",""],["Lee","Joseph",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 11:16:50 GMT"}],"updateDate":"2024-08-20","timestamp":1724066210000,"abstract":"  This extended abstract explores supporting OpenMP in the Zig programming\nlanguage. Whilst, C and Fortran are currently the main languages used to\nimplement HPC applications, Zig provides a similar level of performance\ncomplimented with several modern language features, such as enforcing memory\nsafety. However, Zig lacks support for OpenMP which is the de facto threaded\nprogramming technology.\n  Leveraging Zig's LLVM compiler tooling, we have added partial support for\nOpenMP to the Zig compiler and demonstrated that the performance attained by\nusing Zig with OpenMP is comparable to, and in come cases exceeds, that of\nconventional HPC languages. Consequently we demonstrate that Zig is a viable\nand important programming technology to use for HPC, and this work paves the\nway for more HPC features to be added to Zig, ultimately providing HPC\ndevelopers with the option of using a safer, more modern language for creating\nhigh performance applications.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}