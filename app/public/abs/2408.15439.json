{"id":"2408.15439","title":"Towards observability of scientific applications","authors":"Bartosz Balis, Konrad Czerepak, Albert Kuzma, Jan Meizner, Lukasz\n  Wronski","authorsParsed":[["Balis","Bartosz",""],["Czerepak","Konrad",""],["Kuzma","Albert",""],["Meizner","Jan",""],["Wronski","Lukasz",""]],"versions":[{"version":"v1","created":"Tue, 27 Aug 2024 23:14:22 GMT"}],"updateDate":"2024-08-29","timestamp":1724800462000,"abstract":"  As software systems increase in complexity, conventional monitoring methods\nstruggle to provide a comprehensive overview or identify performance issues,\noften missing unexpected problems. Observability, however, offers a holistic\napproach, providing methods and tools that gather and analyze detailed\ntelemetry data to uncover hidden issues. Originally developed for cloud-native\nsystems, modern observability is less prevalent in scientific computing,\nparticularly in HPC clusters, due to differences in application architecture,\nexecution environments, and technology stacks. This paper proposes and\nevaluates an end-to-end observability solution tailored for scientific\ncomputing in HPC environments. We address several challenges, including\ncollection of application-level metrics, instrumentation, context propagation,\nand tracing. We argue that typical dashboards with charts are not sufficient\nfor advanced observability-driven analysis of scientific applications.\nConsequently, we propose a different approach based on data analysis using\nDataFrames and a Jupyter environment. The proposed solution is implemented and\nevaluated on two medical scientific pipelines running on an HPC cluster.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}