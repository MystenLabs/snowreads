{"id":"2407.05165","title":"Feedback-Driven Automated Whole Bug Report Reproduction for Android Apps","authors":"Dingbang Wang, Yu Zhao, Sidong Feng, Zhaoxu Zhang, William G. J.\n  Halfond, Chunyang Chen, Xiaoxia Sun, Jiangfan Shi, Tingting Yu","authorsParsed":[["Wang","Dingbang",""],["Zhao","Yu",""],["Feng","Sidong",""],["Zhang","Zhaoxu",""],["Halfond","William G. J.",""],["Chen","Chunyang",""],["Sun","Xiaoxia",""],["Shi","Jiangfan",""],["Yu","Tingting",""]],"versions":[{"version":"v1","created":"Sat, 6 Jul 2024 19:58:03 GMT"},{"version":"v2","created":"Thu, 1 Aug 2024 10:32:12 GMT"},{"version":"v3","created":"Wed, 28 Aug 2024 13:52:57 GMT"}],"updateDate":"2024-08-29","timestamp":1720295883000,"abstract":"  In software development, bug report reproduction is a challenging task. This\npaper introduces ReBL, a novel feedback-driven approach that leverages GPT-4, a\nlarge-scale language model (LLM), to automatically reproduce Android bug\nreports. Unlike traditional methods, ReBL bypasses the use of Step to Reproduce\n(S2R) entities. Instead, it leverages the entire textual bug report and employs\ninnovative prompts to enhance GPT's contextual reasoning. This approach is more\nflexible and context-aware than the traditional step-by-step entity matching\napproach, resulting in improved accuracy and effectiveness. In addition to\nhandling crash reports, ReBL has the capability of handling non-crash\nfunctional bug reports. Our evaluation of 96 Android bug reports (73 crash and\n23 non-crash) demonstrates that ReBL successfully reproduced 90.63% of these\nreports, averaging only 74.98 seconds per bug report. Additionally, ReBL\noutperformed three existing tools in both success rate and speed.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}