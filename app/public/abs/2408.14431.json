{"id":"2408.14431","title":"Towards Better Comprehension of Breaking Changes in the NPM Ecosystem","authors":"Dezhen Kong, Jiakun Liu, Lingfeng Bao, David Lo","authorsParsed":[["Kong","Dezhen",""],["Liu","Jiakun",""],["Bao","Lingfeng",""],["Lo","David",""]],"versions":[{"version":"v1","created":"Mon, 26 Aug 2024 17:18:38 GMT"}],"updateDate":"2024-08-27","timestamp":1724692718000,"abstract":"  Breaking changes cause a lot of effort to both downstream and upstream\ndevelopers: downstream developers need to adapt to breaking changes and\nupstream developers are responsible for identifying and documenting them. In\nthe NPM ecosystem, characterized by frequent code changes and a high tolerance\nfor making breaking changes, the effort is larger.\n  For better comprehension of breaking changes in the NPM ecosystem and to\nenhance breaking change detection tools, we conduct a large-scale empirical\nstudy to investigate breaking changes in the NPM ecosystem. We construct a\ndataset of explicitly documented breaking changes from 381 popular NPM\nprojects. We find that 93.6% of the detected breaking changes can be covered by\ndevelopers' documentation, and about 19% of the breaking changes cannot be\ndetected by regression testing. Then in the process of investigating source\ncode of our collected breaking changes, we yield a taxonomy of JavaScript and\nTypeScript-specific syntactic breaking changes and a taxonomy of major types of\nbehavioral breaking changes. Additionally, we investigate the reasons why\ndevelopers make breaking changes in NPM and find three major reasons, i.e., to\nreduce code redundancy, to improve identifier name, and to improve API design,\nand each category contains several sub-items.\n  We provide actionable implications for future research, e.g., automatic\nnaming and renaming techniques should be applied in JavaScript projects to\nimprove identifier names, future research can try to detect more types of\nbehavioral breaking changes. By presenting the implications, we also discuss\nthe weakness of automatic renaming and BC detection approaches.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}