{"id":"2407.20205","title":"Fast computation of permanents over $\\mathbb{F}_3$ via $\\mathbb{F}_2$\n  arithmetic","authors":"Danny Scheinerman","authorsParsed":[["Scheinerman","Danny",""]],"versions":[{"version":"v1","created":"Mon, 29 Jul 2024 17:36:12 GMT"},{"version":"v2","created":"Fri, 2 Aug 2024 18:58:27 GMT"}],"updateDate":"2024-08-06","timestamp":1722274572000,"abstract":"  We present a method of representing an element of $\\mathbb{F}_3^n$ as an\nelement of $\\mathbb{F}_n^2 \\times \\mathbb{F}_n^2$ which in practice will be a\npair of unsigned integers. We show how to do addition, subtraction and\npointwise multiplication and division of such vectors quickly using primitive\nbinary operations (and, or, xor). We use this machinery to develop a fast\nalgorithm for computing the permanent of a matrix in $\\mathbb{F}_3^{n\\times\nn}$. We present Julia code for a natural implementation of the permanent and\nshow that our improved implementation gives, roughly, a factor of 80 speedup\nfor problems of practical size. Using this improved code, we perform Monte\nCarlo simulations that suggest that the distribution of $\\mbox{perm}(A)$ tends\nto the uniform distribution as $n \\to \\infty$.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Mathematics/Combinatorics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}