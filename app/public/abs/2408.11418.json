{"id":"2408.11418","title":"To Tag, or Not to Tag: Translating C's Unions to Rust's Tagged Unions","authors":"Jaemin Hong and Sukyoung Ryu","authorsParsed":[["Hong","Jaemin",""],["Ryu","Sukyoung",""]],"versions":[{"version":"v1","created":"Wed, 21 Aug 2024 08:23:51 GMT"},{"version":"v2","created":"Mon, 16 Sep 2024 07:37:43 GMT"}],"updateDate":"2024-09-17","timestamp":1724228631000,"abstract":"  Automatic C-to-Rust translation is a promising way to enhance the reliability\nof legacy system software. However, C2Rust, an industrially developed\ntranslator, generates Rust code with unsafe features, undermining the\ntranslation's objective. While researchers have proposed techniques to remove\nunsafe features in C2Rust-generated code, these efforts have targeted only a\nlimited subset of unsafe features. One important unsafe feature remaining\nunaddressed is a union, a type consisting of multiple fields sharing the same\nmemory storage. Programmers often place a union with a tag in a struct to\nrecord the last-written field, but they can still access wrong fields. In\ncontrast, Rust's tagged unions combine tags and unions at the language level,\nensuring correct value access. In this work, we propose techniques to replace\nunions with tagged unions during C-to-Rust translation. We develop a static\nanalysis that facilitates such replacement by identifying tag fields and the\ncorresponding tag values. The analysis involves a must-points-to analysis\ncomputing struct field values and a heuristic interpreting these results. To\nenhance efficiency, we adopt intraprocedural function-wise analysis, allowing\nselective analysis of functions. Our evaluation on 36 real-world C programs\nshows that the proposed approach is (1) precise, identifying 74 tag fields with\nno false positives and only five false negatives, (2) mostly correct, with 17\nout of 23 programs passing tests post-transformation, and (3) efficient,\ncapable of analyzing and transforming 141k LOC in 4,910 seconds.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}