{"id":"2408.05625","title":"Memento Filter: A Fast, Dynamic, and Robust Range Filter","authors":"Navid Eslami, Niv Dayan","authorsParsed":[["Eslami","Navid",""],["Dayan","Niv",""]],"versions":[{"version":"v1","created":"Sat, 10 Aug 2024 20:11:28 GMT"},{"version":"v2","created":"Tue, 13 Aug 2024 02:24:24 GMT"}],"updateDate":"2024-08-14","timestamp":1723320688000,"abstract":"  Range filters are probabilistic data structures that answer approximate range\nemptiness queries. They aid in avoiding processing empty range queries and have\nuse cases in many application domains such as key-value stores and social web\nanalytics. However, current range filter designs do not support dynamically\nchanging and growing datasets. Moreover, several of these designs also exhibit\nimpractically high false positive rates under correlated workloads, which are\ncommon in practice. These impediments restrict the applicability of range\nfilters across a wide range of use cases.\n  We introduce Memento filter, the first range filter to offer dynamicity, fast\noperations, and a robust false positive rate guarantee for any workload.\nMemento filter partitions the key universe and clusters its keys according to\nthis partitioning. For each cluster, it stores a fingerprint and a list of key\nsuffixes contiguously. The encoding of these lists makes them amenable to\nexisting dynamic filter structures. Due to the well-defined one-to-one mapping\nfrom keys to suffixes, Memento filter supports inserts and deletes and can even\nexpand to accommodate a growing dataset.\n  We implement Memento filter on top of a Rank-and-Select Quotient filter and\nInfiniFilter and demonstrate that it achieves competitive false positive rates\nand performance with the state-of-the-art while also providing dynamicity. Due\nto its dynamicity, Memento filter is the first range filter applicable to\nB-Trees. We showcase this by integrating Memento filter into WiredTiger, a\nB-Tree-based key-value store. Memento filter doubles WiredTiger's range query\nthroughput when 50\\% of the queries are empty while keeping all other cost\nmetrics unharmed.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Databases"],"license":"http://creativecommons.org/licenses/by-sa/4.0/"}