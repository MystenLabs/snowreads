{"id":"2407.15049","title":"Accelerating Low-Rank Factorization-Based Semidefinite Programming\n  Algorithms on GPU","authors":"Qiushi Han, Zhenwei Lin, Hanwen Liu, Caihua Chen, Qi Deng, Dongdong\n  Ge, Yinyu Ye","authorsParsed":[["Han","Qiushi",""],["Lin","Zhenwei",""],["Liu","Hanwen",""],["Chen","Caihua",""],["Deng","Qi",""],["Ge","Dongdong",""],["Ye","Yinyu",""]],"versions":[{"version":"v1","created":"Sun, 21 Jul 2024 04:21:40 GMT"},{"version":"v2","created":"Wed, 24 Jul 2024 20:32:42 GMT"},{"version":"v3","created":"Sat, 24 Aug 2024 03:01:20 GMT"}],"updateDate":"2024-08-27","timestamp":1721535700000,"abstract":"  In this paper, we address a long-standing challenge: how to achieve both\nefficiency and scalability in solving semidefinite programming problems. We\npropose breakthrough acceleration techniques for a wide range of low-rank\nfactorization-based first-order methods using GPUs, making the computation much\nmore efficient and scalable. To illustrate the idea and effectiveness of our\napproach, we use the low-rank factorization-based SDP solver, LoRADS, as an\nexample, which involves both the classic Burer-Monterio method and a novel\nsplitting scheme with a starting logarithmic rank. Our numerical results\ndemonstrate that the accelerated GPU version of LoRADS, cuLoRADS, can solve\nhuge-scale semidefinite programming problems with remarkable efficiency. By\neffectively leveraging GPU computational power, cuLoRADS exhibits outstanding\nperformance. Specifically, it can solve a set of MaxCut problems with $10^7\n\\times 10^7$ matrix variables in 10 seconds to 1 minute each on an NVIDIA H100\nGPU with 80GB memory, whereas previous solvers demonstrated the capability of\nhandling problems of this scale, required at least dozens of hours per problem\non CPUs. Additionally, cuLoRADS shows exceptional scalability by solving 1) a\nMaxCut problem with a $170 \\text{ million} \\times 170 \\text{ million}$ matrix\nvariable and 2) a Matrix Completion problem with a 20 million $\\times$ 20\nmillion matrix variable and approximately 200 million constraints, both in a\nmatter of minutes.\n","subjects":["Mathematics/Optimization and Control"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}