{"id":"2407.17150","title":"SimCT: A Simple Consistency Test Protocol in LLMs Development Lifecycle","authors":"Fufangchen Zhao, Guoqiang Jin, Rui Zhao, Jiangheng Huang, Fei Tan","authorsParsed":[["Zhao","Fufangchen",""],["Jin","Guoqiang",""],["Zhao","Rui",""],["Huang","Jiangheng",""],["Tan","Fei",""]],"versions":[{"version":"v1","created":"Wed, 24 Jul 2024 10:49:19 GMT"},{"version":"v2","created":"Fri, 9 Aug 2024 03:14:51 GMT"}],"updateDate":"2024-08-12","timestamp":1721818159000,"abstract":"  In this work, we report our efforts to advance the standard operation\nprocedure of developing Large Language Models (LLMs) or LLMs-based systems or\nservices in industry. We introduce the concept of Large Language Model\nDevelopment Lifecycle (LDLC) and then highlight the importance of consistency\ntest in ensuring the delivery quality. The principled solution of consistency\ntest, however, is usually overlooked by industrial practitioners and not urgent\nin academia, and current practical solutions are insufficiently rigours and\nlabor-intensive. We thus propose a simple yet effective consistency test\nprotocol, named SimCT. SimCT is mainly to proactively check the consistency\nacross different development stages of \"bare metal\" LLMs or associated services\nwithout accessing the model artifacts, in an attempt to expedite the delivery\nby reducing the back-and-forth alignment communications among multiple teams\ninvolved in different development stages.\n  Specifically, SimCT encompasses response-wise and model-wise tests. We\nimplement the protocol with LightGBM and Student's t-test for two components\nrespectively, and perform extensive experiments to substantiate the\neffectiveness of SimCT and the involved components.\n","subjects":["Computing Research Repository/Computation and Language","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}