{"id":"2408.04466","title":"One-Shot Method for Computing Generalized Winding Numbers","authors":"Cedric Martens and Mikhail Bessmeltsev","authorsParsed":[["Martens","Cedric",""],["Bessmeltsev","Mikhail",""]],"versions":[{"version":"v1","created":"Thu, 8 Aug 2024 13:49:26 GMT"}],"updateDate":"2024-08-09","timestamp":1723124966000,"abstract":"  The generalized winding number is an essential part of the geometry\nprocessing toolkit, allowing to quantify how much a given point is inside a\nsurface, often represented by a mesh or a point cloud, even when the surface is\nopen, noisy, or non-manifold. Parameterized surfaces, which often contain\nintentional and unintentional gaps and imprecisions, would also benefit from a\ngeneralized winding number. Standard methods to compute it, however, rely on a\nsurface integral, challenging to compute without surface discretization,\nleading to loss of precision characteristic of parametric surfaces.\n  We propose an alternative method to compute a generalized winding number,\nbased only on the surface boundary and the intersections of a single ray with\nthe surface. For parametric surfaces, we show that all the necessary operations\ncan be done via a Sum-of-Squares (SOS) formulation, thus computing generalized\nwinding numbers without surface discretization with machine precision. We show\nthat by discretizing only the boundary of the surface, this becomes an\nefficient method.\n  We demonstrate an application of our method to the problem of computing a\ngeneralized winding number of a surface represented by a curve network, where\neach curve loop is surfaced via Laplace equation. We use the Boundary Element\nMethod to express the solution as a parametric surface, allowing us to apply\nour method without meshing the surfaces. As a bonus, we also demonstrate that\nfor meshes with many triangles and a simple boundary, our method is faster than\nthe hierarchical evaluation of the generalized winding number while still being\nprecise.\n  We validate our algorithms theoretically, numerically, and by demonstrating a\ngallery of results \\new{on a variety of parametric surfaces and meshes}, as\nwell uses in a variety of applications, including voxelizations and boolean\noperations.\n","subjects":["Computing Research Repository/Graphics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}