{"id":"2408.06685","title":"Faster Lattice Basis Computation -- The Generalization of the Euclidean\n  Algorithm","authors":"Kim-Manuel Klein and Janina Reuter","authorsParsed":[["Klein","Kim-Manuel",""],["Reuter","Janina",""]],"versions":[{"version":"v1","created":"Tue, 13 Aug 2024 07:24:53 GMT"}],"updateDate":"2024-08-14","timestamp":1723533893000,"abstract":"  The Euclidean algorithm the oldest algorithms known to mankind. Given two\nintegral numbers $a_1$ and $a_2$, it computes the greatest common divisor (gcd)\nof $a_1$ and $a_2$ in a very elegant way. From a lattice perspective, it\ncomputes a basis of the sum of two one-dimensional lattices $a_1 \\mathbb{Z}$\nand $a_2 \\mathbb{Z}$ as $\\gcd(a_1,a_2) \\mathbb{Z} = a_1 \\mathbb{Z} + a_2\n\\mathbb{Z}$. In this paper, we show that the classical Euclidean algorithm can\nbe adapted in a very natural way to compute a basis of a general lattice $L\n(A_1, \\ldots , A_n)$ given vectors $A_1, \\ldots , A_n \\in \\mathbb{Z}^d$ with\n$n> \\mathrm{rank}(a_1, \\ldots ,a_d)$. Similar to the Euclidean algorithm, our\nalgorithm is very easy to describe and implement and can be written within 12\nlines of pseudocode.\n  Our generalized version of the Euclidean algorithm allows for several degrees\nof freedom in the pivoting process. Hence, in a second step, we show that this\nfreedom can be exploited to make the algorithm perform more efficiently. As our\nmain result, we obtain an algorithm to compute a lattice basis for given\nvectors $A_1, \\ldots , A_n \\in \\mathbb{Z}^d$ in time (counting bit operations)\n$LS + \\tilde O ((n-d)d^2 \\cdot \\log(||A||)$, where $LS$ is the time required to\nobtain the exact fractional solution of a certain system of linear equalities.\nThe analysis of the running time of our algorithms relies on fundamental\nstatements on the fractionality of solutions of linear systems of equations.\n  So far, the fastest algorithm for lattice basis computation was due to\nStorjohann and Labhan [SL96] having a running time of $\\tilde O (nd^\\omega\\log\n||A||)$. For current upper bounds of $LS$, our algorithm has a running time\nimprovement of a factor of at least $d^{0.12}$ over [SL96]. Our algorithm is\ntherefore the first general algorithmic improvement to this classical problem\nin nearly 30 years.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Discrete Mathematics","Mathematics/Algebraic Geometry"],"license":"http://creativecommons.org/licenses/by/4.0/"}