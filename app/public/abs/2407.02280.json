{"id":"2407.02280","title":"FedIA: Federated Medical Image Segmentation with Heterogeneous\n  Annotation Completeness","authors":"Yangyang Xiang, Nannan Wu, Li Yu, Xin Yang, Kwang-Ting Cheng and\n  Zengqiang Yan","authorsParsed":[["Xiang","Yangyang",""],["Wu","Nannan",""],["Yu","Li",""],["Yang","Xin",""],["Cheng","Kwang-Ting",""],["Yan","Zengqiang",""]],"versions":[{"version":"v1","created":"Tue, 2 Jul 2024 14:08:55 GMT"},{"version":"v2","created":"Wed, 3 Jul 2024 07:12:34 GMT"}],"updateDate":"2024-07-04","timestamp":1719929335000,"abstract":"  Federated learning has emerged as a compelling paradigm for medical image\nsegmentation, particularly in light of increasing privacy concerns. However,\nmost of the existing research relies on relatively stringent assumptions\nregarding the uniformity and completeness of annotations across clients.\nContrary to this, this paper highlights a prevalent challenge in medical\npractice: incomplete annotations. Such annotations can introduce incorrectly\nlabeled pixels, potentially undermining the performance of neural networks in\nsupervised learning. To tackle this issue, we introduce a novel solution, named\nFedIA. Our insight is to conceptualize incomplete annotations as noisy data\n(i.e., low-quality data), with a focus on mitigating their adverse effects. We\nbegin by evaluating the completeness of annotations at the client level using a\ndesigned indicator. Subsequently, we enhance the influence of clients with more\ncomprehensive annotations and implement corrections for incomplete ones,\nthereby ensuring that models are trained on accurate data. Our method's\neffectiveness is validated through its superior performance on two extensively\nused medical image segmentation datasets, outperforming existing solutions. The\ncode is available at https://github.com/HUSTxyy/FedIA.\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition","Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}