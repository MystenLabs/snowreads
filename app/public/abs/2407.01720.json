{"id":"2407.01720","title":"Linearizability and State-Machine Replication: Is it a match?","authors":"Franz J. Hauck and Alexander He{\\ss}","authorsParsed":[["Hauck","Franz J.",""],["He√ü","Alexander",""]],"versions":[{"version":"v1","created":"Mon, 1 Jul 2024 18:49:56 GMT"}],"updateDate":"2024-07-03","timestamp":1719859796000,"abstract":"  Linearizability is a well-known correctness property for concurrent and\ndistributed systems. In the past, it was also used to prove the design and\nimplementation of replicated state-machines correct. State-machine replication\n(SMR) is a concept to achieve fault-tolerant services by replicating the\napplication code and maintaining its deterministic execution in all correct\nreplicas. Correctness of SMR needs to address both, the execution of the\napplication code -- the state machine -- and the replication framework that\ntakes care of communication, checkpointing and recovery. We show that\nlinearizability is overly restrictive for SMR as it excludes many applications\nfrom being replicated. It cannot deal with conditional waits and bidirectional\ndata flows between concurrent executions. Further, linearizability does not\nallow for vertical composition, e.g., nested invocations. In this work we argue\nthat interval linearizability, a recently defined relaxation of\nlinearizability, is the appropriate correctness criterion for SMR systems. This\nno longer puts any constraints on the application code. Instead the focus for\ncorrectness proofs of an SMR system is on the deterministic execution of the\napplication within correct replicas under the assumptions of the chosen failure\nmodel. Thus, this work not only clears some myths about linearizable SMR but\nalso relieves correctness proofs from linearizability proofs.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}