{"id":"2407.00575","title":"Learning to Control Unknown Strongly Monotone Games","authors":"Siddharth Chandak, Ilai Bistritz, Nicholas Bambos","authorsParsed":[["Chandak","Siddharth",""],["Bistritz","Ilai",""],["Bambos","Nicholas",""]],"versions":[{"version":"v1","created":"Sun, 30 Jun 2024 03:33:42 GMT"}],"updateDate":"2024-07-02","timestamp":1719718422000,"abstract":"  Consider $N$ players each with a $d$-dimensional action set. Each of the\nplayers' utility functions includes their reward function and a linear term for\neach dimension, with coefficients that are controlled by the manager. We assume\nthat the game is strongly monotone, so if each player runs gradient descent,\nthe dynamics converge to a unique Nash equilibrium (NE). The NE is typically\ninefficient in terms of global performance. The resulting global performance of\nthe system can be improved by imposing $K$-dimensional linear constraints on\nthe NE. We therefore want the manager to pick the controlled coefficients that\nimpose the desired constraint on the NE. However, this requires knowing the\nplayers' reward functions and their action sets. Obtaining this game structure\ninformation is infeasible in a large-scale network and violates the users'\nprivacy. To overcome this, we propose a simple algorithm that learns to shift\nthe NE of the game to meet the linear constraints by adjusting the controlled\ncoefficients online. Our algorithm only requires the linear constraints\nviolation as feedback and does not need to know the reward functions or the\naction sets. We prove that our algorithm, which is based on two time-scale\nstochastic approximation, guarantees convergence with probability 1 to the set\nof NE that meet target linear constraints. We then provide a mean square\nconvergence rate of $O(t^{-1/4})$ for our algorithm. This is the first such\nbound for two time-scale stochastic approximation where the slower time-scale\nis a fixed point iteration with a non-expansive mapping. We demonstrate how our\nscheme can be applied to optimizing a global quadratic cost at NE and load\nbalancing in resource allocation games. We provide simulations of our algorithm\nfor these scenarios.\n","subjects":["Computing Research Repository/Multiagent Systems","Computing Research Repository/Machine Learning","Computing Research Repository/Systems and Control","Electrical Engineering and Systems Science/Systems and Control"],"license":"http://creativecommons.org/licenses/by/4.0/"}