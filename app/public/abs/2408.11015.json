{"id":"2408.11015","title":"Hyperproperty-Preserving Register Specifications (Extended Version)","authors":"Yoav Ben Shimon, Ori Lahav, Sharon Shoham","authorsParsed":[["Shimon","Yoav Ben",""],["Lahav","Ori",""],["Shoham","Sharon",""]],"versions":[{"version":"v1","created":"Tue, 20 Aug 2024 17:10:24 GMT"}],"updateDate":"2024-08-21","timestamp":1724173824000,"abstract":"  Reasoning about hyperproperties of concurrent implementations, such as the\nguarantees these implementations provide to randomized client programs, has\nbeen a long-standing challenge. Standard linearizability enables the use of\natomic specifications for reasoning about standard properties, but not about\nhyperproperties. A stronger correctness criterion, called strong\nlinearizability, enables such reasoning, but is rarely achievable, leaving\nvarious useful implementations with no means for reasoning about their\nhyperproperties. In this paper, we focus on registers and devise non-atomic\nspecifications that capture a wide-range of well-studied register\nimplementations and enable reasoning about their hyperproperties. First, we\nconsider the class of write strong-linearizable implementations, a recently\nproposed useful weakening of strong linearizability, which allows more\nintricate implementations, such as the well-studied single-writer ABD\ndistributed implementation. We introduce a simple shared-memory register\nspecification that can be used for reasoning about hyperproperties of programs\nthat use write strongly-linearizable implementations. Second, we introduce a\nnew linearizability class, which we call decisive linearizability, that is\nweaker than write strong-linearizability and includes multi-writer ABD, and\ndevelop a second shared-memory register specification for reasoning about\nhyperproperties of programs that use register implementations of this class.\nThese results shed light on the hyperproperties guaranteed when simulating\nshared memory in a crash-resilient message-passing system.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"p6Si4Jwyp8RkNHrkyWi-6CK8ukqwPlB2f3XTTf4J9As","pdfSize":"1415927"}
