{"id":"2408.16353","title":"DetectBERT: Towards Full App-Level Representation Learning to Detect\n  Android Malware","authors":"Tiezhu Sun, Nadia Daoudi, Kisub Kim, Kevin Allix, Tegawend\\'e F.\n  Bissyand\\'e, Jacques Klein","authorsParsed":[["Sun","Tiezhu",""],["Daoudi","Nadia",""],["Kim","Kisub",""],["Allix","Kevin",""],["Bissyandé","Tegawendé F.",""],["Klein","Jacques",""]],"versions":[{"version":"v1","created":"Thu, 29 Aug 2024 08:47:25 GMT"}],"updateDate":"2024-08-30","timestamp":1724921245000,"abstract":"  Recent advancements in ML and DL have significantly improved Android malware\ndetection, yet many methodologies still rely on basic static analysis,\nbytecode, or function call graphs that often fail to capture complex malicious\nbehaviors. DexBERT, a pre-trained BERT-like model tailored for Android\nrepresentation learning, enriches class-level representations by analyzing\nSmali code extracted from APKs. However, its functionality is constrained by\nits inability to process multiple Smali classes simultaneously. This paper\nintroduces DetectBERT, which integrates correlated Multiple Instance Learning\n(c-MIL) with DexBERT to handle the high dimensionality and variability of\nAndroid malware, enabling effective app-level detection. By treating\nclass-level features as instances within MIL bags, DetectBERT aggregates these\ninto a comprehensive app-level representation. Our evaluation demonstrates that\nDetectBERT not only surpasses existing state-of-the-art detection methods but\nalso adapts to evolving malware threats. Moreover, the versatility of the\nDetectBERT framework holds promising potential for broader applications in\napp-level analysis and other software engineering tasks, offering new avenues\nfor research and development.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}