{"id":"2407.00573","title":"A Simple Representation of Tree Covering Utilizing Balanced Parentheses\n  and Efficient Implementation of Average-Case Optimal RMQs","authors":"Kou Hamada, Sankardeep Chakraborty, Seungbum Jo, Takuto Koriyama,\n  Kunihiko Sadakane, Srinivasa Rao Satti","authorsParsed":[["Hamada","Kou",""],["Chakraborty","Sankardeep",""],["Jo","Seungbum",""],["Koriyama","Takuto",""],["Sadakane","Kunihiko",""],["Satti","Srinivasa Rao",""]],"versions":[{"version":"v1","created":"Sun, 30 Jun 2024 03:25:33 GMT"},{"version":"v2","created":"Thu, 8 Aug 2024 02:37:25 GMT"}],"updateDate":"2024-08-09","timestamp":1719717933000,"abstract":"  Tree covering is a technique for decomposing a tree into smaller-sized trees\nwith desirable properties, and has been employed in various succinct data\nstructures. However, significant hurdles stand in the way of a practical\nimplementation of tree covering: a lot of pointers are used to maintain the\ntree-covering hierarchy and many indices for tree navigational queries consume\ntheoretically negligible yet practically vast space. To tackle these problems,\nwe propose a simple representation of tree covering using a balanced\nparenthesis representation. The key to the proposal is the observation that\nevery micro tree splits into at most two intervals on the BP representation.\nUtilizing the representation, we propose several data structures that represent\na tree and its tree cover, which consequently allow micro tree compression with\narbitrary coding and efficient tree navigational queries. We also applied our\ndata structure to average-case optimal RMQ by Munro et al.~[ESA 2021] and\nimplemented the RMQ data structure. Our RMQ data structures spend less than\n$2n$ bits and process queries in a practical time on several settings of the\nperformance evaluation, reducing the gap between theoretical space complexity\nand actual space consumption. We also implement tree navigational operations\nwhile using the same amount of space as the RMQ data structures. We believe the\nrepresentation can be widely utilized for designing practically\nmemory-efficient data structures based on tree covering.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Databases"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"rDRFMmeQbS8cUd34SmFMrskCQw0yezEy8axtExOngYk","pdfSize":"2609546"}
