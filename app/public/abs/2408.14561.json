{"id":"2408.14561","title":"Mica: Automated Differential Testing for OCaml Modules","authors":"Ernest Ng, Harrison Goldstein, Benjamin C. Pierce","authorsParsed":[["Ng","Ernest",""],["Goldstein","Harrison",""],["Pierce","Benjamin C.",""]],"versions":[{"version":"v1","created":"Mon, 26 Aug 2024 18:22:18 GMT"}],"updateDate":"2024-08-28","timestamp":1724696538000,"abstract":"  Suppose we are given two OCaml modules implementing the same signature. How\ndo we check that they are observationally equivalent -- that is, that they\nbehave the same on all inputs? One established technique is to use a\nproperty-based testing (PBT) tool such as QuickCheck. Currently, however, this\ncan require significant amounts of boilerplate code and ad-hoc test harnesses.\nTo address this issue, we present Mica, an automated tool for testing\nobservational equivalence of OCaml modules. Mica is implemented as a PPX\ncompiler extension, allowing users to supply minimal annotations to a module\nsignature. These annotations guide Mica to automatically derive specialized PBT\ncode that checks observational equivalence. We discuss the design of Mica and\ndemonstrate its efficacy as a testing tool on various modules taken from\nreal-world OCaml libraries.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}