{"id":"2408.05100","title":"AI-driven Java Performance Testing: Balancing Result Quality with\n  Testing Time","authors":"Luca Traini, Federico Di Menna, Vittorio Cortellessa","authorsParsed":[["Traini","Luca",""],["Di Menna","Federico",""],["Cortellessa","Vittorio",""]],"versions":[{"version":"v1","created":"Fri, 9 Aug 2024 14:41:32 GMT"},{"version":"v2","created":"Sat, 14 Sep 2024 11:26:31 GMT"}],"updateDate":"2024-09-17","timestamp":1723214492000,"abstract":"  Performance testing aims at uncovering efficiency issues of software systems.\nIn order to be both effective and practical, the design of a performance test\nmust achieve a reasonable trade-off between result quality and testing time.\nThis becomes particularly challenging in Java context, where the software\nundergoes a warm-up phase of execution, due to just-in-time compilation. During\nthis phase, performance measurements are subject to severe fluctuations, which\nmay adversely affect quality of performance test results. However, these\napproaches often provide suboptimal estimates of the warm-up phase, resulting\nin either insufficient or excessive warm-up iterations, which may degrade\nresult quality or increase testing time. There is still a lack of consensus on\nhow to properly address this problem. Here, we propose and study an AI-based\nframework to dynamically halt warm-up iterations at runtime. Specifically, our\nframework leverages recent advances in AI for Time Series Classification (TSC)\nto predict the end of the warm-up phase during test execution. We conduct\nexperiments by training three different TSC models on half a million of\nmeasurement segments obtained from JMH microbenchmark executions. We find that\nour framework significantly improves the accuracy of the warm-up estimates\nprovided by state-of-practice and state-of-the-art methods. This higher\nestimation accuracy results in a net improvement in either result quality or\ntesting time for up to +35.3% of the microbenchmarks. Our study highlights that\nintegrating AI to dynamically estimate the end of the warm-up phase can enhance\nthe cost-effectiveness of Java performance testing.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Machine Learning","Computing Research Repository/Performance"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"QsAIb-gN-sbjsPe9eunSPT5PFXckDW7OkEeD7gXgExA","pdfSize":"5755314"}
