{"id":"2408.07436","title":"M2L Translation Operators for Kernel Independent Fast Multipole Methods\n  on Modern Architectures","authors":"Srinath Kailasa, Timo Betcke, Sarah El Kazdadi","authorsParsed":[["Kailasa","Srinath",""],["Betcke","Timo",""],["Kazdadi","Sarah El",""]],"versions":[{"version":"v1","created":"Wed, 14 Aug 2024 10:14:07 GMT"}],"updateDate":"2024-08-15","timestamp":1723630447000,"abstract":"  Current and future trends in computer hardware, in which the disparity\nbetween available flops and memory bandwidth continues to grow, favour\nalgorithm implementations which minimise data movement even at the cost of more\nflops. In this study we review the requirements for high performance\nimplementations of the kernel independent Fast Multipole Method (kiFMM), a\nvariant of the crucial FMM algorithm for the rapid evaluation of N-body\npotential problems. Performant implementations of the kiFMM typically rely on\nFast Fourier Transforms for the crucial M2L (Multipole-to-Local) operation.\nHowever, in recent years for other FMM variants such as the black-box FMM also\nBLAS based M2L translation operators have become popular that rely on direct\nmatrix compression techniques. In this paper we present algorithmic\nimprovements for BLAS based M2L translation operator and benchmark them against\nFFT based M2L translation operators. In order to allow a fair comparison we\nhave implemented our own high-performance kiFMM algorithm in Rust that performs\ncompetitively against other implementations, and allows us to flexibly switch\nbetween BLAS and FFT based translation operators.\n","subjects":["Computing Research Repository/Computational Engineering, Finance, and Science"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}