{"id":"2407.15043","title":"XI-DeepONet: An operator learning method for elliptic interface problems","authors":"Ran Bi, Jingrun Chen and Weibing Deng","authorsParsed":[["Bi","Ran",""],["Chen","Jingrun",""],["Deng","Weibing",""]],"versions":[{"version":"v1","created":"Sun, 21 Jul 2024 03:37:47 GMT"}],"updateDate":"2024-07-23","timestamp":1721533067000,"abstract":"  Scientific computing has been an indispensable tool in applied sciences and\nengineering, where traditional numerical methods are often employed due to\ntheir superior accuracy guarantees. However, these methods often encounter\nchallenges when dealing with problems involving complex geometries. Machine\nlearning-based methods, on the other hand, are mesh-free, thus providing a\npromising alternative. In particular, operator learning methods have been\nproposed to learn the mapping from the input space to the solution space,\nenabling rapid inference of solutions to partial differential equations (PDEs)\nonce trained. In this work, we address the parametric elliptic interface\nproblem. Building upon the deep operator network (DeepONet), we propose an\nextended interface deep operator network (XI-DeepONet). XI-DeepONet exhibits\nthree unique features: (1) The interface geometry is incorporated into the\nneural network as an additional input, enabling the network to infer solutions\nfor new interface geometries once trained; (2) The level set function\nassociated with the interface geometry is treated as the input, on which the\nsolution mapping is continuous and can be effectively approximated by the deep\noperator network; (3) The network can be trained without any input-output data\npairs, thus completely avoiding the need for meshes of any kind, directly or\nindirectly. We conduct a comprehensive series of numerical experiments to\ndemonstrate the accuracy and robustness of the proposed method.\n","subjects":["Mathematics/Numerical Analysis","Computing Research Repository/Numerical Analysis"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}