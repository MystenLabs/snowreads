{"id":"2407.09714","title":"Memory Lower Bounds and Impossibility Results for Anonymous Dynamic\n  Broadcast","authors":"Garrett Parzych and Joshua J. Daymude","authorsParsed":[["Parzych","Garrett",""],["Daymude","Joshua J.",""]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 22:55:01 GMT"}],"updateDate":"2024-07-16","timestamp":1720824901000,"abstract":"  Broadcast is a ubiquitous distributed computing problem that underpins many\nother system tasks. In static, connected networks, it was recently shown that\nbroadcast is solvable without any node memory and only constant-size messages\nin worst-case asymptotically optimal time (Hussak and Trehan,\nPODC'19/STACS'20/DC'23). In the dynamic setting of adversarial topology\nchanges, however, existing algorithms rely on identifiers, port labels, or\npolynomial memory to solve broadcast and compute functions over node inputs. We\ninvestigate space-efficient, terminating broadcast algorithms for anonymous,\nsynchronous, 1-interval connected dynamic networks and introduce the first\nmemory lower bounds in this setting. Specifically, we prove that broadcast with\ntermination detection is impossible for idle-start algorithms (where only the\nbroadcaster can initially send messages) and otherwise requires $\\Omega(\\log\nn)$ memory per node, where $n$ is the number of nodes in the network. Even if\nthe termination condition is relaxed to stabilizing termination (eventually no\nadditional messages are sent), we show that any idle-start algorithm must use\n$\\omega(1)$ memory per node, separating the static and dynamic settings for\nanonymous broadcast. This lower bound is not far from optimal, as we present an\nalgorithm that solves broadcast with stabilizing termination using\n$\\mathcal{O}(\\log n)$ memory per node in worst-case asymptotically optimal\ntime. In sum, these results reveal the necessity of non-constant memory for\nnontrivial terminating computation in anonymous dynamic networks.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}