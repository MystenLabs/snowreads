{"id":"2408.06385","title":"ViC: Virtual Compiler Is All You Need For Assembly Code Search","authors":"Zeyu Gao, Hao Wang, Yuanda Wang, Chao Zhang","authorsParsed":[["Gao","Zeyu",""],["Wang","Hao",""],["Wang","Yuanda",""],["Zhang","Chao",""]],"versions":[{"version":"v1","created":"Sat, 10 Aug 2024 17:23:02 GMT"}],"updateDate":"2024-08-14","timestamp":1723310582000,"abstract":"  Assembly code search is vital for reducing the burden on reverse engineers,\nallowing them to quickly identify specific functions using natural language\nwithin vast binary programs. Despite its significance, this critical task is\nimpeded by the complexities involved in building high-quality datasets. This\npaper explores training a Large Language Model (LLM) to emulate a general\ncompiler. By leveraging Ubuntu packages to compile a dataset of 20 billion\ntokens, we further continue pre-train CodeLlama as a Virtual Compiler (ViC),\ncapable of compiling any source code of any language to assembly code. This\napproach allows for virtual compilation across a wide range of programming\nlanguages without the need for a real compiler, preserving semantic equivalency\nand expanding the possibilities for assembly code dataset construction.\nFurthermore, we use ViC to construct a sufficiently large dataset for assembly\ncode search. Employing this extensive dataset, we achieve a substantial\nimprovement in assembly code search performance, with our model surpassing the\nleading baseline by 26%.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Computation and Language"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}