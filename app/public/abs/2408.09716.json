{"id":"2408.09716","title":"RENAS: Prioritizing Co-Renaming Opportunities of Identifiers","authors":"Naoki Doi, Yuki Osumi, Shinpei Hayashi","authorsParsed":[["Doi","Naoki",""],["Osumi","Yuki",""],["Hayashi","Shinpei",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 06:13:09 GMT"},{"version":"v2","created":"Tue, 20 Aug 2024 15:08:10 GMT"}],"updateDate":"2024-08-21","timestamp":1724047989000,"abstract":"  Renaming identifiers in source code is a common refactoring task in software\ndevelopment. When renaming an identifier, other identifiers containing words\nwith the same naming intention related to the renaming should be renamed\nsimultaneously. However, identifying these related identifiers can be\nchallenging. This study introduces a technique called RENAS, which identifies\nand recommends related identifiers that should be renamed simultaneously in\nJava applications. RENAS determines priority scores for renaming candidates\nbased on the relationships and similarities among identifiers. Since\nidentifiers that have a relationship and/or have similar vocabulary in the\nsource code are often renamed together, their priority scores are determined\nbased on these factors. Identifiers with higher priority are recommended to be\nrenamed together. Through an evaluation involving real renaming instances\nextracted from change histories and validated manually, RENAS demonstrated an\nimprovement in the F1-measure by more than 0.11 compared with existing renaming\nrecommendation approaches.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}