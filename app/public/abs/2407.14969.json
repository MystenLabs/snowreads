{"id":"2407.14969","title":"Sniffing Helps to Meet: Deterministic Rendezvous of Anonymous Agents in\n  the Grid","authors":"Younan Gao and Andrzej Pelc","authorsParsed":[["Gao","Younan",""],["Pelc","Andrzej",""]],"versions":[{"version":"v1","created":"Sat, 20 Jul 2024 19:32:53 GMT"}],"updateDate":"2024-07-23","timestamp":1721503973000,"abstract":"  Two identical anonymous mobile agents have to meet at a node of the infinite\noriented grid whose nodes are unlabeled. This problem is known as rendezvous.\nThe agents execute the same deterministic algorithm. Time is divided into\nrounds, and in each round each agent can either stay idle at the current node\nor move to an adjacent node. An adversary places the agents at two nodes of the\ngrid at a distance at most $D$, and wakes them up in possibly different rounds.\nEach agent starts executing the algorithm in its wakeup round.\n  If agents cannot leave any marks on visited nodes then they can never meet,\neven if they start simultaneously at adjacent nodes and know it. Hence, we\nassume that each agent marks any unmarked node it visits, and that an agent can\ndistinguish if a node it visits has been previously marked or not. The time of\na rendezvous algorithm is the number of rounds between the wakeup of the later\nagent and rendezvous. We ask the question whether the capability of marking\nnodes enables the agents to meet, and if so, what is the fastest rendezvous\nalgorithm.\n  We consider this problem under three scenarios. First, agents know $D$ but\nmay start with arbitrary delay. Second, they start simultaneously but do not\nhave any {\\em a priori} knowledge. Third, most difficult scenario, we do not\nmake any of the above facilitating assumptions. Agents start with arbitrary\ndelay and they do not have any a priori knowledge. We prove that in the first\ntwo scenarios rendezvous can be accomplished in time $O(D)$. This is clearly\noptimal. For the third scenario, we prove that there does not exist any\nrendezvous algorithm working in time $o(D^{\\sqrt{2}})$, and we show an\nalgorithm working in time $O(D^2)$. The above negative result shows a\nseparation between the optimal complexity in the two easier scenarios and the\noptimal complexity in the most difficult scenario.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}