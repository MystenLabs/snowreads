{"id":"2407.15519","title":"On the Automated Processing of User Feedback","authors":"Walid Maalej and Volodymyr Biryuk and Jialiang Wei and Fabian Panse","authorsParsed":[["Maalej","Walid",""],["Biryuk","Volodymyr",""],["Wei","Jialiang",""],["Panse","Fabian",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 10:13:13 GMT"}],"updateDate":"2024-07-23","timestamp":1721643193000,"abstract":"  User feedback is becoming an increasingly important source of information for\nrequirements engineering, user interface design, and software engineering in\ngeneral. Nowadays, user feedback is largely available and easily accessible in\nsocial media, product forums, or app stores. Over the last decade, research has\nshown that user feedback can help software teams: a) better understand how\nusers are actually using specific product features and components, b) faster\nidentify, reproduce, and fix defects, and b) get inspirations for improvements\nor new features. However, to tap the full potential of feedback, there are two\nmain challenges that need to be solved. First, software vendors must cope with\na large quantity of feedback data, which is hard to manage manually. Second,\nvendors must also cope with a varying quality of feedback as some items might\nbe uninformative, repetitive, or simply wrong. This chapter summarises and\npipelines various data mining, machine learning, and natural language\nprocessing techniques, including recent Large Language Models, to cope with the\nquantity and quality challenges. We guide researchers and practitioners through\nimplementing effective, actionable analysis of user feedback for software and\nrequirements engineering.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Human-Computer Interaction"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}