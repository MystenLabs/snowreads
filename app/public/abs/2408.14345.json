{"id":"2408.14345","title":"Guard Analysis and Safe Erasure Gradual Typing: a Type System for Elixir","authors":"Giuseppe Castagna and Guillaume Duboc","authorsParsed":[["Castagna","Giuseppe",""],["Duboc","Guillaume",""]],"versions":[{"version":"v1","created":"Mon, 26 Aug 2024 15:20:09 GMT"},{"version":"v2","created":"Mon, 2 Sep 2024 14:51:26 GMT"}],"updateDate":"2024-09-04","timestamp":1724685609000,"abstract":"  We define several techniques to extend gradual typing with semantic\nsubtyping, specifically targeting dynamic languages. Focusing on the Elixir\nprogramming language, we provide the theoretical foundations for its type\nsystem. Our approach demonstrates how to achieve type soundness for gradual\ntyping in existing dynamic languages without modifying their compilation, while\nstill maintaining high precision. This is accomplished through the static\ndetection of \"strong functions\", which leverage runtime checks inserted by the\nprogrammer or performed by the virtual machine, and through a fine-grained type\nanalysis of pattern-matching expressions with guards.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}