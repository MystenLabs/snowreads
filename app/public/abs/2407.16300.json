{"id":"2407.16300","title":"A Programming Model for Disaggregated Memory over CXL","authors":"Gal Assa, Michal Friedman, Ori Lahav","authorsParsed":[["Assa","Gal",""],["Friedman","Michal",""],["Lahav","Ori",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 08:55:10 GMT"}],"updateDate":"2024-07-24","timestamp":1721724910000,"abstract":"  CXL (Compute Express Link) is an emerging open industry-standard interconnect\nbetween processing and memory devices that is expected to revolutionize the way\nsystems are designed in the near future. It enables cache-coherent shared\nmemory pools in a disaggregated fashion at unprecedented scales, allowing\nalgorithms to interact with a variety of storage devices using simple loads and\nstores in a cacheline granularity. Alongside with unleashing unique\nopportunities for a wide range of applications, CXL introduces new challenges\nof data management and crash consistency. Alas, CXL lacks an adequate\nprogramming model, which makes reasoning about the correctness and expected\nbehaviors of algorithms and systems on top of it nearly impossible.\n  In this work, we present CXL0, the first programming model for concurrent\nprograms running on top of CXL. We propose a high-level abstraction for CXL\nmemory accesses and formally define operational semantics on top of that\nabstraction. We provide a set of general transformations that adapt concurrent\nalgorithms to the new disruptive technology. Using these transformations, every\nlinearizable algorithm can be easily transformed into its provably correct\nversion in the face of a full-system or sub-system crash. We believe that this\nwork will serve as the stepping stone for systems design and modelling on top\nof CXL, and support the development of future models as software and hardware\nevolve.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing","Computing Research Repository/Emerging Technologies"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}