{"id":"2408.13855","title":"An Empirical Study of False Negatives and Positives of Static Code\n  Analyzers From the Perspective of Historical Issues","authors":"Han Cui, Menglei Xie, Ting Su, Chengyu Zhang, and Shin Hwei Tan","authorsParsed":[["Cui","Han",""],["Xie","Menglei",""],["Su","Ting",""],["Zhang","Chengyu",""],["Tan","Shin Hwei",""]],"versions":[{"version":"v1","created":"Sun, 25 Aug 2024 14:57:59 GMT"}],"updateDate":"2024-08-27","timestamp":1724597879000,"abstract":"  Static code analyzers are widely used to help find program flaws. However, in\npractice the effectiveness and usability of such analyzers is affected by the\nproblems of false negatives (FNs) and false positives (FPs). This paper aims to\ninvestigate the FNs and FPs of such analyzers from a new perspective, i.e.,\nexamining the historical issues of FNs and FPs of these analyzers reported by\nthe maintainers, users and researchers in their issue repositories -- each of\nthese issues manifested as a FN or FP of these analyzers in the history and has\nalready been confirmed and fixed by the analyzers' developers. To this end, we\nconduct the first systematic study on a broad range of 350 historical issues of\nFNs/FPs from three popular static code analyzers (i.e., PMD, SpotBugs, and\nSonarQube). All these issues have been confirmed and fixed by the developers.\nWe investigated these issues' root causes and the characteristics of the\ncorresponding issue-triggering programs. It reveals several new interesting\nfindings and implications on mitigating FNs and FPs. Furthermore, guided by\nsome findings of our study, we designed a metamorphic testing strategy to find\nFNs and FPs. This strategy successfully found 14 new issues of FNs/FPs, 11 of\nwhich have been confirmed and 9 have already been fixed by the developers. Our\nfurther manual investigation of the studied analyzers revealed one rule\nspecification issue and additional four FNs/FPs due to the weaknesses of the\nimplemented static analysis. We have made all the artifacts (datasets and\ntools) publicly available at https://zenodo.org/doi/10.5281/zenodo.11525129.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}