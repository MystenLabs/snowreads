{"id":"2408.09992","title":"Efficient Inference of Sub-Item Id-based Sequential Recommendation\n  Models with Millions of Items","authors":"Aleksandr V. Petrov, Craig Macdonald, Nicola Tonellotto","authorsParsed":[["Petrov","Aleksandr V.",""],["Macdonald","Craig",""],["Tonellotto","Nicola",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 13:43:48 GMT"}],"updateDate":"2024-08-20","timestamp":1724075028000,"abstract":"  Transformer-based recommender systems, such as BERT4Rec or SASRec, achieve\nstate-of-the-art results in sequential recommendation. However, it is\nchallenging to use these models in production environments with catalogues of\nmillions of items: scaling Transformers beyond a few thousand items is\nproblematic for several reasons, including high model memory consumption and\nslow inference. In this respect, RecJPQ is a state-of-the-art method of\nreducing the models' memory consumption; RecJPQ compresses item catalogues by\ndecomposing item IDs into a small number of shared sub-item IDs. Despite\nreporting the reduction of memory consumption by a factor of up to 50x, the\noriginal RecJPQ paper did not report inference efficiency improvements over the\nbaseline Transformer-based models. Upon analysing RecJPQ's scoring algorithm,\nwe find that its efficiency is limited by its use of score accumulators for\neach item, which prevents parallelisation. In contrast, LightRec (a\nnon-sequential method that uses a similar idea of sub-ids) reported large\ninference efficiency improvements using an algorithm we call PQTopK. We show\nthat it is also possible to improve RecJPQ-based models' inference efficiency\nusing the PQTopK algorithm. In particular, we speed up RecJPQ-enhanced SASRec\nby a factor of 4.5 x compared to the original SASRec's inference method and by\na factor of 1.56 x compared to the method implemented in RecJPQ code on a\nlarge-scale Gowalla dataset with more than a million items. Further, using\nsimulated data, we show that PQTopK remains efficient with catalogues of up to\ntens of millions of items, removing one of the last obstacles to using\nTransformer-based models in production environments with large catalogues.\n","subjects":["Computing Research Repository/Information Retrieval","Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/"}