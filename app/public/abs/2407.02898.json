{"id":"2407.02898","title":"Matching (Multi)Cut: Algorithms, Complexity, and Enumeration","authors":"Guilherme C. M. Gomes and Emanuel Juliano and Gabriel Martins and\n  Vinicius F. dos Santos","authorsParsed":[["Gomes","Guilherme C. M.",""],["Juliano","Emanuel",""],["Martins","Gabriel",""],["Santos","Vinicius F. dos",""]],"versions":[{"version":"v1","created":"Wed, 3 Jul 2024 08:18:54 GMT"}],"updateDate":"2024-07-04","timestamp":1719994734000,"abstract":"  A matching cut of a graph is a partition of its vertex set in two such that\nno vertex has more than one neighbor across the cut. The Matching Cut problem\nasks if a graph has a matching cut. This problem, and its generalization d-cut,\nhas drawn considerable attention of the algorithms and complexity community in\nthe last decade, becoming a canonical example for parameterized enumeration\nalgorithms and kernelization. In this paper, we introduce and study a\ngeneralization of Matching Cut, which we have named Matching Multicut: can we\npartition the vertex set of a graph in at least $\\ell$ parts such that no\nvertex has more than one neighbor outside its part? We investigate this\nquestion in several settings. We start by showing that, contrary to Matching\nCut, it is NP-hard on cubic graphs but that, when $\\ell$ is a parameter, it\nadmits a quasi-linear kernel. We also show an $O(\\ell^{\\frac{n}{2}})$ time\nexact exponential algorithm for general graphs and a $2^{O(t \\log t)}n^{O(1)}$\ntime algorithm for graphs of treewidth at most $t$. We then study parameterized\nenumeration aspects of matching multicuts. First, we generalize the quadratic\nkernel of Golovach et. al for Enum Matching Cut parameterized by vertex cover,\nthen use it to design a quadratic kernel for Enum Matching (Multi)cut\nparameterized by vertex-deletion distance to co-cluster. Our final\ncontributions are on the vertex-deletion distance to cluster parameterization,\nwhere we show an FPT-delay algorithm for Enum Matching Multicut but that no\npolynomial kernel exists unless NP $\\subseteq$ coNP/poly; we highlight that we\nhave no such lower bound for Enum Matching Cut and consider it our main open\nquestion.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"8b6x8lk5hc43en4PKsNiTsxaJUlIBh_buIxwkKdPnuI","pdfSize":"443677"}
