{"id":"2408.13178","title":"The Power of Migrations in Dynamic Bin Packing","authors":"Konstantina Mellou, Marco Molinaro, Rudy Zhou","authorsParsed":[["Mellou","Konstantina",""],["Molinaro","Marco",""],["Zhou","Rudy",""]],"versions":[{"version":"v1","created":"Fri, 23 Aug 2024 15:57:18 GMT"}],"updateDate":"2024-08-26","timestamp":1724428638000,"abstract":"  In the Dynamic Bin Packing problem, $n$ items arrive and depart the system in\nan online manner, and the goal is to maintain a good packing throughout. We\nconsider the objective of minimizing the total active time, i.e., the sum of\nthe number of open bins over all times. An important tool for maintaining an\nefficient packing in many applications is the use of migrations; e.g.,\ntransferring computing jobs across different machines. However, there are large\ngaps in our understanding of the approximability of dynamic bin packing with\nmigrations. Prior work has covered the power of no migrations and $> n$\nmigrations, but we ask the question: What is the power of limited ($\\leq n$)\nmigrations?\n  Our first result is a dichotomy between no migrations and linear migrations:\nUsing a sublinear number of migrations is asymptotically equivalent to doing\nzero migrations, where the competitive ratio grows with $\\mu$, the ratio of the\nlargest to smallest item duration. On the other hand, we prove that for every\n$\\alpha \\in (0,1]$, there is an algorithm that does $\\approx \\alpha n$\nmigrations and achieves competitive ratio $\\approx 1/\\alpha$ (in particular,\nindependent of $\\mu$); we also show that this tradeoff is essentially best\npossible. This fills in the gap between zero migrations and $> n$ migrations in\nDynamic Bin Packing.\n  Finally, in light of the above impossibility results, we introduce a new\nmodel that more directly captures the impact of migrations. Instead of limiting\nthe number of migrations, each migration adds a delay of $C$ time units to the\nitem's duration; this commonly appears in settings where a blackout or set-up\ntime is required before the item can restart its execution in the new bin. In\nthis new model, we prove a $O(\\min (\\sqrt{C}, \\mu))$-approximation, and an\nalmost matching lower bound.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/"}