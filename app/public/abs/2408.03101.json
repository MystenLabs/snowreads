{"id":"2408.03101","title":"Automated Defects Detection and Fix in Logging Statement","authors":"Renyi Zhong, Yichen Li, Jinxi Kuang, Wenwei Gu, Yintong Huo, Michael\n  R. Lyu","authorsParsed":[["Zhong","Renyi",""],["Li","Yichen",""],["Kuang","Jinxi",""],["Gu","Wenwei",""],["Huo","Yintong",""],["Lyu","Michael R.",""]],"versions":[{"version":"v1","created":"Tue, 6 Aug 2024 11:04:37 GMT"}],"updateDate":"2024-08-07","timestamp":1722942277000,"abstract":"  Developers use logging statements to monitor software, but misleading logs\ncan complicate maintenance by obscuring actual activities. Existing research on\nlogging quality issues is limited, mainly focusing on single defects and manual\nfixes. To address this, we conducted a study identifying four defect types in\nlogging statements through real-world log changes analysis. We propose\nLogFixer, a two-stage framework for automatic detection and updating of logging\nstatements. In the offline stage, LogFixer uses a similarity-based classifier\non synthetic defective logs to identify defects. During the online phase, this\nclassifier evaluates logs in code snippets to determine necessary improvements,\nand an LLM-based recommendation framework suggests updates based on historical\nlog changes. We evaluated LogFixer on real-world and synthetic datasets, and\nnew real-world projects, achieving an F1 score of 0.625. LogFixer significantly\nimproved static text and dynamic variables suggestions by 48.12\\% and 24.90\\%,\nrespectively, and achieved a 61.49\\% success rate in recommending correct\nupdates for new projects. We reported 40 problematic logs to GitHub, resulting\nin 25 confirmed and merged changes across 11 projects.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"0sncRRCHp_fzbkRyZ0eG1hw1MIERwyxJUz25UVbmGPw","pdfSize":"1232753"}
