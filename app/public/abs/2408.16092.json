{"id":"2408.16092","title":"When to Give Up on a Parallel Implementation","authors":"Nathan S. Sheffield and Alek Westover","authorsParsed":[["Sheffield","Nathan S.",""],["Westover","Alek",""]],"versions":[{"version":"v1","created":"Wed, 28 Aug 2024 18:46:59 GMT"}],"updateDate":"2024-08-30","timestamp":1724870819000,"abstract":"  In the Serial Parallel Decision Problem (SPDP), introduced by Kuszmaul and\nWestover [SPAA'24], an algorithm receives a series of tasks online, and must\nchoose for each between a serial implementation and a parallelizable (but less\nefficient) implementation. Kuszmaul and Westover describe three decision\nmodels: (1) \\defn{Instantly-committing} schedulers must decide on arrival,\nirrevocably, which implementation of the task to run. (2)\n\\defn{Eventually-committing} schedulers can delay their decision beyond a\ntask's arrival time, but cannot revoke their decision once made. (3)\n\\defn{Never-committing} schedulers are always free to abandon their progress on\nthe task and start over using a different implementation. Kuszmaul and Westover\ngave a simple instantly-committing scheduler whose total completion time is\n$3$-competitive with the offline optimal schedule. They conjectured that the\nthree decision models should admit different competitive ratios, but left upper\nbounds below $3$ in any model as an open problem.\n  In this paper, we show that the powers of instantly, eventually, and never\ncommitting schedulers are distinct, at least in the ``massively parallel\nregime''. The massively parallel regime of the SPDP is the special case where\nthe number of available processors is asymptotically larger than the number of\ntasks to process, meaning that the \\emph{work} associated with running a task\nin serial is negligible compared to its \\emph{runtime}. In this regime, we show\n(1) The optimal competitive ratio for instantly-committing schedulers is $2$,\n(2) The optimal competitive ratio for eventually-committing schedulers lies in\n$[1.618, 1.678]$, (3) The optimal competitive ratio for never-committing\nschedulers lies in $[1.366, 1.500]$.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}