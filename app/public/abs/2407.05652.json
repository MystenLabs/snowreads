{"id":"2407.05652","title":"StmtTree: An Easy-to-Use yet Versatile Fortran Transformation Toolkit","authors":"Jingbo Lin and Yi Yu and Zhang Yang and Yafan Zhao","authorsParsed":[["Lin","Jingbo",""],["Yu","Yi",""],["Yang","Zhang",""],["Zhao","Yafan",""]],"versions":[{"version":"v1","created":"Mon, 8 Jul 2024 06:23:13 GMT"},{"version":"v2","created":"Sun, 21 Jul 2024 02:22:44 GMT"}],"updateDate":"2024-07-23","timestamp":1720419793000,"abstract":"  The Fortran programming language continues to dominate the scientific\ncomputing community, with many production codes written in the outdated\nFortran-77 dialect, yet with many non-standard extensions such as Cray poiters.\nThis creates significant maintenance burden within the community, with\ntremendous efforts devoted to modernization. However, despite the modern age of\nadvanced compiler frameworks, processing and transforming old Fortran codes\nremains challenging. In this paper, we present StmtTree, a new Fortran code\ntransformation toolkit to address this issue. StmtTree abstracts the Fortran\ngrammar into statement tree, offering both a low-level representation\nmanipulation API and a high-level, easy-to-use query and manipulation\nmini-language. StmtTree simplifies the creation of customized Fortran\ntransformation tools. Experiments show that StmtTree adapts well to legacy\nFortran-77 codes, and complex tools such as removing unused statements can be\ndeveloped with fewer than 100 lines of python code.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/"}