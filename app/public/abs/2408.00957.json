{"id":"2408.00957","title":"Caching Aided Multi-Tenant Serverless Computing","authors":"Chu Qiao, Cong Wang, Zhenkai Zhang, Yuede Ji, Xing Gao","authorsParsed":[["Qiao","Chu",""],["Wang","Cong",""],["Zhang","Zhenkai",""],["Ji","Yuede",""],["Gao","Xing",""]],"versions":[{"version":"v1","created":"Thu, 1 Aug 2024 23:52:43 GMT"}],"updateDate":"2024-08-05","timestamp":1722556363000,"abstract":"  One key to enabling high-performance serverless computing is to mitigate\ncold-starts. Current solutions utilize a warm pool to keep function alive: a\nwarm-start can be analogous to a CPU cache-hit. However, modern cache has\nmultiple hierarchies and the last-level cache is shared among cores, whereas\nthe warm pool is limited to a single tenant for security concerns. Also, the\nwarm pool keep-alive policy can be further optimized using cache replacement\nalgorithms. In this paper, we borrow practical optimizations from caching, and\ndesign FaasCamp, a caching-aided multi-tenant serverless computing framework.\nFaasCamp extends the single-tier warm pool into multi-tiers, with a reclaim\npool introduced enabling secure function instance sharing among tenants. Also,\nFaasCamp leverages machine learning to approximate the optimal cache\nreplacement policy to improve the warm rate. We have implemented a prototype\nand conducted extensive experiments under multiple scenarios. The results show\nthat FaasCamp can outperform existing platforms with minimal overhead.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/"}