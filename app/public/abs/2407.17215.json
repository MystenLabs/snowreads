{"id":"2407.17215","title":"Formalizing UML State Machines for Automated Verification -- A Survey","authors":"\\'Etienne Andr\\'e, Shuang Liu, Yang Liu, Christine Choppy, Jun Sun and\n  Jin Song Dong","authorsParsed":[["André","Étienne",""],["Liu","Shuang",""],["Liu","Yang",""],["Choppy","Christine",""],["Sun","Jun",""],["Dong","Jin Song",""]],"versions":[{"version":"v1","created":"Wed, 24 Jul 2024 12:15:31 GMT"}],"updateDate":"2024-07-25","timestamp":1721823331000,"abstract":"  The Unified Modeling Language (UML) is a standard for modeling dynamic\nsystems. UML behavioral state machines are used for modeling the dynamic\nbehavior of object-oriented designs. The UML specification, maintained by the\nObject Management Group (OMG), is documented in natural language (in contrast\nto formal language). The inherent ambiguity of natural languages may introduce\ninconsistencies in the resulting state machine model. Formalizing UML state\nmachine specification aims at solving the ambiguity problem and at providing a\nuniform view to software designers and developers. Such a formalization also\naims at providing a foundation for automatic verification of UML state machine\nmodels, which can help to find software design vulnerabilities at an early\nstage and reduce the development cost. We provide here a comprehensive survey\nof existing work from 1997 to 2021 related to formalizing UML state machine\nsemantics for the purpose of conducting model checking at the design stage.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Logic in Computer Science"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}