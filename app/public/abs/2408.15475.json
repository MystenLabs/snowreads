{"id":"2408.15475","title":"Verifying Solutions to Semantics-Guided Synthesis Problems","authors":"Charlie Murphy and Keith Johnson and Thomas Reps and Loris D'Antoni","authorsParsed":[["Murphy","Charlie",""],["Johnson","Keith",""],["Reps","Thomas",""],["D'Antoni","Loris",""]],"versions":[{"version":"v1","created":"Wed, 28 Aug 2024 01:46:15 GMT"}],"updateDate":"2024-08-29","timestamp":1724809575000,"abstract":"  Semantics-Guided Synthesis (SemGuS) provides a framework to specify synthesis\nproblems in a solver-agnostic and domain-agnostic way, by allowing a user to\nprovide both the syntax and semantics of the language in which the desired\nprogram should be synthesized. Because synthesis and verification are closely\nintertwined, the SemGuS framework raises the problem of how to verify programs\nin a solver and domain-agnostic way.\n  We prove that the problem of verifying whether a program is a valid solution\nto a SemGuS problem can be reduced to proving validity of a query in the `CLP\ncalculus, a fixed-point logic that generalizes Constrained Horn Clauses and\nco-Constrained Horn Clauses. Our encoding into `CLP allows us to further\nclassify the SemGuS verification problems into ones that are reducible to\nvalidity of (i) first-order-logic formulas, (ii) Constrained Horn Clauses,\n(iii) co-Constrained Horn Clauses, and (iv) `CLP queries. Furthermore, our\nencoding shines light on some limitations of the SemGuS framework, such as its\ninability to model nondeterminism and reactive synthesis. We thus propose a\nmodification to SemGuS that makes it more expressive, and for which verifying\nsolutions is exactly equivalent to proving validity of a query in the `CLP\ncalculus. Our implementation of SemGuS verifiers based on the above encoding\ncan verify instances that were not even encodable in previous work.\nFurthermore, we use our SemGuS verifiers within an enumeration-based SemGuS\nsolver to correctly synthesize solutions to SemGuS problems that no previous\nSemGuS synthesizer could solve.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Logic in Computer Science"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}