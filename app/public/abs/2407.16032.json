{"id":"2407.16032","title":"WaterLily.jl: A differentiable and backend-agnostic Julia solver to\n  simulate incompressible viscous flow and dynamic bodies","authors":"Gabriel D. Weymouth and Bernat Font","authorsParsed":[["Weymouth","Gabriel D.",""],["Font","Bernat",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 20:19:13 GMT"}],"updateDate":"2024-07-24","timestamp":1721679553000,"abstract":"  Integrating computational fluid dynamics (CFD) software into optimization and\nmachine-learning frameworks is hampered by the rigidity of classic\ncomputational languages and the slow performance of more flexible high-level\nlanguages. In this work, we introduce WaterLily.jl: an open-source\nincompressible viscous flow solver written in the Julia language. An immersed\nboundary method is used to enforce the effect of solid boundaries on flow past\ncomplex geometries with arbitrary motions. The small code base is\nmultidimensional, multiplatform and backend-agnostic (serial and multithreaded\nCPU, and GPU execution). Additionally, the dynamically typed language allows\nthe solver to be fully differentiable using automatic differentiation. The\ncomputational time per time step scales linearly with the number of degrees of\nfreedom (DOF) on CPUs, and we measure up to a 200x speed-up using CUDA kernels\nresulting in a cost of 1.44 nanoseconds per DOF and time step. This leads to\ncomparable performance with low-level CFD solvers written in C and Fortran on\nresearch-scale problems, opening up exciting possible future applications on\nthe cutting edge of machine-learning research.\n","subjects":["Physics/Fluid Dynamics","Physics/Computational Physics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}