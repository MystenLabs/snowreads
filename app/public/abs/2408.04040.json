{"id":"2408.04040","title":"Synthesizing Abstract Transformers for Reduced-Product Domains","authors":"Pankaj Kumar Kalita, Thomas Reps, Subhajit Roy","authorsParsed":[["Kalita","Pankaj Kumar",""],["Reps","Thomas",""],["Roy","Subhajit",""]],"versions":[{"version":"v1","created":"Wed, 7 Aug 2024 18:47:35 GMT"}],"updateDate":"2024-08-09","timestamp":1723056455000,"abstract":"  Recently, we showed how to apply program-synthesis techniques to create\nabstract transformers in a user-provided domain-specific language (DSL) L\n(i.e., ''L-transformers\"). However, we found that the algorithm of Kalita et\nal. does not succeed when applied to reduced-product domains: the need to\nsynthesize transformers for all of the domains simultaneously blows up the\nsearch space.\n  Because reduced-product domains are an important device for improving the\nprecision of abstract interpretation, in this paper, we propose an algorithm to\nsynthesize reduced L-transformers $\\langle f_1^{\\sharp R}, f_2^{\\sharp R},...,\nf_n^{\\sharp R}\\rangle$ for a product domain $A_1 \\times A_2 \\times \\ldots\n\\times A_n$ , using multiple DSLs: $\\mathcal{L} = \\langle \\mathcal{L}_1 ,\n\\mathcal{L}_2, ... , \\mathcal{L}_n \\rangle$. Synthesis of reduced-product\ntransformers is quite challenging: first, the synthesis task has to tackle an\nincreased ''feature set\" because each component transformer now has access to\nthe abstract inputs from all component domains in the product. Second, to\nensure that the product transformer is maximally precise, the synthesis task\nneeds to arrange for the component transformers to cooperate with each other.\n  We implemented our algorithm in a tool, Amurth2, and used it to synthesize\nabstract transformers for two product domains -- SAFE and JSAI -- available\nwithin the SAFEstr framework for JavaScript program analysis. For four of the\nsix operations supported by SAFEstr, Amurth2 synthesizes more precise abstract\ntransformers than the manually written ones available in SAFEstr.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}