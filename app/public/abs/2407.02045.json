{"id":"2407.02045","title":"Online Unbounded Knapsack","authors":"Hans-Joachim B\\\"ockenhauer, Matthias Gehnen, Juraj Hromkovi\\v{c}, Ralf\n  Klasing, Dennis Komm, Henri Lotze, Daniel Mock, Peter Rossmanith, Moritz\n  Stocker","authorsParsed":[["Böckenhauer","Hans-Joachim",""],["Gehnen","Matthias",""],["Hromkovič","Juraj",""],["Klasing","Ralf",""],["Komm","Dennis",""],["Lotze","Henri",""],["Mock","Daniel",""],["Rossmanith","Peter",""],["Stocker","Moritz",""]],"versions":[{"version":"v1","created":"Tue, 2 Jul 2024 08:18:22 GMT"}],"updateDate":"2024-07-03","timestamp":1719908302000,"abstract":"  We analyze the competitive ratio and the advice complexity of the online\nunbounded knapsack problem. An instance is given as a sequence of n items with\na size and a value each, and an algorithm has to decide how often to pack each\nitem into a knapsack of bounded capacity. The items are given online and the\ntotal size of the packed items must not exceed the knapsack's capacity, while\nthe objective is to maximize the total value of the packed items. While each\nitem can only be packed once in the classical 0-1 knapsack problem, the\nunbounded version allows for items to be packed multiple times. We show that\nthe simple unbounded knapsack problem, where the size of each item is equal to\nits value, allows for a competitive ratio of 2. We also analyze randomized\nalgorithms and show that, in contrast to the 0-1 knapsack problem, one\nuniformly random bit cannot improve an algorithm's performance. More randomness\nlowers the competitive ratio to less than 1.736, but it can never be below\n1.693. In the advice complexity setting, we measure how many bits of\ninformation the algorithm has to know to achieve some desired solution quality.\nFor the simple unbounded knapsack problem, one advice bit lowers the\ncompetitive ratio to 3/2. While this cannot be improved with fewer than log(n)\nadvice bits for instances of length n, a competitive ratio of 1+epsilon can be\nachieved with O(log(n/epsilon)/epsilon) advice bits for any epsilon>0. We\nfurther show that no amount of advice bounded by a function f(n) allows an\nalgorithm to be optimal. We also study the online general unbounded knapsack\nproblem and show that it does not allow for any bounded competitive ratio for\ndeterministic and randomized algorithms, as well as for algorithms using fewer\nthan log(n) advice bits. We also provide an algorithm that uses\nO(log(n/epsilon)/epsilon) advice bits to achieve a competitive ratio of\n1+epsilon for any epsilon>0.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"m1niAdSMne7WBWli6bPW5baoMHDbghSKRdvvIOBumAk","pdfSize":"296686"}
