{"id":"2408.14031","title":"Law and Order for Typestate with Borrowing","authors":"Hannes Saffrich, Yuki Nishida, Peter Thiemann","authorsParsed":[["Saffrich","Hannes",""],["Nishida","Yuki",""],["Thiemann","Peter",""]],"versions":[{"version":"v1","created":"Mon, 26 Aug 2024 05:51:23 GMT"}],"updateDate":"2024-08-27","timestamp":1724651483000,"abstract":"  Typestate systems are notoriously complex as they require sophisticated\nmachinery for tracking aliasing. We propose a new, transition-oriented\nfoundation for typestate in the setting of impure functional programming. Our\napproach relies on ordered types for simple alias tracking and its\nformalization draws on work on bunched implications. Yet, we support a flexible\nnotion of borrowing in the presence of typestate.\n  Our core calculus comes with a notion of resource types indexed by an ordered\npartial monoid that models abstract state transitions. We prove syntactic type\nsoundness with respect to a resource-instrumented semantics. We give an\nalgorithmic version of our type system and prove its soundness. Algorithmic\ntyping facilitates a simple surface language that does not expose tedious\ndetails of ordered types. We implemented a typechecker for the surface language\nalong with an interpreter for the core language.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"MZU9hRAKzU_buqkndowPAT_GkEdKKTtS8Tw1N_1qo-s","pdfSize":"972425"}
