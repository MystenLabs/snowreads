{"id":"2408.08795","title":"RollingCache: Using Runtime Behavior to Defend Against Cache Side\n  Channel Attacks","authors":"Divya Ojha and Sandhya Dwarkadas","authorsParsed":[["Ojha","Divya",""],["Dwarkadas","Sandhya",""]],"versions":[{"version":"v1","created":"Fri, 16 Aug 2024 15:11:12 GMT"},{"version":"v2","created":"Mon, 26 Aug 2024 04:32:56 GMT"}],"updateDate":"2024-08-27","timestamp":1723821072000,"abstract":"  Shared caches are vulnerable to side channel attacks through contention in\ncache sets. Besides being a simple source of information leak, these side\nchannels form useful gadgets for more sophisticated attacks that compromise the\nsecurity of shared systems.\n  The fundamental design aspect that contention attacks exploit is the\ndeterministic nature of the set of addresses contending for a cache set. In\nthis paper, we present RollingCache, a cache design that defends against\ncontention attacks by dynamically changing the set of addresses contending for\ncache sets. Unlike prior defenses, RollingCache does not rely on address\nencryption/decryption, data relocation, or cache partitioning. We use one level\nof indirection to implement dynamic mapping controlled by the whole-cache\nruntime behavior. Our solution does not depend on having defined security\ndomains, and can defend against an attacker running on the same or another\ncore.\n  We evaluate RollingCache on ChampSim using the SPEC-2017 benchmark suite. Our\nsecurity evaluation shows that our dynamic mapping removes the deterministic\nability to identify the source of contention. The performance evaluation shows\nan impact of 1.67\\% over a mix of workloads, with a corresponding\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Hardware Architecture"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}