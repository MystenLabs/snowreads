{"id":"2407.17619","title":"The Power of Graph Sparsification in the Continual Release Model","authors":"Alessandro Epasto, Quanquan C. Liu, Tamalika Mukherjee, Felix Zhou","authorsParsed":[["Epasto","Alessandro",""],["Liu","Quanquan C.",""],["Mukherjee","Tamalika",""],["Zhou","Felix",""]],"versions":[{"version":"v1","created":"Wed, 24 Jul 2024 20:15:07 GMT"}],"updateDate":"2024-07-26","timestamp":1721852107000,"abstract":"  The graph continual release model of differential privacy seeks to produce\ndifferentially private solutions to graph problems under a stream of updates\nwhere new private solutions are released after each update. Streaming graph\nalgorithms in the non-private literature also produce (approximately) accurate\nsolutions when provided updates in a stream, but they additionally try to\nachieve two other goals: 1) output vertex or edge subsets as approximate\nsolutions to the problem (not just real-valued estimates) and 2) use space that\nis sublinear in the number of edges or the number of vertices. Thus far, all\npreviously known edge-differentially private algorithms for graph problems in\nthe continual release setting do not meet the above benchmarks. Instead, they\nrequire computing exact graph statistics on the input [SLMVC18, FHO21, JSW24].\nIn this paper, we leverage sparsification to address the above shortcomings.\nOur edge-differentially private algorithms use sublinear space with respect to\nthe number of edges in the graph while some also achieve sublinear space in the\nnumber of vertices in the graph. In addition, for most of our problems, we also\noutput differentially private vertex subsets.\n  We make novel use of assorted sparsification techniques from the non-private\nstreaming and static graph algorithms literature and achieve new results in the\nsublinear space, continual release setting for a variety of problems including\ndensest subgraph, $k$-core decomposition, maximum matching, and vertex cover.\nIn addition to our edge-differential privacy results, we use graph\nsparsification based on arboricity to obtain a set of results in the\nnode-differential privacy setting, illustrating a new connection between\nsparsification and privacy beyond minimizing space. We conclude with polynomial\nadditive error lower bounds for edge-privacy in the fully dynamic setting.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}