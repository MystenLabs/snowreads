{"id":"2407.14331","title":"FaaS Is Not Enough: Serverless Handling of Burst-Parallel Jobs","authors":"Daniel Barcelona-Pons, Aitor Arjona, Pedro Garc\\'ia-L\\'opez, Enrique\n  Molina-Gim\\'enez and Stepan Klymonchuk","authorsParsed":[["Barcelona-Pons","Daniel",""],["Arjona","Aitor",""],["García-López","Pedro",""],["Molina-Giménez","Enrique",""],["Klymonchuk","Stepan",""]],"versions":[{"version":"v1","created":"Fri, 19 Jul 2024 14:12:22 GMT"}],"updateDate":"2024-07-22","timestamp":1721398342000,"abstract":"  Function-as-a-Service (FaaS) struggles with burst-parallel jobs due to\nneeding multiple independent invocations to start a job. The lack of a group\ninvocation primitive complicates application development and overlooks crucial\naspects like locality and worker communication.\n  We introduce a new serverless solution designed specifically for\nburst-parallel jobs. Unlike FaaS, our solution ensures job-level isolation\nusing a group invocation primitive, allowing large groups of workers to be\nlaunched simultaneously. This method optimizes resource allocation by\nconsolidating workers into fewer containers, speeding up their initialization\nand enhancing locality. Enhanced locality drastically reduces remote\ncommunication compared to FaaS, and combined with simultaneity, it enables\nworkers to communicate synchronously via message passing and group collectives.\nThis makes applications that are impractical with FaaS feasible. We implemented\nour solution on OpenWhisk, providing a communication middleware that\nefficiently uses locality with zero-copy messaging. Evaluations show that it\nreduces job invocation and communication latency, resulting in a 2$\\times$\nspeed-up for TeraSort and a 98.5% reduction in remote communication for\nPageRank (13$\\times$ speed-up) compared to traditional FaaS.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"phrr0b9JdrPhPsP92heXvoWkrgu-Upr_hWZ4zuin8AA","pdfSize":"1468774"}
