{"id":"2408.09735","title":"Icing on the Cake: Automatic Code Summarization at Ericsson","authors":"Giriprasad Sridhara, Sujoy Roychowdhury, Sumit Soman, Ranjani H G,\n  Ricardo Britto","authorsParsed":[["Sridhara","Giriprasad",""],["Roychowdhury","Sujoy",""],["Soman","Sumit",""],["G","Ranjani H",""],["Britto","Ricardo",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 06:49:04 GMT"}],"updateDate":"2024-08-20","timestamp":1724050144000,"abstract":"  This paper presents our findings on the automatic summarization of Java\nmethods within Ericsson, a global telecommunications company. We evaluate the\nperformance of an approach called Automatic Semantic Augmentation of Prompts\n(ASAP), which uses a Large Language Model (LLM) to generate leading summary\ncomments for Java methods. ASAP enhances the $LLM's$ prompt context by\nintegrating static program analysis and information retrieval techniques to\nidentify similar exemplar methods along with their developer-written Javadocs,\nand serves as the baseline in our study. In contrast, we explore and compare\nthe performance of four simpler approaches that do not require static program\nanalysis, information retrieval, or the presence of exemplars as in the ASAP\nmethod. Our methods rely solely on the Java method body as input, making them\nlightweight and more suitable for rapid deployment in commercial software\ndevelopment environments. We conducted experiments on an Ericsson software\nproject and replicated the study using two widely-used open-source Java\nprojects, Guava and Elasticsearch, to ensure the reliability of our results.\nPerformance was measured across eight metrics that capture various aspects of\nsimilarity. Notably, one of our simpler approaches performed as well as or\nbetter than the ASAP method on both the Ericsson project and the open-source\nprojects. Additionally, we performed an ablation study to examine the impact of\nmethod names on Javadoc summary generation across our four proposed approaches\nand the ASAP method. By masking the method names and observing the generated\nsummaries, we found that our approaches were statistically significantly less\ninfluenced by the absence of method names compared to the baseline. This\nsuggests that our methods are more robust to variations in method names and may\nderive summaries more comprehensively from the method body than the ASAP\napproach.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Machine Learning"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}