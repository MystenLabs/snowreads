{"id":"2408.02287","title":"Approximating under the Influence of Quantum Noise and Compute Power","authors":"Simon Thelen, Hila Safi, Wolfgang Mauerer","authorsParsed":[["Thelen","Simon",""],["Safi","Hila",""],["Mauerer","Wolfgang",""]],"versions":[{"version":"v1","created":"Mon, 5 Aug 2024 07:48:49 GMT"}],"updateDate":"2024-08-06","timestamp":1722844129000,"abstract":"  The quantum approximate optimisation algorithm (QAOA) is at the core of many\nscenarios that aim to combine the power of quantum computers and classical\nhigh-performance computing appliances for combinatorial optimisation. Several\nobstacles challenge concrete benefits now and in the foreseeable future:\nImperfections quickly degrade algorithmic performance below practical utility;\noverheads arising from alternating between classical and quantum primitives can\ncounter any advantage; and the choice of parameters or algorithmic variant can\nsubstantially influence runtime and result quality. Selecting the optimal\ncombination is a non-trivial issue, as it not only depends on user\nrequirements, but also on details of the hardware and software stack.\nAppropriate automation can lift the burden of choosing optimal combinations for\nend-users: They should not be required to understand technicalities like\ndifferences between QAOA variants, required number of QAOA layers, or necessary\nmeasurement samples. Yet, they should receive best-possible satisfaction of\ntheir non-functional requirements, be it performance or other. We determine\nfactors that affect solution quality and temporal behaviour of four QAOA\nvariants using comprehensive density-matrix-based simulations targeting three\nwidely studied optimisation problems. Our simulations consider ideal quantum\ncomputation, and a continuum of scenarios troubled by realistic imperfections.\nOur quantitative results, accompanied by a comprehensive reproduction package,\nshow strong differences between QAOA variants that can be pinpointed to narrow\nand specific effects. We identify influential co-variables and relevant\nnon-functional quality goals that, we argue, mark the relevant ingredients for\ndesigning appropriate software engineering abstraction mechanisms and automated\ntool-chains for devising quantum solutions from high-level problem\nspecifications.\n","subjects":["Physics/Quantum Physics"],"license":"http://creativecommons.org/licenses/by/4.0/"}