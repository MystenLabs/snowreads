{"id":"2407.05638","title":"HPFF: Hierarchical Locally Supervised Learning with Patch Feature Fusion","authors":"Junhao Su, Chenghao He, Feiyu Zhu, Xiaojie Xu, Dongzhi Guan, Chenyang\n  Si","authorsParsed":[["Su","Junhao",""],["He","Chenghao",""],["Zhu","Feiyu",""],["Xu","Xiaojie",""],["Guan","Dongzhi",""],["Si","Chenyang",""]],"versions":[{"version":"v1","created":"Mon, 8 Jul 2024 06:05:19 GMT"},{"version":"v2","created":"Tue, 9 Jul 2024 03:38:46 GMT"}],"updateDate":"2024-07-10","timestamp":1720418719000,"abstract":"  Traditional deep learning relies on end-to-end backpropagation for training,\nbut it suffers from drawbacks such as high memory consumption and not aligning\nwith biological neural networks. Recent advancements have introduced locally\nsupervised learning, which divides networks into modules with isolated\ngradients and trains them locally. However, this approach can lead to\nperformance lag due to limited interaction between these modules, and the\ndesign of auxiliary networks occupies a certain amount of GPU memory. To\novercome these limitations, we propose a novel model called HPFF that performs\nhierarchical locally supervised learning and patch-level feature computation on\nthe auxiliary networks. Hierarchical Locally Supervised Learning (HiLo) enables\nthe network to learn features at different granularity levels along their\nrespective local paths. Specifically, the network is divided into two-level\nlocal modules: independent local modules and cascade local modules. The cascade\nlocal modules combine two adjacent independent local modules, incorporating\nboth updates within the modules themselves and information exchange between\nadjacent modules. Patch Feature Fusion (PFF) reduces GPU memory usage by\nsplitting the input features of the auxiliary networks into patches for\ncomputation. By averaging these patch-level features, it enhances the network's\nability to focus more on those patterns that are prevalent across multiple\npatches. Furthermore, our method exhibits strong generalization capabilities\nand can be seamlessly integrated with existing techniques. We conduct\nexperiments on CIFAR-10, STL-10, SVHN, and ImageNet datasets, and the results\ndemonstrate that our proposed HPFF significantly outperforms previous\napproaches, consistently achieving state-of-the-art performance across\ndifferent datasets. Our code is available at: https://github.com/Zeudfish/HPFF.\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}