{"id":"2408.02840","title":"GAReT: Cross-view Video Geolocalization with Adapters and\n  Auto-Regressive Transformers","authors":"Manu S Pillai, Mamshad Nayeem Rizve and Mubarak Shah","authorsParsed":[["Pillai","Manu S",""],["Rizve","Mamshad Nayeem",""],["Shah","Mubarak",""]],"versions":[{"version":"v1","created":"Mon, 5 Aug 2024 21:29:33 GMT"}],"updateDate":"2024-08-07","timestamp":1722893373000,"abstract":"  Cross-view video geo-localization (CVGL) aims to derive GPS trajectories from\nstreet-view videos by aligning them with aerial-view images. Despite their\npromising performance, current CVGL methods face significant challenges. These\nmethods use camera and odometry data, typically absent in real-world scenarios.\nThey utilize multiple adjacent frames and various encoders for feature\nextraction, resulting in high computational costs. Moreover, these approaches\nindependently predict each street-view frame's location, resulting in\ntemporally inconsistent GPS trajectories. To address these challenges, in this\nwork, we propose GAReT, a fully transformer-based method for CVGL that does not\nrequire camera and odometry data. We introduce GeoAdapter, a\ntransformer-adapter module designed to efficiently aggregate image-level\nrepresentations and adapt them for video inputs. Specifically, we train a\ntransformer encoder on video frames and aerial images, then freeze the encoder\nto optimize the GeoAdapter module to obtain video-level representation. To\naddress temporally inconsistent trajectories, we introduce TransRetriever, an\nencoder-decoder transformer model that predicts GPS locations of street-view\nframes by encoding top-k nearest neighbor predictions per frame and\nauto-regressively decoding the best neighbor based on the previous frame's\npredictions. Our method's effectiveness is validated through extensive\nexperiments, demonstrating state-of-the-art performance on benchmark datasets.\nOur code is available at https://github.com/manupillai308/GAReT.\n","subjects":["Computing Research Repository/Computer Vision and Pattern Recognition"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}