{"id":"2408.04215","title":"Temporal Logic Planning via Zero-Shot Policy Composition","authors":"Taylor Bergeron, Zachary Serlin, Kevin Leahy","authorsParsed":[["Bergeron","Taylor",""],["Serlin","Zachary",""],["Leahy","Kevin",""]],"versions":[{"version":"v1","created":"Thu, 8 Aug 2024 04:49:24 GMT"}],"updateDate":"2024-08-09","timestamp":1723092564000,"abstract":"  This work develops a zero-shot mechanism for an agent to satisfy a Linear\nTemporal Logic (LTL) specification given existing task primitives. Oftentimes,\nautonomous robots need to satisfy spatial and temporal goals that are unknown\nuntil run time. Prior research addresses the problem by learning policies that\nare capable of executing a high-level task specified using LTL, but they\nincorporate the specification into the learning process; therefore, any change\nto the specification requires retraining the policy. Other related research\naddresses the problem by creating skill-machines which, given a specification\nchange, do not require full policy retraining but require fine-tuning on the\nskill-machine to guarantee satisfaction. We present a more a flexible approach\n-- to learn a set of minimum-violation (MV) task primitive policies that can be\nused to satisfy arbitrary LTL specifications without retraining or fine-tuning.\nTask primitives can be learned offline using reinforcement learning (RL)\nmethods and combined using Boolean composition at deployment. This work focuses\non creating and pruning a transition system (TS) representation of the\nenvironment in order to solve for deterministic, non-ambiguous, and feasible\nsolutions to LTL specifications given an environment and a set of MV task\nprimitive policies. We show that our pruned TS is deterministic, contains no\nunrealizable transitions, and is sound. Through simulation, we show that our\napproach is executable and we verify our MV policies produce the expected\nsymbols.\n","subjects":["Computing Research Repository/Robotics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}