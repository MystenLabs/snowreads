{"id":"2408.05221","title":"Early-Stage Requirements Transformation Approaches: A Systematic Review","authors":"Keletso J. Letsholo","authorsParsed":[["Letsholo","Keletso J.",""]],"versions":[{"version":"v1","created":"Thu, 25 Jul 2024 18:13:29 GMT"}],"updateDate":"2024-08-13","timestamp":1721931209000,"abstract":"  Transformation approaches for automatically constructing analysis models from\ntextual requirements are critical to software development, as they can bring\nforward the use of precise formal languages from the coding phase to the\nrequirement analysis phase in the software development life-cycle. Over the\ndecades, numerous transformation approaches have been developed in an attempt\nto fully or partially automate this initial phase. This systematic review\nexamines transformation approaches in the early stages of software development,\nexamining 25 studies on early-stage requirements transformation documented\nbetween 2000 and 2014. The review highlights the widespread use of natural\nlanguage processing techniques, with tools like the Stanford parser and WordNet\nbeing essential. Intermediate models are often used in the transformation\nprocess to bridge the gap between textual requirements and analysis models.\nSignificant advancements have been made in early-stage requirements\ntransformation approaches; however, several areas require attention to enhance\ntheir effectiveness and reliability. A challenge identified is the lack of\nrobust evaluation methods, with most approaches using simple case studies and\nrunning examples for evaluation. This makes it difficult to compare and\nevaluate the performance these approaches. Although most approaches can\ngenerate structural models from textual requirements, many generate incomplete\nmodels with missing elements. Furthermore, requirements traceability is largely\nneglected, with only two approaches addressing it and lacking explicit detail\non how traceability links are maintained during the transformation process.\nThis review emphasize the need for formalized evaluation techniques and greater\ntransparency and accessibility of approaches used in the early-stage\nrequirements transformation.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}