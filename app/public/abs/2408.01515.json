{"id":"2408.01515","title":"From Program Logics to Language Logics","authors":"Matteo Cimini","authorsParsed":[["Cimini","Matteo",""]],"versions":[{"version":"v1","created":"Fri, 2 Aug 2024 18:15:48 GMT"}],"updateDate":"2024-08-06","timestamp":1722622548000,"abstract":"  Program logics are a powerful formal method in the context of program\nverification. Can we develop a counterpart of program logics in the context of\nlanguage verification? This paper proposes language logics, which allow for\nstatements of the form $\\{P\\}\\ \\mathcal{X}\\ \\{Q\\}$ where $\\mathcal{X}$, the\nsubject of analysis, can be a language component such as a piece of grammar, a\ntyping rule, a reduction rule or other parts of a language definition. To\ndemonstrate our approach, we develop $\\mathbb{L}$, a language logic that can be\nused to analyze language definitions on various aspects of language design. We\nillustrate $\\mathbb{L}$ to the analysis of some selected aspects of a\nprogramming language. We have also implemented an automated prover for\n$\\mathbb{L}$, and we confirm that the tool repeats these analyses. Ultimately,\n$\\mathbb{L}$ cannot verify languages. Nonetheless, we believe that this paper\nprovides a strong first step towards adopting the methods of program logics for\nthe analysis of languages.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"HppdUj4Ly82aJ5cCdBJpVG1i7_SyR0DlJg4VoYhcx4o","pdfSize":"319156","txDigest":"CK4LzA9vFaxmC7du2RVqxUg6K9HMi7dwM7uRKUEMsPMm","endEpoch":"1","status":"CERTIFIED"}
