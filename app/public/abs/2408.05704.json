{"id":"2408.05704","title":"The Good, the Bad, and the Ugly: Predicting Highly Change-Prone Source\n  Code Methods at Their Inception","authors":"Shaiful Chowdhury","authorsParsed":[["Chowdhury","Shaiful",""]],"versions":[{"version":"v1","created":"Sun, 11 Aug 2024 06:20:48 GMT"}],"updateDate":"2024-08-13","timestamp":1723357248000,"abstract":"  The cost of software maintenance often surpasses the initial development\nexpenses, making it a significant concern for the software industry. A key\nstrategy for alleviating future maintenance burdens is the early prediction and\nidentification of change-prone code components, which allows for timely\noptimizations. While prior research has largely concentrated on predicting\nchange-prone files and classes, an approach less favored by practitioners, this\npaper shifts focus to predicting highly change-prone methods, aligning with the\npreferences of both practitioners and researchers. We analyzed 774,051 source\ncode methods from 49 prominent open-source Java projects. Our findings reveal\nthat approximately 80% of changes are concentrated in just 20% of the methods,\ndemonstrating the Pareto 80/20 principle. Moreover, this subset of methods is\nresponsible for the majority of the identified bugs in these projects. After\nestablishing their critical role in mitigating software maintenance costs, our\nstudy shows that machine learning models can effectively identify these highly\nchange-prone methods from their inception. Additionally, we conducted a\nthorough manual analysis to uncover common patterns (or concepts) among the\nmore difficult-to-predict methods. These insights can help future research\ndevelop new features and enhance prediction accuracy.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}