{"id":"2407.03949","title":"Establishing Provenance Before Coding: Traditional and Next-Gen Signing","authors":"Taylor R. Schorlemmer, Ethan H. Burmane, Kelechi G. Kalu, Santiago\n  Torres-Arias, James C. Davis","authorsParsed":[["Schorlemmer","Taylor R.",""],["Burmane","Ethan H.",""],["Kalu","Kelechi G.",""],["Torres-Arias","Santiago",""],["Davis","James C.",""]],"versions":[{"version":"v1","created":"Thu, 4 Jul 2024 14:07:50 GMT"}],"updateDate":"2024-07-08","timestamp":1720102070000,"abstract":"  Software engineers integrate third-party components into their applications.\nThe resulting software supply chain is vulnerable. To reduce the attack\nsurface, we can verify the origin of components (provenance) before adding\nthem. Cryptographic signatures enable this. This article describes traditional\nsigning, its challenges, and changes introduced by next generation signing\nplatforms\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}