{"id":"2408.03170","title":"typedKanren: Statically Typed Relational Programming with Exhaustive\n  Matching in Haskell","authors":"Nikolai Kudasov and Artem Starikov","authorsParsed":[["Kudasov","Nikolai",""],["Starikov","Artem",""]],"versions":[{"version":"v1","created":"Tue, 6 Aug 2024 13:13:54 GMT"},{"version":"v2","created":"Fri, 30 Aug 2024 00:14:10 GMT"}],"updateDate":"2024-09-02","timestamp":1722950034000,"abstract":"  We present a statically typed embedding of relational programming\n(specifically a dialect of miniKanren with disequality constraints) in Haskell.\nApart from handling types, our dialect extends standard relational combinator\nrepertoire with a variation of relational matching that supports static\nexhaustiveness checks. To hide the boilerplate definitions and support\ncomfortable logic programming with user-defined data types we use generic\nprogramming via GHC.Generics as well as metaprogramming via Template Haskell.\nWe demonstrate our dialect on several examples and compare its performance\nagainst some other known implementations of miniKanren.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}