{"id":"2408.10594","title":"Design and Implementation of a Takum Arithmetic Hardware Codec in VHDL","authors":"Laslo Hunhold","authorsParsed":[["Hunhold","Laslo",""]],"versions":[{"version":"v1","created":"Tue, 20 Aug 2024 07:10:50 GMT"},{"version":"v2","created":"Thu, 22 Aug 2024 09:15:52 GMT"}],"updateDate":"2024-08-23","timestamp":1724137850000,"abstract":"  The takum machine number format has been recently proposed as an enhancement\nover the posit number format, which is considered a promising alternative to\nthe IEEE 754 floating-point standard. Takums retain the useful posit\nproperties, but feature a novel exponent coding scheme that yields more\nprecision for small and large magnitude numbers. Takum's dynamic range is\nlarger and bounded, as reflected in its name, derived from the Icelandic\n'takmarka{\\dh} umfang', meaning 'limited range'. Consequently, the selection of\nbit string lengths becomes determined solely by precision requirements and\nindependent of dynamic range considerations. Takum is defined in both a\nlogarithmic number system (LNS) format and a traditional floating-point format.\n  This paper presents the design and implementation of a hardware codec for\nboth the logarithmic and floating-point takum formats. The design primarily\nfocuses on the codec, as both formats share a common internal arithmetic\nrepresentation. Non-essential aspects of current posit designs, such as fused\nor pipelined architectures and the choice of floating-point IP cores, are thus\nomitted. The proposed takum codec, implemented in VHDL, demonstrates\nnear-optimal scalability and performance on an FPGA, matching or exceeding\nstate-of-the-art posit codecs in terms of both latency and LUT utilisation.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by/4.0/"}