{"id":"2408.03696","title":"Bridging the Gap between ROS~2 and Classical Real-Time Scheduling for\n  Periodic Tasks","authors":"Harun Teper, Oren Bell, Mario G\\\"unzel, Chris Gill, and Jian-Jia Chen","authorsParsed":[["Teper","Harun",""],["Bell","Oren",""],["GÃ¼nzel","Mario",""],["Gill","Chris",""],["Chen","Jian-Jia",""]],"versions":[{"version":"v1","created":"Wed, 7 Aug 2024 11:23:09 GMT"}],"updateDate":"2024-08-08","timestamp":1723029789000,"abstract":"  The Robot Operating System 2 (ROS~2) is a widely used middleware that\nprovides software libraries and tools for developing robotic systems. In these\nsystems, tasks are scheduled by ROS~2 executors. Since the scheduling behavior\nof the default ROS~2 executor is inherently different from classical real-time\nscheduling theory, dedicated analyses or alternative executors, requiring\nsubstantial changes to ROS~2, have been required. In 2023, the events executor,\nwhich features an events queue and allows the possibility to make scheduling\ndecisions immediately after a job completes, was introduced into ROS~2. In this\npaper, we show that, with only minor modifications of the events executor, a\nlarge body of research results from classical real-time scheduling theory\nbecomes applicable. Hence, this enables analytical bounds on the worst-case\nresponse time and the end-to-end latency, outperforming bounds for the default\nROS 2 executor in many scenarios. Our solution is easy to integrate into\nexisting ROS 2 systems since it requires only minor backend modifications of\nthe events executor, which is natively included in ROS 2. The evaluation\nresults show that our ROS~2 events executor with minor modifications can have\nsignificant improvement in terms of dropped jobs, worst-case response time,\nend-to-end latency, and performance compared to the default ROS~2 executor.\n","subjects":["Computing Research Repository/Robotics"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"svnnewBJM91Bv1lUrmpC0q9H92BrLNZspMZYbeUmj3U","pdfSize":"783175"}
