{"id":"2407.10345","title":"PLACIDUS: Engineering Product Lines of Rigorous Assurance Cases","authors":"Logan Murphy, Torin Viger, Alessio Di Sandro, and Marsha Chechik","authorsParsed":[["Murphy","Logan",""],["Viger","Torin",""],["Di Sandro","Alessio",""],["Chechik","Marsha",""]],"versions":[{"version":"v1","created":"Sun, 14 Jul 2024 22:13:44 GMT"}],"updateDate":"2024-07-16","timestamp":1720995224000,"abstract":"  In critical software engineering, structured assurance cases (ACs) are used\nto demonstrate how key properties (e.g., safety, security) are supported by\nevidence artifacts (e.g., test results, proofs). ACs can also be studied as\nformal objects in themselves, such that formal methods can be used to establish\ntheir correctness. Creating rigorous ACs is particularly challenging in the\ncontext of software product lines (SPLs), wherein a family of related software\nproducts is engineered simultaneously. Since creating individual ACs for each\nproduct is infeasible, AC development must be lifted to the level of product\nlines. In this work, we propose PLACIDUS, a methodology for integrating formal\nmethods and software product line engineering to develop provably correct ACs\nfor SPLs. To provide rigorous foundations for PLACIDUS, we define a\nvariability-aware AC language and formalize its semantics using the proof\nassistant Lean. We provide tool support for PLACIDUS as part of an\nEclipse-based model management framework. Finally, we demonstrate the\nfeasibility of PLACIDUS by developing an AC for a product line of medical\ndevices.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}