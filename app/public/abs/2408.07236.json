{"id":"2408.07236","title":"TaPS: A Performance Evaluation Suite for Task-based Execution Frameworks","authors":"J. Gregory Pauloski, Valerie Hayot-Sasson, Maxime Gonthier, Nathaniel\n  Hudson, Haochen Pan, Sicheng Zhou, Ian Foster, Kyle Chard","authorsParsed":[["Pauloski","J. Gregory",""],["Hayot-Sasson","Valerie",""],["Gonthier","Maxime",""],["Hudson","Nathaniel",""],["Pan","Haochen",""],["Zhou","Sicheng",""],["Foster","Ian",""],["Chard","Kyle",""]],"versions":[{"version":"v1","created":"Tue, 13 Aug 2024 23:55:56 GMT"}],"updateDate":"2024-08-15","timestamp":1723593356000,"abstract":"  Task-based execution frameworks, such as parallel programming libraries,\ncomputational workflow systems, and function-as-a-service platforms, enable the\ncomposition of distinct tasks into a single, unified application designed to\nachieve a computational goal. Task-based execution frameworks abstract the\nparallel execution of an application's tasks on arbitrary hardware. Research\ninto these task executors has accelerated as computational sciences\nincreasingly need to take advantage of parallel compute and/or heterogeneous\nhardware. However, the lack of evaluation standards makes it challenging to\ncompare and contrast novel systems against existing implementations. Here, we\nintroduce TaPS, the Task Performance Suite, to support continued research in\nparallel task executor frameworks. TaPS provides (1) a unified, modular\ninterface for writing and evaluating applications using arbitrary execution\nframeworks and data management systems and (2) an initial set of reference\nsynthetic and real-world science applications. We discuss how the design of\nTaPS supports the reliable evaluation of frameworks and demonstrate TaPS\nthrough a survey of benchmarks using the provided reference applications.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}