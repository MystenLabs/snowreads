{"id":"2407.17286","title":"Optimization of breeding program design through stochastic simulation\n  with evolutionary algorithms","authors":"Azadeh Hassanpour, Johannes Geibel, Henner Simianer, Antje Rohde,\n  Torsten Pook","authorsParsed":[["Hassanpour","Azadeh",""],["Geibel","Johannes",""],["Simianer","Henner",""],["Rohde","Antje",""],["Pook","Torsten",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 21:10:20 GMT"}],"updateDate":"2024-07-25","timestamp":1721682620000,"abstract":"  The effective planning and allocation of resources in modern breeding\nprograms is a complex task. Breeding program design and operational management\nhave a major impact on the success of a breeding program and changing\nparameters such as the number of selected/phenotyped/genotyped individuals will\nimpact genetic gain, genetic diversity, and costs. As a result, careful\nassessment and balancing of design parameters is crucial, considering the\ntrade-offs between different breeding goals and associated costs. In a previous\nstudy, we optimized the resource allocation strategy in a dairy cattle breeding\nscheme via the combination of stochastic simulations and kernel regression,\naiming to maximize a target function containing genetic gain and the inbreeding\nrate under a given budget. However, the high number of simulations required\nwhen using the proposed kernel regression method to optimize a breeding program\nwith many parameters weakens the effectiveness of such a method. In this work,\nwe are proposing an optimization framework that builds on the concepts of\nkernel regression but additionally makes use of an evolutionary algorithm to\nallow for a more effective and general optimization. The key idea is to\nconsider a set of potential parameterizations of the breeding program, evaluate\ntheir performance based on stochastic simulations, and use these outputs to\nderive new parametrization to test in an iterative procedure. The evolutionary\nalgorithm was implemented in a Snakemake pipeline to allow for efficient\nscaling on large distributed computing platforms. The algorithm achieved\nconvergence to the same optimum with a massively reduced number of simulations.\nThereby, the incorporation of class variables and accounting for a higher\nnumber of parameters in the optimization pipeline leads to substantially\nreduced computing time and better scaling for the desired optimization of a\nbreeding program.\n","subjects":["Quantitative Biology/Quantitative Methods","Computing Research Repository/Neural and Evolutionary Computing"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"dk1Sn-b8TPsr6X6y80ysmq2zVDT22WyT-5vi5h6vg04","pdfSize":"715214"}
