{"id":"2408.14708","title":"Realtime Compilation for Continuous Angle Quantum Error Correction\n  Architectures","authors":"Sayam Sethi, Jonathan M. Baker","authorsParsed":[["Sethi","Sayam",""],["Baker","Jonathan M.",""]],"versions":[{"version":"v1","created":"Tue, 27 Aug 2024 00:32:06 GMT"}],"updateDate":"2024-08-28","timestamp":1724718726000,"abstract":"  Quantum error correction (QEC) is necessary to run large scale quantum\nprograms. Regardless of error correcting code, hardware platform, or systems\narchitecture, QEC systems are limited by the types of gates which they can\nperform efficiently. In order to make the base code's gate set universal, they\ntypically rely on the production of a single type of resource state, commonly\nT, in a different code which is then distilled and injected into the base code.\nThis process is neither space nor time efficient and can account for a large\nportion of the total execution time and physical qubit cost of any program. In\norder to circumvent this problem, alternatives have been proposed, such as the\nproduction of continuous angle rotation states \\cite{akahoshi2023partially,\nchoi2023fault}. These proposals are powerful because they not only enable\nlocalized resource generation but also can potentially reduce total space\nrequirements.\n  However, the production of these states is non-deterministic and can require\nmany repetitions in order to obtain the desired resource. The original\nproposals suggest architectures which do not actively account for realtime\nmanagement of its resources to minimize total execution time. Without this,\nstatic compilation of programs to these systems will be unnecessarily\nexpensive. In this work, we propose a realtime compilation of programs to these\ncontinuous angle systems and a generalized resource sharing architecture which\nactively minimizes total execution time based on expected production rates. To\ndo so, we repeatedly redistribute resources on-demand which depending on the\nunderlying hardware can cause excessive classical control overhead. We further\naddress this by dynamically selecting the frequency of recompilation. Our\ncompiler and architecture improves over the baseline proposals by an average of\n$2\\times$.\n","subjects":["Physics/Quantum Physics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}