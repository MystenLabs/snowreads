{"id":"2408.07843","title":"Portability of Fortran's `do concurrent' on GPUs","authors":"Ronald M. Caplan, Miko M. Stulajter, Jon A. Linker, Jeff Larkin, Henry\n  A. Gabb, Shiquan Su, Ivan Rodriguez, Zachary Tschirhart, and Nicholas Malaya","authorsParsed":[["Caplan","Ronald M.",""],["Stulajter","Miko M.",""],["Linker","Jon A.",""],["Larkin","Jeff",""],["Gabb","Henry A.",""],["Su","Shiquan",""],["Rodriguez","Ivan",""],["Tschirhart","Zachary",""],["Malaya","Nicholas",""]],"versions":[{"version":"v1","created":"Wed, 14 Aug 2024 22:45:46 GMT"}],"updateDate":"2024-08-16","timestamp":1723675546000,"abstract":"  There is a continuing interest in using standard language constructs for\naccelerated computing in order to avoid (sometimes vendor-specific) external\nAPIs. For Fortran codes, the {\\tt do concurrent} (DC) loop has been\nsuccessfully demonstrated on the NVIDIA platform. However, support for DC on\nother platforms has taken longer to implement. Recently, Intel has added DC GPU\noffload support to its compiler, as has HPE for AMD GPUs. In this paper, we\nexplore the current portability of using DC across GPU vendors using the\nin-production solar surface flux evolution code, HipFT. We discuss\nimplementation and compilation details, including when/where using directive\nAPIs for data movement is needed/desired compared to using a unified memory\nsystem. The performance achieved on both data center and consumer platforms is\nshown.\n","subjects":["Computing Research Repository/Programming Languages","Astrophysics/Solar and Stellar Astrophysics","Computing Research Repository/Computational Engineering, Finance, and Science","Computing Research Repository/Mathematical Software","Computing Research Repository/Performance"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}