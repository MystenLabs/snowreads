{"id":"2407.02740","title":"Implementation and Analysis of GPU Algorithms for Vecchia Approximation","authors":"Zachary James, Joseph Guinness","authorsParsed":[["James","Zachary",""],["Guinness","Joseph",""]],"versions":[{"version":"v1","created":"Wed, 3 Jul 2024 01:24:44 GMT"}],"updateDate":"2024-07-04","timestamp":1719969884000,"abstract":"  Gaussian Processes have become an indispensable part of the spatial\nstatistician's toolbox but are unsuitable for analyzing large dataset because\nof the significant time and memory needed to fit the associated model exactly.\nVecchia Approximation is widely used to reduce the computational complexity and\ncan be calculated with embarrassingly parallel algorithms. While multi-core\nsoftware has been developed for Vecchia Approximation, such as the GpGp R\npackage, software designed to run on graphics processing units (GPU) is\nlacking, despite the tremendous success GPUs have had in statistics and machine\nlearning. We compare three different ways to implement Vecchia Approximation on\na GPU: two of which are similar to methods used for other Gaussian Process\napproximations and one that is new. The impact of memory type on performance is\ninvestigated and the final method is optimized accordingly. We show that our\nnew method outperforms the other two and then present it in the GpGpU R\npackage. We compare GpGpU to existing multi-core and GPU-accelerated software\nby fitting Gaussian Process models on various datasets, including a large\nspatial-temporal dataset of $n>10^6$ points collected from an earth-observing\nsatellite. Our results show that GpGpU achieves faster runtimes and better\npredictive accuracy.\n","subjects":["Statistics/Computation","Statistics/Machine Learning"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}