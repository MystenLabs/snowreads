{"id":"2408.12184","title":"Randomness control and reproducibility study of random forest algorithm\n  in R and Python","authors":"Louisa Camadini, Yanis Bouzid, Maeva Merlet, L\\'eopold Carron","authorsParsed":[["Camadini","Louisa",""],["Bouzid","Yanis",""],["Merlet","Maeva",""],["Carron","LÃ©opold",""]],"versions":[{"version":"v1","created":"Thu, 22 Aug 2024 07:59:49 GMT"}],"updateDate":"2024-08-23","timestamp":1724313589000,"abstract":"  When it comes to the safety of cosmetic products, compliance with regulatory\nstandards is crucialto guarantee consumer protection against the risks of skin\nirritation. Toxicologists must thereforebe fully conversant with all risks.\nThis applies not only to their day-to-day work, but also to allthe algorithms\nthey integrate into their routines. Recognizing this, ensuring the\nreproducibility ofalgorithms becomes one of the most crucial aspects to\naddress.However, how can we prove the robustness of an algorithm such as the\nrandom forest, that reliesheavily on randomness? In this report, we will\ndiscuss the strategy of integrating random forest intoocular tolerance\nassessment for toxicologists.We will compare four packages: randomForest and\nRanger (R packages), adapted in Python via theSKRanger package, and the widely\nused Scikit-Learn with the RandomForestClassifier() function.Our goal is to\ninvestigate the parameters and sources of randomness affecting the outcomes\nofRandom Forest algorithms.By setting comparable parameters and using the same\nPseudo-Random Number Generator (PRNG),we expect to reproduce results\nconsistently across the various available implementations of therandom forest\nalgorithm. Nevertheless, this exploration will unveil hidden layers of\nrandomness andguide our understanding of the critical parameters necessary to\nensure reproducibility across all fourimplementations of the random forest\nalgorithm.\n","subjects":["Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}