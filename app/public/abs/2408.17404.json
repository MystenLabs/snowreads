{"id":"2408.17404","title":"Getting Inspiration for Feature Elicitation: App Store- vs. LLM-based\n  Approach","authors":"Jialiang Wei, Anne-Lise Courbis, Thomas Lambolais, Binbin Xu, Pierre\n  Louis Bernard, G\\'erard Dray, Walid Maalej","authorsParsed":[["Wei","Jialiang",""],["Courbis","Anne-Lise",""],["Lambolais","Thomas",""],["Xu","Binbin",""],["Bernard","Pierre Louis",""],["Dray","GÃ©rard",""],["Maalej","Walid",""]],"versions":[{"version":"v1","created":"Fri, 30 Aug 2024 16:42:26 GMT"}],"updateDate":"2024-09-02","timestamp":1725036146000,"abstract":"  Over the past decade, app store (AppStore)-inspired requirements elicitation\nhas proven to be highly beneficial. Developers often explore competitors' apps\nto gather inspiration for new features. With the advance of Generative AI,\nrecent studies have demonstrated the potential of large language model\n(LLM)-inspired requirements elicitation. LLMs can assist in this process by\nproviding inspiration for new feature ideas. While both approaches are gaining\npopularity in practice, there is a lack of insight into their differences. We\nreport on a comparative study between AppStore- and LLM-based approaches for\nrefining features into sub-features. By manually analyzing 1,200 sub-features\nrecommended from both approaches, we identified their benefits, challenges, and\nkey differences. While both approaches recommend highly relevant sub-features\nwith clear descriptions, LLMs seem more powerful particularly concerning novel\nunseen app scopes. Moreover, some recommended features are imaginary with\nunclear feasibility, which suggests the importance of a human-analyst in the\nelicitation loop.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}