{"id":"2408.12986","title":"Top Score on the Wrong Exam: On Benchmarking in Machine Learning for\n  Vulnerability Detection","authors":"Niklas Risse and Marcel B\\\"ohme","authorsParsed":[["Risse","Niklas",""],["BÃ¶hme","Marcel",""]],"versions":[{"version":"v1","created":"Fri, 23 Aug 2024 11:08:49 GMT"}],"updateDate":"2024-08-26","timestamp":1724411329000,"abstract":"  According to our survey of the machine learning for vulnerability detection\n(ML4VD) literature published in the top Software Engineering conferences, every\npaper in the past 5 years defines ML4VD as a binary classification problem:\nGiven a function, does it contain a security flaw?\n  In this paper, we ask whether this decision can really be made without\nfurther context and study both vulnerable and non-vulnerable functions in the\nmost popular ML4VD datasets. A function is vulnerable if it was involved in a\npatch of an actual security flaw and confirmed to cause the vulnerability. It\nis non-vulnerable otherwise. We find that in almost all cases this decision\ncannot be made without further context. Vulnerable functions are often\nvulnerable only because a corresponding vulnerability-inducing calling context\nexists while non-vulnerable functions would often be vulnerable if a\ncorresponding context existed.\n  But why do ML4VD techniques perform so well even though there is demonstrably\nnot enough information in these samples? Spurious correlations: We find that\nhigh accuracy can be achieved even when only word counts are available. This\nshows that these datasets can be exploited to achieve high accuracy without\nactually detecting any security vulnerabilities.\n  We conclude that the current problem statement of ML4VD is ill-defined and\ncall into question the internal validity of this growing body of work.\nConstructively, we call for more effective benchmarking methodologies to\nevaluate the true capabilities of ML4VD, propose alternative problem\nstatements, and examine broader implications for the evaluation of machine\nlearning and programming analysis research.\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/"}