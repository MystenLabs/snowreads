{"id":"2407.16617","title":"Motion Accuracy and Computational Effort in QP-based Robot Control","authors":"S\\'elim Chefchaouni, Adrien Escande, Pierre-Brice Wieber","authorsParsed":[["Chefchaouni","SÃ©lim",""],["Escande","Adrien",""],["Wieber","Pierre-Brice",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 16:27:24 GMT"}],"updateDate":"2024-07-24","timestamp":1721752044000,"abstract":"  Quadratic Programs (QPs) have become a mature technology for the control of\nrobots of all kinds, including humanoid robots. One aspect has been largely\noverlooked, however, which is the accuracy with which these QPs should be\nsolved. Typical QP solvers aim at providing solutions accurate up to floating\npoint precision ($\\approx10^{-8}$). Considering physical quantities expressed\nin SI or similar units (meters, radians, etc.), such precision seems completely\nunrelated to both task requirements and hardware capacity. Typically, humanoid\nrobots never achieve, nor are capable of achieving sub-millimeter precision in\nmanipulation tasks. With this observation in mind, our objectives in this paper\nare two-fold: first examine how the QP solution accuracy impacts the resulting\nrobot motion accuracy, then evaluate how a reduced solution accuracy\nrequirement can be leveraged to reduce the corresponding computational effort.\nNumerical experiments with a dynamic simulation of a HRP-4 robot indicate that\ncomputational effort can be divided by more than 20 while maintaining the\ndesired motion accuracy.\n","subjects":["Computing Research Repository/Robotics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}