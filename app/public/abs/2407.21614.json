{"id":"2407.21614","title":"Maintaining $k$-MinHash Signatures over Fully-Dynamic Data Streams with\n  Recovery","authors":"Andrea Clementi, Luciano Gual\\`a, Luca Pep\\`e Sciarria, Alessandro\n  Straziota","authorsParsed":[["Clementi","Andrea",""],["Gualà","Luciano",""],["Sciarria","Luca Pepè",""],["Straziota","Alessandro",""]],"versions":[{"version":"v1","created":"Wed, 31 Jul 2024 14:00:44 GMT"}],"updateDate":"2024-08-01","timestamp":1722434444000,"abstract":"  We consider the task of performing Jaccard similarity queries over a large\ncollection of items that are dynamically updated according to a streaming input\nmodel. An item here is a subset of a large universe $U$ of elements. A\nwell-studied approach to address this important problem in data mining is to\ndesign fast-similarity data sketches. In this paper, we focus on global\nsolutions for this problem, i.e., a single data structure which is able to\nanswer both Similarity Estimation and All-Candidate Pairs queries, while also\ndynamically managing an arbitrary, online sequence of element insertions and\ndeletions received in input.\n  We introduce and provide an in-depth analysis of a dynamic, buffered version\nof the well-known $k$-MinHash sketch. This buffered version better manages\ncritical update operations thus significantly reducing the number of times the\nsketch needs to be rebuilt from scratch using expensive recovery queries. We\nprove that the buffered $k$-MinHash uses $O(k \\log |U|)$ memory words per\nsubset and that its amortized update time per insertion/deletion is $O(k \\log\n|U|)$ with high probability. Moreover, our data structure can return the\n$k$-MinHash signature of any subset in $O(k)$ time, and this signature is\nexactly the same signature that would be computed from scratch (and thus the\nquality of the signature is the same as the one guaranteed by the static\n$k$-MinHash).\n  Analytical and experimental comparisons with the other, state-of-the-art\nglobal solutions for this problem given in [Bury et al.,WSDM'18] show that the\nbuffered $k$-MinHash turns out to be competitive in a wide and relevant range\nof the online input parameters.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}