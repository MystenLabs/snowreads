{"id":"2408.10758","title":"Does Co-Development with AI Assistants Lead to More Maintainable Code? A\n  Registered Report","authors":"Markus Borg, Dave Hewett, Donald Graham, Noric Couderc, Emma\n  S\\\"oderberg, Luke Church, Dave Farley","authorsParsed":[["Borg","Markus",""],["Hewett","Dave",""],["Graham","Donald",""],["Couderc","Noric",""],["SÃ¶derberg","Emma",""],["Church","Luke",""],["Farley","Dave",""]],"versions":[{"version":"v1","created":"Tue, 20 Aug 2024 11:48:42 GMT"}],"updateDate":"2024-08-21","timestamp":1724154522000,"abstract":"  [Background/Context] AI assistants like GitHub Copilot are transforming\nsoftware engineering; several studies have highlighted productivity\nimprovements. However, their impact on code quality, particularly in terms of\nmaintainability, requires further investigation. [Objective/Aim] This study\naims to examine the influence of AI assistants on software maintainability,\nspecifically assessing how these tools affect the ability of developers to\nevolve code. [Method] We will conduct a two-phased controlled experiment\ninvolving professional developers. In Phase 1, developers will add a new\nfeature to a Java project, with or without the aid of an AI assistant. Phase 2,\na randomized controlled trial, will involve a different set of developers\nevolving random Phase 1 projects - working without AI assistants. We will\nemploy Bayesian analysis to evaluate differences in completion time, perceived\nproductivity, code quality, and test coverage.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}