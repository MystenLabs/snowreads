{"id":"2407.15440","title":"The Bicameral Cache: a split cache for vector architectures","authors":"Susana Rebolledo, Borja Perez, Jose Luis Bosque, Peter Hsu","authorsParsed":[["Rebolledo","Susana",""],["Perez","Borja",""],["Bosque","Jose Luis",""],["Hsu","Peter",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 07:42:57 GMT"},{"version":"v2","created":"Wed, 14 Aug 2024 09:18:02 GMT"}],"updateDate":"2024-08-15","timestamp":1721634177000,"abstract":"  The Bicameral Cache is a cache organization proposal for a vector\narchitecture that segregates data according to their access type,\ndistinguishing scalar from vector references. Its aim is to avoid both types of\nreferences from interfering in each other's data locality, with a special focus\non prioritizing the performance on vector references. The proposed system\nincorporates an additional, non-polluting prefetching mechanism to help\npopulate the long vector cache lines in advance to increase the hit rate by\nfurther exploiting the spatial locality on vector data. Its evaluation was\nconducted on the Cavatools simulator, comparing the performance to a standard\nconventional cache, over different typical vector benchmarks for several vector\nlengths. The results proved the proposed cache speeds up performance on\nstride-1 vector benchmarks, while hardly impacting non-stride-1's. In addition,\nthe prefetching feature consistently provided an additional value.\n","subjects":["Computing Research Repository/Hardware Architecture","Computing Research Repository/Performance"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}