{"id":"2407.06913","title":"A Simple, Nearly-Optimal Algorithm for Differentially Private All-Pairs\n  Shortest Distances","authors":"Jesse Campbell and Chunjiang Zhu","authorsParsed":[["Campbell","Jesse",""],["Zhu","Chunjiang",""]],"versions":[{"version":"v1","created":"Tue, 9 Jul 2024 14:48:30 GMT"},{"version":"v2","created":"Sat, 13 Jul 2024 15:38:29 GMT"}],"updateDate":"2024-07-16","timestamp":1720536510000,"abstract":"  The all-pairs shortest distances (APSD) with differential privacy (DP)\nproblem takes as input an undirected, weighted graph $G = (V,E, \\mathbf{w})$\nand outputs a private estimate of the shortest distances in $G$ between all\npairs of vertices. In this paper, we present a simple\n$\\widetilde{O}(n^{1/3}/\\varepsilon)$-accurate algorithm to solve APSD with\n$\\varepsilon$-DP, which reduces to $\\widetilde{O}(n^{1/4}/\\varepsilon)$ in the\n$(\\varepsilon, \\delta)$-DP setting, where $n = |V|$. Our algorithm greatly\nimproves upon the error of prior algorithms, namely\n$\\widetilde{O}(n^{2/3}/\\varepsilon)$ and $\\widetilde{O}(\\sqrt{n}/\\varepsilon)$\nin the two respective settings, and is the first to be optimal up to a\npolylogarithmic factor, based on a lower bound of\n$\\widetilde{\\Omega}(n^{1/4})$.\n  In the case where a multiplicative approximation is allowed, we give two\ndifferent constructions of algorithms with reduced additive error. Our first\nconstruction allows a multiplicative approximation of $O(k\\log{\\log{n}})$ and\nhas additive error $\\widetilde{O}(k\\cdot n^{1/k}/\\varepsilon)$ in the\n$\\varepsilon$-DP case and $\\widetilde{O}(\\sqrt{k}\\cdot n^{1/(2k)}/\\varepsilon)$\nin the $(\\varepsilon, \\delta)$-DP case. Our second construction allows\nmultiplicative approximation $2k-1$ and has the same asymptotic additive error\nas the first construction. Both constructions significantly improve upon the\ncurrently best-known additive error of, $\\widetilde{O}(k\\cdot n^{1/2 +\n1/(4k+2)}/\\varepsilon)$ and $\\widetilde{O}(k\\cdot n^{1/3 +\n2/(9k+3)}/\\varepsilon)$, respectively. Our algorithms are straightforward and\nwork by decomposing a graph into a set of spanning trees, and applying a key\nobservation that we can privately release APSD in trees with\n$O(\\text{polylog}(n))$ error.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/"}