{"id":"2408.05810","title":"Evaluating the Effectiveness of Microarchitectural Hardware Fault\n  Detection for Application-Specific Requirements","authors":"Konstantinos-Nikolaos Papadopoulos, Christina Giannoula,\n  Nikolaos-Charalampos Papadopoulos, Nektarios Koziris, Jos\\'e M.G. Merayo,\n  Dionisios N. Pnevmatikatos","authorsParsed":[["Papadopoulos","Konstantinos-Nikolaos",""],["Giannoula","Christina",""],["Papadopoulos","Nikolaos-Charalampos",""],["Koziris","Nektarios",""],["Merayo","Jos√© M. G.",""],["Pnevmatikatos","Dionisios N.",""]],"versions":[{"version":"v1","created":"Sun, 11 Aug 2024 16:00:53 GMT"}],"updateDate":"2024-08-13","timestamp":1723392053000,"abstract":"  Reliability is necessary in safety-critical applications spanning numerous\ndomains. Conventional hardware-based fault tolerance techniques, such as\ncomponent redundancy, ensure reliability, typically at the expense of\nsignificantly increased power consumption, and almost double (or more) hardware\narea. To mitigate these costs, microarchitectural fault tolerance methods try\nto lower overheads by leveraging microarchitectural insights, but prior\nevaluations focus primarily on only application performance. As different\nsafety-critical applications prioritize different requirements beyond\nreliability, evaluating only limited metrics cannot guarantee that\nmicroarchitectural methods are practical and usable for all different\napplication scenarios. To this end, in this work, we extensively characterize\nand compare three fault detection methods, each representing a different major\nfault detection category, considering real requirements from diverse\napplication settings and employing various important metrics such as design\narea, power, performance overheads and latency in detection. Through this\nanalysis, we provide important insights which may guide designers in applying\nthe most effective fault tolerance method tailored to specific needs, advancing\nthe overall understanding and development of robust computing systems. For\nthis, we study three methods for hardware error detection within a processor,\ni.e., (i) Dual Modular Redundancy (DMR) as a conventional method, and (ii)\nRedundant Multithreading (R-SMT) and (iii) Parallel Error Detection (ParDet) as\nmicroarchitecture-level methods. We demonstrate that microarchitectural fault\ntolerance, i.e., R-SMT and ParDet, is comparably robust compared to\nconventional approaches (DMR), however, still exhibits unappealing trade-offs\nfor specific real-world use cases, thus precluding their usage in certain\napplication scenarios.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"kQr9IYCJpfhqlU7YyCl2EXmaC1tPMbdaw02j4sp4x2A","pdfSize":"2125555"}
