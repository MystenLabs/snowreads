{"id":"2407.08091","title":"Programming Language Case Studies Can Be Deep","authors":"Rose Bohrer (Worcester Polytechnic Institute)","authorsParsed":[["Bohrer","Rose","","Worcester Polytechnic Institute"]],"versions":[{"version":"v1","created":"Wed, 10 Jul 2024 23:27:53 GMT"}],"updateDate":"2024-07-12","timestamp":1720654073000,"abstract":"  In the pedagogy of programming languages, one well-known course structure is\nto tour multiple languages as a means of touring paradigms. This\ntour-of-paradigms approach has long received criticism as lacking depth,\ndistracting students from foundational issues in language theory and\nimplementation. This paper argues for disentangling the idea of a\ntour-of-languages from the tour-of-paradigms. We make this argument by\npresenting, in depth, a series of case studies included in the Human-Centered\nProgramming Languages curriculum. In this curriculum, case studies become deep,\nserving to tour the different intellectual foundations through which a scholar\ncan approach programming languages, which one could call the tour-of-humans. In\nparticular, the design aspect of programming languages has much to learn from\nthe social sciences and humanities, yet these intellectual foundations would\nyield far fewer deep contributions if we did not permit them to employ case\nstudies.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}