{"id":"2407.03962","title":"Multiplier Design Addressing Area-Delay Trade-offs by using DSP and\n  Logic resources on FPGAs","authors":"Andreas B\\\"ottcher, Martin Kumm","authorsParsed":[["BÃ¶ttcher","Andreas",""],["Kumm","Martin",""]],"versions":[{"version":"v1","created":"Thu, 4 Jul 2024 14:31:52 GMT"}],"updateDate":"2024-07-08","timestamp":1720103512000,"abstract":"  The major challenge when designing multipliers for FPGAs is to address\nseveral trade-offs: On the one hand at the performance level and on the other\nhand at the resource level utilizing DSP blocks or look-up tables (LUTs). With\nDSPs being a relatively limited resource, the problem of under- or\nover-utilization of DSPs has previously been addressed by the concept of\nmultiplier tiling, by assembling multipliers from DSPs and small supplemental\nLUT multipliers. But there had always been an efficiency gap between\ntiling-based multipliers and radix-4 Booth-Arrays. While the monolithic\nBooth-Array was shown to be considerably more efficient in terms of\nLUT-resources on many modern FPGA-architectures, it typically possess a\nsignificantly higher critically path delay (or latency when pipelined) compared\nto multipliers designed by tiling. This work proposes and analyzes the use of\nsmaller Booth-Arrays as sub-multipliers that are integrated into existing\ntiling-based methods, such that better trade-off points between area and delay\ncan be reached while utilizing a user-specified number of DSP blocks. It is\nshown by synthesis experiments, that the critical path delay compared to large\nBooth-Arrays can be reduced, while achieving significant reductions in\nLUT-resources compared to previous tiling.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}