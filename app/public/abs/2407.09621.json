{"id":"2407.09621","title":"Acceleration of Tensor-Product Operations with Tensor Cores","authors":"Cu Cui","authorsParsed":[["Cui","Cu",""]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 18:16:38 GMT"}],"updateDate":"2024-07-16","timestamp":1720808198000,"abstract":"  In this paper, we explore the acceleration of tensor product operations in\nfinite element methods, leveraging the computational power of the NVIDIA A100\nGPU Tensor Cores. We provide an accessible overview of the necessary\nmathematical background and discuss our implementation strategies. Our study\nfocuses on two common programming approaches for NVIDIA Tensor Cores: the C++\nWarp Matrix Functions in nvcuda::wmma and the inline Parallel Thread Execution\n(PTX) instructions mma.sync.aligned. A significant focus is placed on the\nadoption of the versatile inline PTX instructions combined with a conflict-free\nshared memory access pattern, a key to unlocking superior performance. When\nbenchmarked against traditional CUDA Cores, our approach yields a remarkable\n2.3-fold increase in double precision performance, achieving 8 TFLOPS/s-45% of\nthe theoretical maximum. Furthermore, in half-precision computations, numerical\nexperiments demonstrate a fourfold enhancement in solving the Poisson equation\nusing the flexible GMRES (FGMRES) method, preconditioned by a multigrid method\nin 3D. This is achieved while maintaining the same discretization error as\nobserved in double precision computations. These results highlight the\nconsiderable benefits of using Tensor Cores for finite element operators with\ntensor products, achieving an optimal balance between computational speed and\nprecision.\n","subjects":["Computing Research Repository/Mathematical Software","Computing Research Repository/Numerical Analysis","Computing Research Repository/Performance","Mathematics/Numerical Analysis"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}