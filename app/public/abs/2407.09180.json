{"id":"2407.09180","title":"iMIV: in-Memory Integrity Verification for NVM","authors":"Rajat Jain (1), Aravinda Prasad (2), Sreenivas Subramoney (2),\n  Arkaprava Basu (1) ((1) Indian Institute of Science, (2) Intel Labs)","authorsParsed":[["Jain","Rajat","","Indian Institute of Science"],["Prasad","Aravinda","","Intel Labs"],["Subramoney","Sreenivas","","Intel Labs"],["Basu","Arkaprava","","Indian Institute of Science"]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 11:29:25 GMT"}],"updateDate":"2024-07-15","timestamp":1720783765000,"abstract":"  Non-volatile Memory (NVM) could bridge the gap between memory and storage.\nHowever, NVMs are susceptible to data remanence attacks. Thus, multiple\nsecurity metadata must persist along with the data to protect the\nconfidentiality and integrity of NVM-resident data. Persisting Bonsai Merkel\nTree (BMT) nodes, critical for data integrity, can add significant overheads\ndue to need to write large amounts of metadata off-chip to the\nbandwidth-constrained NVMs.\n  We propose iMIV for low-overhead, fine-grained integrity verification through\nin-memory computing. We argue that memory-intensive integrity verification\noperations (BMT updates and verification) should be employed close to the NVM\nto limit off-chip data movement. We design iMIV based on typical NVDIMM designs\nthat have an onboard logic chip with a trusted encryption engine, separate from\nthe untrusted storage media. iMIV reduces the performance overheads from 205%\nto 55% when integrity verification operations are offloaded to NVM compared to\nwhen all the security operations are employed at the memory controller.\n","subjects":["Computing Research Repository/Hardware Architecture"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/","blobId":"xfCki5EH_fGrCFndWbU_CVySjpxlmyBj2D14Rp8x5Hc","pdfSize":"1372178","objectId":"0x4f3d458b06823a9ef86f46321b5be6d8912630f1a0d1f90a0ee0d5a25147935c","registeredEpoch":"2","certifiedEpoch":"2","startEpoch":"2","endEpoch":"202"}
