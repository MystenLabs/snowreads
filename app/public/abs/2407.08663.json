{"id":"2407.08663","title":"Mon CH\\`ERI <3 Adapting Capability Hardware Enhanced RISC with\n  Conditional Capabilities","authors":"Merve G\\\"ulmez, H{\\aa}kan Englund, Jan Tobias M\\\"uhlberg, Thomas Nyman","authorsParsed":[["Gülmez","Merve",""],["Englund","Håkan",""],["Mühlberg","Jan Tobias",""],["Nyman","Thomas",""]],"versions":[{"version":"v1","created":"Thu, 11 Jul 2024 16:51:36 GMT"}],"updateDate":"2024-07-12","timestamp":1720716696000,"abstract":"  Up to 10% of memory-safety vulnerabilities in languages like C and C++ stem\nfrom uninitialized variables. This work addresses the prevalence and lack of\nadequate software mitigations for uninitialized memory issues, proposing\narchitectural protections in hardware. Capability-based addressing, such as the\nUniversity of Cambridge's CHERI, mitigates many memory defects, including\nspatial and temporal safety violations at an architectural level. However,\ncurrent CHERI designs do not handle undefined behavior from uninitialized\nvariables. We extend the CHERI capability model to include \"conditional\ncapabilities\", enabling memory-access policies based on prior operations. This\nallows enforcement of policies that satisfy memory safety objectives such as\n\"no reads to memory without at least one prior write\" (Write-before-Read). We\npresent our architecture extension, compiler support, and a detailed evaluation\nof our approach using the QEMU full-system simulator and our modified\nFPGA-based CHERI-RISCV softcore. Our evaluation shows Write-before-Read\nconditional capabilities are practical, with high detection accuracy while\nadding a small (~3.5%) overhead to the existing CHERI architecture.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}