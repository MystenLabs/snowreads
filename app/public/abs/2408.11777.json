{"id":"2408.11777","title":"CI/CD Efforts for Validation, Verification and Benchmarking OpenMP\n  Implementations","authors":"Aaron Jarmusch, Felipe Cabarcas, Swaroop Pophale, Andrew Kallai,\n  Johannes Doerfert, Luke Peyralans, Seyong Lee, Joel Denny, and Sunita\n  Chandrasekaran","authorsParsed":[["Jarmusch","Aaron",""],["Cabarcas","Felipe",""],["Pophale","Swaroop",""],["Kallai","Andrew",""],["Doerfert","Johannes",""],["Peyralans","Luke",""],["Lee","Seyong",""],["Denny","Joel",""],["Chandrasekaran","Sunita",""]],"versions":[{"version":"v1","created":"Wed, 21 Aug 2024 17:06:18 GMT"}],"updateDate":"2024-08-22","timestamp":1724259978000,"abstract":"  Software developers must adapt to keep up with the changing capabilities of\nplatforms so that they can utilize the power of High- Performance Computers\n(HPC), including exascale systems. OpenMP, a directive-based parallel\nprogramming model, allows developers to include directives to existing C, C++,\nor Fortran code to allow node level parallelism without compromising\nperformance. This paper describes our CI/CD efforts to provide easy evaluation\nof the support of OpenMP across different compilers using existing testsuites\nand benchmark suites on HPC platforms. Our main contributions include (1) the\nset of a Continuous Integration (CI) and Continuous Development (CD) workflow\nthat captures bugs and provides faster feedback to compiler developers, (2) an\nevaluation of OpenMP (offloading) implementations supported by AMD, HPE, GNU,\nLLVM, and Intel, and (3) evaluation of the quality of compilers across\ndifferent heterogeneous HPC platforms. With the comprehensive testing through\nthe CI/CD workflow, we aim to provide a comprehensive understanding of the\ncurrent state of OpenMP (offloading) support in different compilers and\nheterogeneous platforms consisting of CPUs and GPUs from NVIDIA, AMD, and\nIntel.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/"}