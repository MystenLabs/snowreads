{"id":"2407.05715","title":"The Size-Change Principle for Mixed Inductive and Coinductive types","authors":"Pierre Hyvernat (LAMA)","authorsParsed":[["Hyvernat","Pierre","","LAMA"]],"versions":[{"version":"v1","created":"Mon, 8 Jul 2024 08:19:07 GMT"}],"updateDate":"2024-07-09","timestamp":1720426747000,"abstract":"  This paper shows how to use Lee, Jones and Ben Amram's size-change principle\nto check correctness of arbitrary recursive definitions in an ML / Haskell like\nprogramming language with inductive and coinductive types.Naively using the\nsize-change principle to check productivity and termination is straightforward\nbut unsound when inductive and coinductive types arenested. We can however\nadapt the size-change principle to check ``totality'', which corresponds\nexactly to correctness with respect to the corresponding (co)inductive type.\n","subjects":["Computing Research Repository/Logic in Computer Science"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}