{"id":"2407.16449","title":"Constrained coding upper bounds via Goulden-Jackson cluster theorem","authors":"Yuanting Shen and Chong Shangguan and Zhicong Lin and Gennian Ge","authorsParsed":[["Shen","Yuanting",""],["Shangguan","Chong",""],["Lin","Zhicong",""],["Ge","Gennian",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 12:59:48 GMT"}],"updateDate":"2024-07-24","timestamp":1721739588000,"abstract":"  Motivated by applications in DNA-based data storage, constrained codes have\nattracted a considerable amount of attention from both academia and industry.\nWe study the maximum cardinality of constrained codes for which the constraints\ncan be characterized by a set of forbidden substrings, where by a substring we\nmean some consecutive coordinates in a string.\n  For finite-type constrained codes (for which the set of forbidden substrings\nis finite), one can compute their capacity (code rate) by the ``spectral\nmethod'', i.e., by applying the Perron-Frobenious theorem to the de Brujin\ngraph defined by the code. However, there was no systematic method to compute\nthe exact cardinality of these codes.\n  We show that there is a surprisingly powerful method arising from enumerative\ncombinatorics, which is based on the Goulden-Jackson cluster theorem\n(previously not known to the coding community), that can be used to compute not\nonly the capacity, but also the exact formula for the cardinality of these\ncodes, for each fixed code length. Moreover, this can be done by solving a\nsystem of linear equations of size equal to the number of constraints.\n  We also show that the spectral method and the cluster method are inherently\nrelated by establishing a direct connection between the spectral radius of the\nde Brujin graph used in the first method and the convergence radius of the\ngenerating function used in the second method.\n  Lastly, to demonstrate the flexibility of the new method, we use it to give\nan explicit upper bound on the maximum cardinality of variable-length\nnon-overlapping codes, which are a class of constrained codes defined by an\ninfinite number of forbidden substrings.\n","subjects":["Computing Research Repository/Information Theory","Mathematics/Combinatorics","Mathematics/Information Theory"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}