{"id":"2407.07337","title":"In-Orbit Processing or Not? Sunlight-Aware Task Scheduling for\n  Energy-Efficient Space Edge Computing Networks","authors":"Weisen Liu, Zeqi Lai, Qian Wu, Hewu Li, Qi Zhang, Zonglun Li, Yuanjie\n  Li, Jun Liu","authorsParsed":[["Liu","Weisen",""],["Lai","Zeqi",""],["Wu","Qian",""],["Li","Hewu",""],["Zhang","Qi",""],["Li","Zonglun",""],["Li","Yuanjie",""],["Liu","Jun",""]],"versions":[{"version":"v1","created":"Wed, 10 Jul 2024 03:17:40 GMT"}],"updateDate":"2024-07-11","timestamp":1720581460000,"abstract":"  With the rapid evolution of space-borne capabilities, space edge computing\n(SEC) is becoming a new computation paradigm for future integrated space and\nterrestrial networks. Satellite edges adopt advanced on-board hardware, which\nnot only enables new opportunities to perform complex intelligent tasks in\norbit, but also involves new challenges due to the additional energy\nconsumption in power-constrained space environment. In this paper, we present\nPHOENIX, an energy-efficient task scheduling framework for emerging SEC\nnetworks. PHOENIX exploits a key insight that in the SEC network, there always\nexist a number of sunlit edges which are illuminated during the entire orbital\nperiod and have sufficient energy supplement from the sun. PHOENIX accomplishes\nenergy-efficient in-orbit computing by judiciously offloading space tasks to\n\"sunlight-sufficient\" edges or to the ground. Specifically, PHOENIX first\nformulates the SEC battery energy optimizing (SBEO) problem which aims at\nminimizing the average battery energy consumption while satisfying various task\ncompletion constraints. Then PHOENIX incorporates a sunlight-aware scheduling\nmechanism to solve the SBEO problem and schedule SEC tasks efficiently.\nFinally, we implement a PHOENIX prototype and build an SEC testbed. Extensive\ndata-driven evaluations demonstrate that as compared to other state-of-the-art\nsolutions, PHOENIX can effectively reduce up to 54.8% SEC battery energy\nconsumption and prolong battery lifetime to 2.9$\\times$ while still completing\ntasks on time.\n","subjects":["Computing Research Repository/Networking and Internet Architecture","Electrical Engineering and Systems Science/Signal Processing"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}