{"id":"2407.09095","title":"TAPFixer: Automatic Detection and Repair of Home Automation\n  Vulnerabilities based on Negated-property Reasoning","authors":"Yinbo Yu, Yuanqi Xu, Kepu Huang, Jiajia Liu","authorsParsed":[["Yu","Yinbo",""],["Xu","Yuanqi",""],["Huang","Kepu",""],["Liu","Jiajia",""]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 08:43:26 GMT"}],"updateDate":"2024-07-15","timestamp":1720773806000,"abstract":"  Trigger-Action Programming (TAP) is a popular end-user programming framework\nin the home automation (HA) system, which eases users to customize home\nautomation and control devices as expected. However, its simplified syntax also\nintroduces new safety threats to HA systems through vulnerable rule\ninteractions. Accurately fixing these vulnerabilities by logically and\nphysically eliminating their root causes is essential before rules are\ndeployed. However, it has not been well studied. In this paper, we present\nTAPFixer, a novel framework to automatically detect and repair rule interaction\nvulnerabilities in HA systems. It extracts TAP rules from HA profiles,\ntranslates them into an automaton model with physical and latency features, and\nperforms model checking with various correctness properties. It then uses a\nnovel negated-property reasoning algorithm to automatically infer a patch via\nmodel abstraction and refinement and model checking based on\nnegated-properties. We evaluate TAPFixer on market HA apps (1177 TAP rules and\n53 properties) and find that it can achieve an 86.65% success rate in repairing\nrule interaction vulnerabilities. We additionally recruit 23 HA users to\nconduct a user study that demonstrates the usefulness of TAPFixer for\nvulnerability repair in practical HA scenarios.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}