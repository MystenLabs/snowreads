{"id":"2407.08089","title":"Teaching Type Systems Implementation with Stella, an Extensible\n  Statically Typed Programming Language","authors":"Abdelrahman Abounegm (Innopolis University), Nikolai Kudasov\n  (Innopolis University), Alexey Stepanov (Innopolis University)","authorsParsed":[["Abounegm","Abdelrahman","","Innopolis University"],["Kudasov","Nikolai","","Innopolis University"],["Stepanov","Alexey","","Innopolis University"]],"versions":[{"version":"v1","created":"Wed, 10 Jul 2024 23:27:21 GMT"}],"updateDate":"2024-07-12","timestamp":1720654041000,"abstract":"  We report on a half-semester course focused around implementation of type\nsystems in programming languages. The course assumes basics of classical\ncompiler construction, in particular, the abstract syntax representation, the\nVisitor pattern, and parsing. The course is built around a language Stella with\na minimalistic core and a set of small extensions, covering algebraic data\ntypes, references, exceptions, exhaustive pattern matching, subtyping,\nrecursive types, universal polymorphism, and type reconstruction. Optionally,\nan implementation of an interpreter and a compiler is offered to the students.\nTo facilitate fast development and variety of implementation languages we rely\non the BNF Converter tool and provide templates for the students in multiple\nlanguages. Finally, we report some results of teaching based on students'\nachievements.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"tzeWxAAMMBw16L7LusMLnbpmC9p3s4xDpfQwDssTMOY","pdfSize":"397588"}
