{"id":"2407.13712","title":"Enabling MPI communication within Numba/LLVM JIT-compiled Python code\n  using numba-mpi v1.0","authors":"Kacper Derlatka, Maciej Manna, Oleksii Bulenok, David Zwicker,\n  Sylwester Arabas","authorsParsed":[["Derlatka","Kacper",""],["Manna","Maciej",""],["Bulenok","Oleksii",""],["Zwicker","David",""],["Arabas","Sylwester",""]],"versions":[{"version":"v1","created":"Mon, 1 Jul 2024 17:12:34 GMT"}],"updateDate":"2024-07-19","timestamp":1719853954000,"abstract":"  The numba-mpi package offers access to the Message Passing Interface (MPI)\nroutines from Python code that uses the Numba just-in-time (JIT) compiler. As a\nresult, high-performance and multi-threaded Python code may utilize MPI\ncommunication facilities without leaving the JIT-compiled code blocks, which is\nnot possible with the mpi4py package, a higher-level Python interface to MPI.\nFor debugging purposes, numba-mpi retains full functionality of the code even\nif the JIT compilation is disabled. The numba-mpi API constitutes a thin\nwrapper around the C API of MPI and is built around Numpy arrays including\nhandling of non-contiguous views over array slices. Project development is\nhosted at GitHub leveraging the mpi4py/setup-mpi workflow enabling continuous\nintegration tests on Linux (MPICH, OpenMPI & Intel MPI), macOS (MPICH &\nOpenMPI) and Windows (MS MPI). The paper covers an overview of the package\nfeatures, architecture and performance. As of v1.0, the following MPI routines\nare exposed and covered by unit tests: size/rank, [i]send/[i]recv,\nwait[all|any], test[all|any], allreduce, bcast, barrier, scatter/[all]gather &\nwtime. The package is implemented in pure Python and depends on numpy, numba\nand mpi4py (the latter used at initialization and as a source of utility\nroutines only). The performance advantage of using numba-mpi compared to mpi4py\nis depicted with a simple example, with entirety of the code included in\nlistings discussed in the text. Application of numba-mpi for handling domain\ndecomposition in numerical solvers for partial differential equations is\npresented using two external packages that depend on numba-mpi: py-pde and\nPyMPDATA-MPI.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing","Computing Research Repository/Mathematical Software"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}