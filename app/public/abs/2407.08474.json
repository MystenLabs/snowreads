{"id":"2407.08474","title":"DIDUP: Dynamic Iterative Development for UI Prototyping","authors":"Jenny Ma, Karthik Sreedhar, Vivian Liu, Sitong Wang, Pedro Alejandro\n  Perez, Lydia B. Chilton","authorsParsed":[["Ma","Jenny",""],["Sreedhar","Karthik",""],["Liu","Vivian",""],["Wang","Sitong",""],["Perez","Pedro Alejandro",""],["Chilton","Lydia B.",""]],"versions":[{"version":"v1","created":"Thu, 11 Jul 2024 13:10:11 GMT"}],"updateDate":"2024-07-12","timestamp":1720703411000,"abstract":"  Large language models (LLMs) are remarkably good at writing code. A\nparticularly valuable case of human-LLM collaboration is code-based UI\nprototyping, a method for creating interactive prototypes that allows users to\nview and fully engage with a user interface. We conduct a formative study of\nGPT Pilot, a leading LLM-generated code-prototyping system, and find that its\ninflexibility towards change once development has started leads to weaknesses\nin failure prevention and dynamic planning; it closely resembles the linear\nworkflow of the waterfall model. We introduce DIDUP, a system for code-based UI\nprototyping that follows an iterative spiral model, which takes changes and\niterations that come up during the development process into account. We propose\nthree novel mechanisms for LLM-generated code-prototyping systems: (1) adaptive\nplanning, where plans should be dynamic and reflect changes during\nimplementation, (2) code injection, where the system should write a minimal\namount of code and inject it instead of rewriting code so users have a better\nmental model of the code evolution, and (3) lightweight state management, a\nsimplified version of source control so users can quickly revert to different\nworking states. Together, this enables users to rapidly develop and iterate on\nprototypes.\n","subjects":["Computing Research Repository/Human-Computer Interaction","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}