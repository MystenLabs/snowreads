{"id":"2408.11283","title":"Inference Plans for Hybrid Particle Filtering","authors":"Ellie Y. Cheng, Eric Atkinson, Guillaume Baudart, Louis Mandel,\n  Michael Carbin","authorsParsed":[["Cheng","Ellie Y.",""],["Atkinson","Eric",""],["Baudart","Guillaume",""],["Mandel","Louis",""],["Carbin","Michael",""]],"versions":[{"version":"v1","created":"Wed, 21 Aug 2024 02:07:03 GMT"}],"updateDate":"2024-08-22","timestamp":1724206023000,"abstract":"  Advanced probabilistic programming languages (PPLs) use hybrid inference\nsystems to combine symbolic exact inference and Monte Carlo methods to improve\ninference performance. These systems use heuristics to partition random\nvariables within the program into variables that are encoded symbolically and\nvariables that are encoded with sampled values, and the heuristics are not\nnecessarily aligned with the performance evaluation metrics used by the\ndeveloper. In this work, we present inference plans, a programming interface\nthat enables developers to control the partitioning of random variables during\nhybrid particle filtering. We further present Siren, a new PPL that enables\ndevelopers to use annotations to specify inference plans the inference system\nmust implement. To assist developers with statically reasoning about whether an\ninference plan can be implemented, we present an abstract-interpretation-based\nstatic analysis for Siren for determining inference plan satisfiability. We\nprove the analysis is sound with respect to Siren's semantics. Our evaluation\napplies inference plans to three different hybrid particle filtering algorithms\non a suite of benchmarks and shows that the control provided by inference plans\nenables speed ups of 1.76x on average and up to 206x to reach target accuracy,\ncompared to the inference plans implemented by default heuristics; the results\nalso show that inference plans improve accuracy by 1.83x on average and up to\n595x with less or equal runtime, compared to the default inference plans. We\nfurther show that the static analysis is precise in practice, identifying all\nsatisfiable inference plans in 27 out of the 33 benchmark-algorithm\ncombinations.\n","subjects":["Computing Research Repository/Programming Languages","Computing Research Repository/Artificial Intelligence"],"license":"http://creativecommons.org/licenses/by/4.0/"}