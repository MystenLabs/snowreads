{"id":"2408.10338","title":"Revisiting Tree Canonization using polynomials","authors":"V. Arvind, Samir Datta, Salman Faris and Asif Khan","authorsParsed":[["Arvind","V.",""],["Datta","Samir",""],["Faris","Salman",""],["Khan","Asif",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 18:23:10 GMT"}],"updateDate":"2024-08-21","timestamp":1724091790000,"abstract":"  Graph Isomorphism (GI) is a fundamental algorithmic problem. Amongst graph\nclasses for which the computational complexity of GI has been resolved, trees\nare arguably the most fundamental. Tree Isomorphism is complete for\ndeterministic logspace, a tiny subclass of polynomial time, by Lindell's\nresult. Over three decades ago, he devised a deterministic logspace algorithm\nthat computes a string which is a canon for the input tree -- two trees are\nisomorphic precisely when their canons are identical. Inspired by Miller-Reif's\nreduction of Tree Isomorphism to Polynomial Identity Testing, we present a new\nlogspace algorithm for tree canonization fundamentally different from Lindell's\nalgorithm. Our algorithm computes a univariate polynomial as canon for an input\ntree, based on the classical Eisenstein's criterion for the irreducibility of\nunivariate polynomials. This can be implemented in logspace by invoking the\nwell known Buss et al. algorithm for arithmetic formula evaluation. This\nalgorithm is conceptually very simple, avoiding the delicate case analysis and\ncomplex recursion that constitute the core of Lindell's algorithm. We\nillustrate the adaptability of our algorithm by extending it to a couple of\nother classes of graphs.\n","subjects":["Computing Research Repository/Computational Complexity","Computing Research Repository/Data Structures and Algorithms"],"license":"http://creativecommons.org/licenses/by/4.0/"}