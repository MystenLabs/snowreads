{"id":"2408.15292","title":"CrossInspector: A Static Analysis Approach for Cross-Contract\n  Vulnerability Detection","authors":"Xiao Chen","authorsParsed":[["Chen","Xiao",""]],"versions":[{"version":"v1","created":"Tue, 27 Aug 2024 00:53:14 GMT"}],"updateDate":"2024-08-29","timestamp":1724719994000,"abstract":"  With the development of blockchain technology, the detection of smart\ncontract vulnerabilities is increasingly emphasized. However, when detecting\nvulnerabilities in inter-contract interactions (i.e., cross-contract\nvulnerabilities) using smart contract bytecode, existing tools often produce\nmany false positives and false negatives due to insufficient recovery of\nsemantic information and inadequate consideration of contract dependencies. We\npresent CrossInspector, a novel framework for detecting cross-contract\nvulnerabilities at the bytecode level through static analysis. CrossInspector\nutilizes a trained Transformer model to recover semantic information and\nconsiders control flow, data flow, and dependencies related to smart contract\nstate variables to construct a state dependency graph for fine-grained\ninter-procedural analysis. Additionally, CrossInspector incorporates a pruning\nmethod and two parallel optimization mechanisms to accelerate the vulnerability\ndetection process. Experiments on our manually constructed dataset demonstrate\nthat CrossInspector outperforms the state-of-the-art tools in both precision\n(97\\%) and recall (96.75\\%), while also significantly reducing the overall time\nfrom 16.34 seconds to 7.83 seconds, almost on par with the fastest tool that\nutilizes bytecode for detection. Additionally, we ran CrossInspector on a\nrandomly selected set of 300 real-world smart contracts and identified 11\ncross-contract vulnerabilities that were missed by prior tools.\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}