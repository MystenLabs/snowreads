{"id":"2407.06509","title":"Toward Verified Library-Level Choreographic Programming with Algebraic\n  Effects","authors":"Gan Shen, Lindsey Kuper","authorsParsed":[["Shen","Gan",""],["Kuper","Lindsey",""]],"versions":[{"version":"v1","created":"Tue, 9 Jul 2024 02:34:57 GMT"}],"updateDate":"2024-07-10","timestamp":1720492497000,"abstract":"  Choreographic programming (CP) is a paradigm for programming distributed\napplications as single, unified programs, called choreographies, that are then\ncompiled to node-local programs via endpoint projection (EPP). Recently,\nlibrary-level CP frameworks have emerged, in which choreographies and EPP are\nexpressed as constructs in an existing host language. So far, however,\nlibrary-level CP lacks a solid theoretical foundation.\n  In this paper, we propose modeling library-level CP using algebraic effects,\nan abstraction that generalizes the approach taken by existing CP libraries.\nAlgebraic effects let us define choreographies as computations with\nuser-defined effects and EPP as location-specific effect handlers. Algebraic\neffects also lend themselves to reasoning about correctness properties, such as\nsoundness and completeness of EPP. We present a prototype of a library-level CP\nframework based on algebraic effects, implemented in the Agda proof assistant,\nand discuss our ongoing work on leveraging the algebraic-effects-based approach\nto prove the correctness of our library-level CP implementation.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"3gArGltAzsYeZVogdFv0-Dmc0ztK4MfIq4JcuAoOR3I","pdfSize":"138298"}
