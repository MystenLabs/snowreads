{"id":"2408.12125","title":"AutoTest: Evolutionary Code Solution Selection with Test Cases","authors":"Zhihua Duan, Jialin Wang","authorsParsed":[["Duan","Zhihua",""],["Wang","Jialin",""]],"versions":[{"version":"v1","created":"Thu, 22 Aug 2024 04:38:41 GMT"}],"updateDate":"2024-08-23","timestamp":1724301521000,"abstract":"  With the development of code generation techniques, selecting the correct\ncode solution from multiple candidate solutions has become a crucial task. This\nstudy proposes AutoTest, a novel technique that combines automated test case\ngeneration with code solution execution to optimize the selection process using\nan evolutionary genetic algorithm. Firstly, AutoTest utilizes large pre-trained\nlanguage models such as codegen-16B, code-davinci-002, and incoder-6B to\nprovide code solutions and their corresponding test cases. Then, by executing\nthe code solutions and evaluating their performance on the test cases, a\nconsensus set is formed. Fine-grained ranking is achieved through the\nselection, mutation, and crossover mechanisms based on the evolutionary genetic\nalgorithm, with the adjustment of alpha and beta parameters. Finally, the best\ncode solution is chosen. AutoTest demonstrates significant performance\nimprovements on the HumanEval benchmark test. The HumanEval dataset consists of\n164 programming problems, and AutoTest achieves approximately a 10% improvement\nover the baseline method in terms of pass@1 score.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}