{"id":"2408.06084","title":"A Practical System Architecture for Contract Automation: Design and Uses","authors":"Emanuel Palm, Ulf Bodin, Olov Schel\\'en","authorsParsed":[["Palm","Emanuel",""],["Bodin","Ulf",""],["Schel√©n","Olov",""]],"versions":[{"version":"v1","created":"Mon, 12 Aug 2024 12:00:09 GMT"}],"updateDate":"2024-08-13","timestamp":1723464009000,"abstract":"  While the blockchain-based smart contract has become a hot topic of research\nover the last decade, not the least in the context of Industry 4.0, it now has\nwell-known legal and technical shortcomings that currently prohibit its\nreal-world application. These shortcomings come from (1) that a smart contract\nis a computer program, not a document describing legal obligations, and (2)\nthat blockchain-based systems are complicated to use and operate. In this\npaper, we present a refined and extended summary of our work taking key\ntechnologies from the blockchain sphere and applying them to the ricardian\ncontract, which is a traditional contract in digital form with machine-readable\nparameters. By putting the ricardian contract in the context of our contract\nnetwork architecture, we facilitate the infrastructure required for contracts\nto be offered, negotiated, performed, renegotiated and terminated in a\ncompletely digital and automatable fashion. Our architecture circumvents the\nlegal issues of blockchains by facilitating an artifact very much alike a\ntraditional contract, as well as its operational complexity by requiring\nconsensus only between nodes representing directly involved parties. To\ndemonstrate its utility, we also present how it could be used for (1) private\ndata purchasing, (2) treasury management, (3) order-driven manufacturing and\n(4) automated device on-boarding.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://creativecommons.org/licenses/by/4.0/"}