{"id":"2408.06988","title":"Catamorphic Abstractions for Constrained Horn Clause Satisfiability","authors":"Emanuele De Angelis (1), Fabio Fioravanti (2), Alberto Pettorossi (3),\n  Maurizio Proietti (1) ((1) IASI-CNR, Rome, Italy, (2) DEc, University 'G.\n  d'Annunzio', Chieti-Pescara, Italy, (3) DICII, University of Rome 'Tor\n  Vergata', Italy)","authorsParsed":[["De Angelis","Emanuele",""],["Fioravanti","Fabio",""],["Pettorossi","Alberto",""],["Proietti","Maurizio",""]],"versions":[{"version":"v1","created":"Tue, 13 Aug 2024 15:47:10 GMT"}],"updateDate":"2024-08-14","timestamp":1723564030000,"abstract":"  Catamorphisms are functions that are recursively defined on list and trees\nand, in general, on Algebraic Data Types (ADTs), and are often used to compute\nsuitable abstractions of programs that manipulate ADTs. Examples of\ncatamorphisms include functions that compute size of lists, orderedness of\nlists, and height of trees. It is well known that program properties specified\nthrough catamorphisms can be proved by showing the satisfiability of suitable\nsets of Constrained Horn Clauses (CHCs). We address the problem of checking the\nsatisfiability of those sets of CHCs, and we propose a method for transforming\nsets of CHCs into equisatisfiable sets where catamorphisms are no longer\npresent. As a consequence, clauses with catamorphisms can be handled without\nextending the satisfiability algorithms used by existing CHC solvers. Through\nan experimental evaluation on a non-trivial benchmark consisting of many list\nand tree processing algorithms expressed as sets of CHCs, we show that our\ntechnique is indeed effective and significantly enhances the performance of\nstate-of-the-art CHC solvers.\n","subjects":["Computing Research Repository/Logic in Computer Science","Computing Research Repository/Programming Languages"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}