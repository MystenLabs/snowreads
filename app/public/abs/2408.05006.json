{"id":"2408.05006","title":"Enhancing the Code Debugging Ability of LLMs via Communicative Agent\n  Based Data Refinement","authors":"Weiqing Yang, Hanbin Wang, Zhenghao Liu, Xinze Li, Yukun Yan, Shuo\n  Wang, Yu Gu, Minghe Yu, Zhiyuan Liu, Ge Yu","authorsParsed":[["Yang","Weiqing",""],["Wang","Hanbin",""],["Liu","Zhenghao",""],["Li","Xinze",""],["Yan","Yukun",""],["Wang","Shuo",""],["Gu","Yu",""],["Yu","Minghe",""],["Liu","Zhiyuan",""],["Yu","Ge",""]],"versions":[{"version":"v1","created":"Fri, 9 Aug 2024 11:35:44 GMT"}],"updateDate":"2024-08-12","timestamp":1723203344000,"abstract":"  Debugging is a vital aspect of software development, yet the debugging\ncapabilities of Large Language Models (LLMs) remain largely unexplored. This\npaper first introduces DEBUGEVAL, a comprehensive benchmark designed to\nevaluate the debugging capabilities of LLMs. DEBUGEVAL collects data from\nexisting high-quality datasets and designs four different tasks to evaluate the\ndebugging effectiveness, including BUG Localization, BUG Identification, Code\nReview, and Code Repair. Additionally, to enhance the code debugging ability of\nLLMs, this paper proposes a CoMmunicative Agent BaSed DaTa REfinement FRamework\n(MASTER), which generates the refined code debugging data for supervised\nfinetuning. Specifically, MASTER employs the Code Quizzer to generate refined\ndata according to the defined tasks of DEBUGEVAL. Then the Code Learner acts as\na critic and reserves the generated problems that it can not solve. Finally,\nthe Code Teacher provides a detailed Chain-of-Thought based solution to deal\nwith the generated problem. We collect the synthesized data and finetune the\nCode Learner to enhance the debugging ability and conduct the NeuDebugger\nmodel. Our experiments evaluate various LLMs and NeuDebugger in the zero-shot\nsetting on DEBUGEVAL. Experimental results demonstrate that these 7B-scale LLMs\nhave weaker debugging capabilities, even these code-oriented LLMs. On the\ncontrary, these larger models (over 70B) show convincing debugging ability. Our\nfurther analyses illustrate that MASTER is an effective method to enhance the\ncode debugging ability by synthesizing data for Supervised Fine-Tuning (SFT)\nLLMs.\n","subjects":["Computing Research Repository/Software Engineering","Computing Research Repository/Artificial Intelligence"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}