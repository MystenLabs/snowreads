{"id":"2408.11080","title":"ARAP: Demystifying Anti Runtime Analysis Code in Android Apps","authors":"Dewen Suo, Lei Xue, Runze Tan, Weihao Huang, Guozi Sun","authorsParsed":[["Suo","Dewen",""],["Xue","Lei",""],["Tan","Runze",""],["Huang","Weihao",""],["Sun","Guozi",""]],"versions":[{"version":"v1","created":"Tue, 20 Aug 2024 02:50:56 GMT"}],"updateDate":"2024-08-22","timestamp":1724122256000,"abstract":"  With the continuous growth in the usage of Android apps, ensuring their\nsecurity has become critically important. An increasing number of malicious\napps adopt anti-analysis techniques to evade security measures. Although some\nresearch has started to consider anti-runtime analysis (ARA), it is unfortunate\nthat they have not systematically examined ARA techniques. Furthermore, the\nrapid evolution of ARA technology exacerbates the issue, leading to\nincreasingly inaccurate analysis results. To effectively analyze Android apps,\nunderstanding their adopted ARA techniques is necessary. However, no systematic\ninvestigation has been conducted thus far.\n  In this paper, we conduct the first systematic study of the ARA\nimplementations in a wide range of 117,171 Android apps (including both\nmalicious and benign ones) collected between 2016 and 2023. Additionally, we\npropose a specific investigation tool named ARAP to assist this study by\nleveraging both static and dynamic analysis. According to the evaluation\nresults, ARAP not only effectively identifies the ARA implementations in\nAndroid apps but also reveals many important findings. For instance, almost all\napps have implemented at least one category of ARA technology (99.6% for benign\napps and 97.0% for malicious apps).\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}