{"id":"2408.09034","title":"Modernizing SMT-Based Type Error Localization","authors":"Max Kopinsky, Brigitte Pientka, Xujie Si","authorsParsed":[["Kopinsky","Max",""],["Pientka","Brigitte",""],["Si","Xujie",""]],"versions":[{"version":"v1","created":"Fri, 16 Aug 2024 22:05:13 GMT"}],"updateDate":"2024-08-20","timestamp":1723845913000,"abstract":"  Traditional implementations of strongly-typed functional programming\nlanguages often miss the root cause of type errors. As a consequence, type\nerror messages are often misleading and confusing - particularly for students\nlearning such a language. We describe Tyro, a type error localization tool\nwhich determines the optimal source of an error for ill-typed programs\nfollowing fundamental ideas by Pavlinovic et al. : we first translate typing\nconstraints into SMT (Satisfiability Modulo Theories) using an intermediate\nrepresentation which is more readable than the actual SMT encoding; during this\nphase we apply a new encoding for polymorphic types. Second, we translate our\nintermediate representation into an actual SMT encoding and take advantage of\nrecent advancements in off-the-shelf SMT solvers to effectively find optimal\nerror sources for ill-typed programs. Our design maintains the separation of\nheuristic and search also present in prior and similar work. In addition, our\narchitecture design increases modularity, re-usability, and trust in the\noverall architecture using an intermediate representation to facilitate the\nsafe generation of the SMT encoding. We believe this design principle will\napply to many other tools that leverage SMT solvers.\n  Our experimental evaluation reinforces that the SMT approach finds accurate\nerror sources using both expert-labeled programs and an automated method for\nlarger-scale analysis. Compared to prior work, Tyro lays the basis for\nlarge-scale evaluation of error localization techniques, which can be\nintegrated into programming environments and enable us to understand the impact\nof precise error messages for students in practice.\n","subjects":["Computing Research Repository/Programming Languages"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"KgmXVpYoMMwu6wvJLO8VpCZNqnP0svIzO3iSjZ-EuVE","pdfSize":"210183"}
