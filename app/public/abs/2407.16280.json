{"id":"2407.16280","title":"Efficient Detection of Commutative Factors in Factor Graphs","authors":"Malte Luttermann, Johann Machemer, Marcel Gehrke","authorsParsed":[["Luttermann","Malte",""],["Machemer","Johann",""],["Gehrke","Marcel",""]],"versions":[{"version":"v1","created":"Tue, 23 Jul 2024 08:31:24 GMT"}],"updateDate":"2024-07-24","timestamp":1721723484000,"abstract":"  Lifted probabilistic inference exploits symmetries in probabilistic graphical\nmodels to allow for tractable probabilistic inference with respect to domain\nsizes. To exploit symmetries in, e.g., factor graphs, it is crucial to identify\ncommutative factors, i.e., factors having symmetries within themselves due to\ntheir arguments being exchangeable. The current state of the art to check\nwhether a factor is commutative with respect to a subset of its arguments\niterates over all possible subsets of the factor's arguments, i.e., $O(2^n)$\niterations for a factor with $n$ arguments in the worst case. In this paper, we\nefficiently solve the problem of detecting commutative factors in a factor\ngraph. In particular, we introduce the detection of commutative factors (DECOR)\nalgorithm, which allows us to drastically reduce the computational effort for\nchecking whether a factor is commutative in practice. We prove that DECOR\nefficiently identifies restrictions to drastically reduce the number of\nrequired iterations and validate the efficiency of DECOR in our empirical\nevaluation.\n","subjects":["Computing Research Repository/Artificial Intelligence","Computing Research Repository/Data Structures and Algorithms","Computing Research Repository/Machine Learning"],"license":"http://creativecommons.org/licenses/by/4.0/"}