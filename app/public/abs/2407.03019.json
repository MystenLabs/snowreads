{"id":"2407.03019","title":"Identification of Device Dependencies Using Link Prediction","authors":"Luk\\'a\\v{s} Sadlek, Martin Hus\\'ak, Pavel \\v{C}eleda","authorsParsed":[["Sadlek","Lukáš",""],["Husák","Martin",""],["Čeleda","Pavel",""]],"versions":[{"version":"v1","created":"Wed, 3 Jul 2024 11:28:09 GMT"}],"updateDate":"2024-07-04","timestamp":1720006089000,"abstract":"  Devices in computer networks cannot work without essential network services\nprovided by a limited count of devices. Identification of device dependencies\ndetermines whether a pair of IP addresses is a dependency, i.e., the host with\nthe first IP address is dependent on the second one. These dependencies cannot\nbe identified manually in large and dynamically changing networks.\nNevertheless, they are important due to possible unexpected failures,\nperformance issues, and cascading effects. We address the identification of\ndependencies using a new approach based on graph-based machine learning. The\napproach belongs to link prediction based on a latent representation of the\ncomputer network's communication graph. It samples random walks over IP\naddresses that fulfill time conditions imposed on network dependencies. The\nconstrained random walks are used by a neural network to construct IP address\nembedding, which is a space that contains IP addresses that often appear close\ntogether in the same communication chain (i.e., random walk). Dependency\nembedding is constructed by combining values for IP addresses from their\nembedding and used for training the resulting dependency classifier. We\nevaluated the approach using IP flow datasets from a controlled environment and\nuniversity campus network that contain evidence about dependencies. Evaluation\nconcerning the correctness and relationship to other approaches shows that the\napproach achieves acceptable performance. It can simultaneously consider all\ntypes of dependencies and is applicable for batch processing in operational\nconditions.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}