{"id":"2407.11556","title":"LITS: An Optimized Learned Index for Strings (An Extended Version)","authors":"Yifan Yang, Shimin Chen","authorsParsed":[["Yang","Yifan",""],["Chen","Shimin",""]],"versions":[{"version":"v1","created":"Tue, 16 Jul 2024 10:03:31 GMT"}],"updateDate":"2024-07-17","timestamp":1721124211000,"abstract":"  Index is an important component in database systems. Learned indexes have\nbeen shown to outperform traditional tree-based index structures for\nfixed-sized integer or floating point keys. However, the application of the\nlearned solution to variable-length string keys is under-researched. Our\nexperiments show that existing learned indexes for strings fail to outperform\ntraditional string indexes, such as HOT and ART. String keys are long and\nvariable sized, and often contain skewed prefixes, which make the last-mile\nsearch expensive, and adversely impact the capability of learned models to\ncapture the skewed distribution of string keys.\n  In this paper, we propose a novel learned index for string keys, LITS\n(Learned Index with Hash-enhanced Prefix Table and Sub-tries). We propose an\noptimized learned model, combining a global Hash-enhanced Prefix Table (HPT)\nand a per-node local linear model to better distinguish string keys. Moreover,\nLITS exploits compact leaf nodes and hybrid structures with a PMSS model for\nefficient point and range operations.\n  Our experimental results using eleven string data sets show that LITS\nachieves up to 2.43x and 2.27x improvement over HOT and ART for point\noperations, and attains comparable scan performance.\n","subjects":["Computing Research Repository/Databases"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"NrAUwYTyc9S1cIqr6BaOtBd9uTV9H03JErCScUGDYl4","pdfSize":"1656108"}
