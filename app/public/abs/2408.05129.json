{"id":"2408.05129","title":"Unboxing Default Argument Breaking Changes in 1 + 2 Data Science\n  Libraries","authors":"Jo\\~ao Eduardo Montandon, Luciana Lourdes Silva, Cristiano Politowski,\n  Daniel Prates, Arthur de Brito Bonif\\'acio, Ghizlane El Boussaidi","authorsParsed":[["Montandon","João Eduardo",""],["Silva","Luciana Lourdes",""],["Politowski","Cristiano",""],["Prates","Daniel",""],["Bonifácio","Arthur de Brito",""],["Boussaidi","Ghizlane El",""]],"versions":[{"version":"v1","created":"Fri, 9 Aug 2024 15:38:45 GMT"}],"updateDate":"2024-08-12","timestamp":1723217925000,"abstract":"  Data Science (DS) has become a cornerstone for modern software, enabling\ndata-driven decisions to improve companies services. Following modern software\ndevelopment practices, data scientists use third-party libraries to support\ntheir tasks. As the APIs provided by these tools often require an extensive\nlist of arguments to be set up, data scientists rely on default values to\nsimplify their usage. It turns out that these default values can change over\ntime, leading to a specific type of breaking change, defined as Default\nArgument Breaking Change (DABC). This work reveals 93 DABCs in three Python\nlibraries frequently used in Data Science tasks -- Scikit Learn, NumPy, and\nPandas -- studying their potential impact on more than 500K client\napplications. We find out that the occurrence of DABCs varies significantly\ndepending on the library; 35% of Scikit Learn clients are affected, while only\n0.13% of NumPy clients are impacted. The main reason for introducing DABCs is\nto enhance API maintainability, but they often change the function's behavior.\nWe discuss the importance of managing DABCs in third-party DS libraries and\nprovide insights for developers to mitigate the potential impact of these\nchanges in their applications.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}