{"id":"2408.03840","title":"On Fast SC-based Polar Decoders: Metric Polarization and a Pruning\n  Technique","authors":"Mohsen Moradi and Hessam Mahdavifar","authorsParsed":[["Moradi","Mohsen",""],["Mahdavifar","Hessam",""]],"versions":[{"version":"v1","created":"Wed, 7 Aug 2024 15:25:50 GMT"}],"updateDate":"2024-08-08","timestamp":1723044350000,"abstract":"  Short- to medium-block-length polar-like and polarization-adjusted\nconvolutional (PAC) codes have demonstrated exceptional error-correction\nperformance through sequential decoding. Successive cancellation list (SCL)\ndecoding of polar-like and PAC codes can potentially match the performance of\nsequential decoding though a relatively large list size is often required. By\nbenefiting from an optimal metric function, sequential decoding can find the\ncorrect path corresponding to the transmitted data by following almost one path\non average at high Eb/N0 regimes. When considering a large number of paths in\nSCL decoding, a main bottleneck emerges that is the need for a rather expensive\nsorting operation at each level of decoding of data bits. In this paper, we\npropose a method to obtain the optimal metric function for each depth of the\npolarization tree through a process that we call polarization of the metric\nfunction. One of the major advantages of the proposed metric function is that\nit can be utilized in fast SC-based (FSC) and SCL-based (FSCL) decoders, i.e.,\ndecoders that opt to skip the so-called rate-1 and rate-0 nodes in the binary\ntree representation for significantly more efficient implementation.\nFurthermore, based on the average value of the polarized metric function of\nFSC-based decoders, we introduce a pruning technique that keeps only the paths\nwhose metric values are close to the average value. As a result, our proposed\ntechnique significantly reduces the number of required sorting operations for\nFSCL-based decoding algorithms. For instance, for a high-rate PAC(128,99) code,\nSCL decoding with a list size of 32 achieves error-correction performance\ncomparable to the Fano algorithm. Our method reduces the number of sorting\noperations of FSCL decoding to 33%, further decreasing latency.\n","subjects":["Computing Research Repository/Information Theory","Mathematics/Information Theory"],"license":"http://creativecommons.org/licenses/by-nc-nd/4.0/"}