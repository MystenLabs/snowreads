{"id":"2407.15967","title":"Versioned Analysis of Software Quality Indicators and Self-admitted\n  Technical Debt in Ethereum Smart Contracts with Ethstractor","authors":"Khalid Hassan, Saeed Moradi, Shaiful Chowdhury, Sara Rouhani","authorsParsed":[["Hassan","Khalid",""],["Moradi","Saeed",""],["Chowdhury","Shaiful",""],["Rouhani","Sara",""]],"versions":[{"version":"v1","created":"Mon, 22 Jul 2024 18:27:29 GMT"}],"updateDate":"2024-07-24","timestamp":1721672849000,"abstract":"  The rise of decentralized applications (dApps) has made smart contracts\nimperative components of blockchain technology. As many smart contracts process\nfinancial transactions, their security is paramount. Moreover, the immutability\nof blockchains makes vulnerabilities in smart contracts particularly\nchallenging because it requires deploying a new version of the contract at a\ndifferent address, incurring substantial fees paid in Ether. This paper\nproposes Ethstractor, the first smart contract collection tool for gathering a\ndataset of versioned smart contracts. The collected dataset is then used to\nevaluate the reliability of code metrics as indicators of vulnerabilities in\nsmart contracts. Our findings indicate that code metrics are ineffective in\nsignalling the presence of vulnerabilities. Furthermore, we investigate whether\nvulnerabilities in newer versions of smart contracts are mitigated and identify\nthat the number of vulnerabilities remains consistent over time. Finally, we\nexamine the removal of self-admitted technical debt in contracts and uncover\nthat most of the introduced debt has never been subsequently removed.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing","Computing Research Repository/Cryptography and Security","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}