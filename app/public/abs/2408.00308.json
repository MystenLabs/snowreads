{"id":"2408.00308","title":"Online Computation of String Net Frequency","authors":"Peaker Guo, Seeun William Umboh, Anthony Wirth, Justin Zobel","authorsParsed":[["Guo","Peaker",""],["Umboh","Seeun William",""],["Wirth","Anthony",""],["Zobel","Justin",""]],"versions":[{"version":"v1","created":"Thu, 1 Aug 2024 06:06:47 GMT"}],"updateDate":"2024-08-02","timestamp":1722492407000,"abstract":"  The net frequency (NF) of a string, of length $m$, in a text, of length $n$,\nis the number of occurrences of the string in the text with unique left and\nright extensions. Recently, Guo et al. [CPM 2024] showed that NF is\ncombinatorially interesting and how two key questions can be computed\nefficiently in the offline setting. First, SINGLE-NF: reporting the NF of a\nquery string in an input text. Second, ALL-NF: reporting an occurrence and the\nNF of each string of positive NF in an input text. For many applications,\nhowever, facilitating these computations in an online manner is highly\ndesirable. We are the first to solve the above two problems in the online\nsetting, and we do so in optimal time, assuming, as is common, a constant-size\nalphabet: SINGLE-NF in $O(m)$ time and ALL-NF in $O(n)$ time. Our results are\nachieved by first designing new and simpler offline algorithms using suffix\ntrees, proving additional properties of NF, and exploiting Ukkonen's online\nsuffix tree construction algorithm and results on implicit node maintenance in\nan implicit suffix tree by Breslauer and Italiano.\n","subjects":["Computing Research Repository/Data Structures and Algorithms"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}