{"id":"2408.07980","title":"Efficiently grounding FOL using bit vectors","authors":"Lucas Van Laer, Simon Vandevelde, Joost Vennekens","authorsParsed":[["Van Laer","Lucas",""],["Vandevelde","Simon",""],["Vennekens","Joost",""]],"versions":[{"version":"v1","created":"Thu, 15 Aug 2024 06:56:08 GMT"}],"updateDate":"2024-08-16","timestamp":1723704968000,"abstract":"  Several paradigms for declarative problem solving start from a specification\nin a high-level language, which is then transformed to a low-level language,\nsuch as SAT or SMT. Often, this transformation includes a \"grounding\" step to\nremove first-order quantification. To reduce the time and size of the\ngrounding, it can be useful to simplify formulas along the way, e.g., by\nalready taking into account the interpretation of symbols that are already\nknown. In this paper, we investigate the use of bit vectors to efficiently\nsimplify formulas, thereby taking advantage of the fact that, on modern\nhardware, logical operations on bit vectors can be executed extremely fast. We\nconduct an experimental analysis, which shows that bit vectors are indeed fast\nfor certain problems, but also have limitations.\n","subjects":["Computing Research Repository/Logic in Computer Science"],"license":"http://creativecommons.org/licenses/by/4.0/"}