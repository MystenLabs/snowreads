{"id":"2407.08924","title":"Disassembling Obfuscated Executables with LLM","authors":"Huanyao Rong, Yue Duan, Hang Zhang, XiaoFeng Wang, Hongbo Chen,\n  Shengchen Duan, Shen Wang","authorsParsed":[["Rong","Huanyao",""],["Duan","Yue",""],["Zhang","Hang",""],["Wang","XiaoFeng",""],["Chen","Hongbo",""],["Duan","Shengchen",""],["Wang","Shen",""]],"versions":[{"version":"v1","created":"Fri, 12 Jul 2024 02:10:07 GMT"}],"updateDate":"2024-07-15","timestamp":1720750207000,"abstract":"  Disassembly is a challenging task, particularly for obfuscated executables\ncontaining junk bytes, which is designed to induce disassembly errors. Existing\nsolutions rely on heuristics or leverage machine learning techniques, but only\nachieve limited successes. Fundamentally, such obfuscation cannot be defeated\nwithout in-depth understanding of the binary executable's semantics, which is\nmade possible by the emergence of large language models (LLMs). In this paper,\nwe present DisasLLM, a novel LLM-driven dissembler to overcome the challenge in\nanalyzing obfuscated executables. DisasLLM consists of two components: an\nLLM-based classifier that determines whether an instruction in an assembly code\nsnippet is correctly decoded, and a disassembly strategy that leverages this\nmodel to disassemble obfuscated executables end-to-end. We evaluated DisasLLM\non a set of heavily obfuscated executables, which is shown to significantly\noutperform other state-of-the-art disassembly solutions.\n","subjects":["Computing Research Repository/Cryptography and Security"],"license":"http://creativecommons.org/licenses/by/4.0/","blobId":"V499LAj0oUuxQw7FJt42LXD-Hi59v28sT5Cl0vG2pN0","pdfSize":"382318"}
