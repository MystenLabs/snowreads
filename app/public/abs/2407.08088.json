{"id":"2407.08088","title":"Finite-State Automaton To/From Regular Expression Visualization","authors":"Marco T. Moraz\\'an (Seton Hall University), Tijana Mini\\'c (Seton Hall\n  University)","authorsParsed":[["Morazán","Marco T.","","Seton Hall University"],["Minić","Tijana","","Seton Hall\n  University"]],"versions":[{"version":"v1","created":"Wed, 10 Jul 2024 23:24:42 GMT"}],"updateDate":"2024-07-12","timestamp":1720653882000,"abstract":"  Most Formal Languages and Automata Theory courses explore the duality between\ncomputation models to recognize words in a language and computation models to\ngenerate words in a language. For students unaccustomed to formal statements,\nthese transformations are rarely intuitive. To assist students with such\ntransformations, visualization tools can play a pivotal role. This article\npresents visualization tools developed for FSM -- a domain-specific language\nfor the Automata Theory classroom -- to transform a finite state automaton to a\nregular expression and vice versa. Using these tools, the user may provide an\narbitrary finite-state machine or an arbitrary regular expression and step\nforward and step backwards through a transformation. At each step, the\nvisualization describes the step taken. The tools are outlined, their\nimplementation is described, and they are compared with related work. In\naddition, empirical data collected from a control group is presented. The\nempirical data suggests that the tools are well-received, effective, and\nlearning how to use them has a low extraneous cognitive load.\n","subjects":["Computing Research Repository/Formal Languages and Automata Theory","Computing Research Repository/Graphics","Computing Research Repository/Human-Computer Interaction","Computing Research Repository/Programming Languages"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}