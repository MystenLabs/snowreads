{"id":"2407.04971","title":"Counting Permutation Patterns with Multidimensional Trees","authors":"Gal Beniamini, Nir Lavee","authorsParsed":[["Beniamini","Gal",""],["Lavee","Nir",""]],"versions":[{"version":"v1","created":"Sat, 6 Jul 2024 06:23:11 GMT"}],"updateDate":"2024-07-09","timestamp":1720246991000,"abstract":"  We consider the well-studied pattern counting problem: given a permutation\n$\\pi \\in \\mathbb{S}_n$ and an integer $k > 1$, count the number of\norder-isomorphic occurrences of every pattern $\\tau \\in \\mathbb{S}_k$ in $\\pi$.\n  Our first result is an $\\widetilde{\\mathcal{O}}(n^2)$-time algorithm for\n$k=6$ and $k=7$. The proof relies heavily on a new family of graphs that we\nintroduce, called pattern-trees. Every such tree corresponds to an integer\nlinear combination of permutations in $\\mathbb{S}_k$, and is associated with\nlinear extensions of partially ordered sets. We design an evaluation algorithm\nfor these combinations, and apply it to a family of linearly-independent trees.\nFor $k=8$, we show a barrier: the subspace spanned by trees in the previous\nfamily has dimension exactly $|\\mathbb{S}_8| - 1$, one less than required.\n  Our second result is an $\\widetilde{\\mathcal{O}}(n^{7/4})$-time algorithm for\n$k=5$. This algorithm extends the framework of pattern-trees by speeding-up\ntheir evaluation in certain cases. A key component of the proof is the\nintroduction of pair-rectangle-trees, a data structure for dominance counting.\n","subjects":["Computing Research Repository/Data Structures and Algorithms","Mathematics/Combinatorics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}