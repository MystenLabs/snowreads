{"id":"2407.19487","title":"RLCoder: Reinforcement Learning for Repository-Level Code Completion","authors":"Yanlin Wang, Yanli Wang, Daya Guo, Jiachi Chen, Ruikai Zhang, Yuchi\n  Ma, Zibin Zheng","authorsParsed":[["Wang","Yanlin",""],["Wang","Yanli",""],["Guo","Daya",""],["Chen","Jiachi",""],["Zhang","Ruikai",""],["Ma","Yuchi",""],["Zheng","Zibin",""]],"versions":[{"version":"v1","created":"Sun, 28 Jul 2024 12:47:20 GMT"}],"updateDate":"2024-07-31","timestamp":1722170840000,"abstract":"  Repository-level code completion aims to generate code for unfinished code\nsnippets within the context of a specified repository. Existing approaches\nmainly rely on retrieval-augmented generation strategies due to limitations in\ninput sequence length. However, traditional lexical-based retrieval methods\nlike BM25 struggle to capture code semantics, while model-based retrieval\nmethods face challenges due to the lack of labeled data for training.\nTherefore, we propose RLCoder, a novel reinforcement learning framework, which\ncan enable the retriever to learn to retrieve useful content for code\ncompletion without the need for labeled data. Specifically, we iteratively\nevaluate the usefulness of retrieved content based on the perplexity of the\ntarget code when provided with the retrieved content as additional context, and\nprovide feedback to update the retriever parameters. This iterative process\nenables the retriever to learn from its successes and failures, gradually\nimproving its ability to retrieve relevant and high-quality content.\nConsidering that not all situations require information beyond code files and\nnot all retrieved context is helpful for generation, we also introduce a stop\nsignal mechanism, allowing the retriever to decide when to retrieve and which\ncandidates to retain autonomously. Extensive experimental results demonstrate\nthat RLCoder consistently outperforms state-of-the-art methods on CrossCodeEval\nand RepoEval, achieving 12.2% EM improvement over previous methods. Moreover,\nexperiments show that our framework can generalize across different programming\nlanguages and further improve previous methods like RepoCoder. We provide the\ncode and data at https://github.com/DeepSoftwareAnalytics/RLCoder.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}