{"id":"2408.08619","title":"PatUntrack: Automated Generating Patch Examples for Issue Reports\n  without Tracked Insecure Code","authors":"Ziyou Jiang, Lin Shi, Guowei Yang, Qing Wang","authorsParsed":[["Jiang","Ziyou",""],["Shi","Lin",""],["Yang","Guowei",""],["Wang","Qing",""]],"versions":[{"version":"v1","created":"Fri, 16 Aug 2024 09:19:27 GMT"}],"updateDate":"2024-08-19","timestamp":1723799967000,"abstract":"  Security patches are essential for enhancing the stability and robustness of\nprojects in the software community. While vulnerabilities are officially\nexpected to be patched before being disclosed, patching vulnerabilities is\ncomplicated and remains a struggle for many organizations. To patch\nvulnerabilities, security practitioners typically track vulnerable issue\nreports (IRs), and analyze their relevant insecure code to generate potential\npatches. However, the relevant insecure code may not be explicitly specified\nand practitioners cannot track the insecure code in the repositories, thus\nlimiting their ability to generate patches. In such cases, providing examples\nof insecure code and the corresponding patches would benefit the security\ndevelopers to better locate and fix the insecure code. In this paper, we\npropose PatUntrack to automatically generating patch examples from IRs without\ntracked insecure code. It auto-prompts Large Language Models (LLMs) to make\nthem applicable to analyze the vulnerabilities. It first generates the\ncompleted description of the Vulnerability-Triggering Path (VTP) from\nvulnerable IRs. Then, it corrects hallucinations in the VTP description with\nexternal golden knowledge. Finally, it generates Top-K pairs of Insecure Code\nand Patch Example based on the corrected VTP description. To evaluate the\nperformance, we conducted experiments on 5,465 vulnerable IRs. The experimental\nresults show that PatUntrack can obtain the highest performance and improve the\ntraditional LLM baselines by +14.6% (Fix@10) on average in patch example\ngeneration. Furthermore, PatUntrack was applied to generate patch examples for\n76 newly disclosed vulnerable IRs. 27 out of 37 replies from the authors of\nthese IRs confirmed the usefulness of the patch examples generated by\nPatUntrack, indicating that they can benefit from these examples for patching\nthe vulnerabilities.\n","subjects":["Computing Research Repository/Cryptography and Security","Computing Research Repository/Artificial Intelligence","Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}