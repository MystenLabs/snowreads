{"id":"2408.04735","title":"Deep Dive into Probabilistic Delta Debugging: Insights and\n  Simplifications","authors":"Mengxiao Zhang, Zhenyang Xu, Yongqiang Tian, Xinru Cheng, Chengnian\n  Sun","authorsParsed":[["Zhang","Mengxiao",""],["Xu","Zhenyang",""],["Tian","Yongqiang",""],["Cheng","Xinru",""],["Sun","Chengnian",""]],"versions":[{"version":"v1","created":"Thu, 8 Aug 2024 19:30:03 GMT"}],"updateDate":"2024-08-12","timestamp":1723145403000,"abstract":"  Given a list L of elements and a property that L exhibits, ddmin is a\nwell-known test input minimization algorithm designed to automatically\neliminate irrelevant elements from L. This algorithm is extensively adopted in\ntest input minimization and software debloating. Recently, ProbDD, an advanced\nvariant of ddmin, has been proposed and achieved state-of-the-art performance.\nEmploying Bayesian optimization, ProbDD predicts the likelihood of each element\nin L being essential, and statistically decides which elements and how many\nshould be removed each time. Despite its impressive results, the theoretical\nprobabilistic model of ProbDD is complex, and the specific factors driving its\nsuperior performance have not been investigated.\n  In this paper, we conduct the first in-depth theoretical analysis of ProbDD,\nclarifying trends in probability and subset size changes while simplifying the\nprobability model. Complementing this analysis, we perform empirical\nexperiments, including success rate analysis, ablation studies, and analysis on\ntrade-offs and limitations, to better understand and demystify this\nstate-of-the-art algorithm. Our success rate analysis shows how ProbDD\naddresses bottlenecks of ddmin by skipping inefficient queries that attempt to\ndelete complements of subsets and previously tried subsets. The ablation study\nreveals that randomness in ProbDD has no significant impact on efficiency.\n  Based on these findings, we propose CDD, a simplified version of ProbDD,\nreducing complexity in both theory and implementation. Besides, the performance\nof CDD validates our key findings. Comprehensive evaluations across 76\nbenchmarks in test input minimization and software debloating show that CDD can\nachieve the same performance as ProbDD despite its simplification. These\ninsights provide valuable guidance for future research and applications of test\ninput minimization algorithms.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}