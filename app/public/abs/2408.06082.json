{"id":"2408.06082","title":"AutoCheck: Automatically Identifying Variables for Checkpointing by Data\n  Dependency Analysis","authors":"Xiang Fu (Nanchang Hangkong University), Weiping Zhang (Nanchang\n  Hangkong University), Xin Huang (Nanchang Hangkong University), Shiman Meng\n  (Nanchang Hangkong University), Wubiao Xu (Nanchang Hangkong University),\n  Luanzheng Guo (Pacific Northwest National Laboratory), Kento Sato (R-CCS,\n  RIKEN)","authorsParsed":[["Fu","Xiang","","Nanchang Hangkong University"],["Zhang","Weiping","","Nanchang\n  Hangkong University"],["Huang","Xin","","Nanchang Hangkong University"],["Meng","Shiman","","Nanchang Hangkong University"],["Xu","Wubiao","","Nanchang Hangkong University"],["Guo","Luanzheng","","Pacific Northwest National Laboratory"],["Sato","Kento","","R-CCS,\n  RIKEN"]],"versions":[{"version":"v1","created":"Mon, 12 Aug 2024 11:57:30 GMT"},{"version":"v2","created":"Thu, 15 Aug 2024 05:45:46 GMT"}],"updateDate":"2024-08-16","timestamp":1723463850000,"abstract":"  Checkpoint/Restart (C/R) has been widely deployed in numerous HPC systems,\nClouds, and industrial data centers, which are typically operated by system\nengineers. Nevertheless, there is no existing approach that helps system\nengineers without domain expertise, and domain scientists without system fault\ntolerance knowledge identify those critical variables accounted for correct\napplication execution restoration in a failure for C/R. To address this\nproblem, we propose an analytical model and a tool (AutoCheck) that can\nautomatically identify critical variables to checkpoint for C/R. AutoCheck\nrelies on first, analytically tracking and optimizing data dependency between\nvariables and other application execution state, and second, a set of\nheuristics that identify critical variables for checkpointing from the refined\ndata dependency graph (DDG). AutoCheck allows programmers to pinpoint critical\nvariables to checkpoint quickly within a few minutes. We evaluate AutoCheck on\n14 representative HPC benchmarks, demonstrating that AutoCheck can efficiently\nidentify correct critical variables to checkpoint.\n","subjects":["Computing Research Repository/Software Engineering"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}