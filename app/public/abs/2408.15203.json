{"id":"2408.15203","title":"On the Encoding Process in Decentralized Systems","authors":"Canran Wang and Netanel Raviv","authorsParsed":[["Wang","Canran",""],["Raviv","Netanel",""]],"versions":[{"version":"v1","created":"Tue, 27 Aug 2024 17:03:10 GMT"}],"updateDate":"2024-08-28","timestamp":1724778190000,"abstract":"  We consider the problem of encoding information in a system of N=K+R\nprocessors that operate in a decentralized manner, i.e., without a central\nprocessor which orchestrates the operation. The system involves K source\nprocessors, each holding some data modeled as a vector over a finite field. The\nremaining R processors are sinks, and each of which requires a linear\ncombination of all data vectors. These linear combinations are distinct from\none sink processor to another, and are specified by a generator matrix of a\nsystematic linear error correcting code. To capture the communication cost of\ndecentralized encoding, we adopt a linear network model in which the process\nproceeds in consecutive communication rounds. In every round, every processor\nsends and receives one message through each one of its p ports. Moreover,\ninspired by linear network coding literature, we allow processors to transfer\nlinear combinations of their own data and previously received data. We propose\na framework that addresses the decentralized encoding problem on two levels. On\nthe universal level, we provide a solution to the decentralized encoding\nproblem for any possible linear code. On the specific level, we further\noptimize our solution towards systematic Reed-Solomon codes, as well as their\nvariant, Lagrange codes, for their prevalent use in coded storage and\ncomputation systems. Our solutions are based on a newly-defined collective\ncommunication operation we call all-to-all encode.\n","subjects":["Computing Research Repository/Distributed, Parallel, and Cluster Computing","Computing Research Repository/Information Theory","Mathematics/Information Theory"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}