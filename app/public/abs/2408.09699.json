{"id":"2408.09699","title":"Double-Precision Floating-Point Data Visualizations Using Vulkan API","authors":"Nezihe Sozen","authorsParsed":[["Sozen","Nezihe",""]],"versions":[{"version":"v1","created":"Mon, 19 Aug 2024 04:47:05 GMT"}],"updateDate":"2024-08-20","timestamp":1724042825000,"abstract":"  Proper representation of data in graphical visualizations becomes challenging\nwhen high accuracy in data types is required, especially in those situations\nwhere the difference between double-precision floating-point and\nsingle-precision floating-point values makes a significant difference. Some of\nthe limitations of using single-precision over double-precision include lesser\naccuracy, which accumulates errors over time, and poor modeling of large or\nsmall numbers. In such scenarios, emulated double precision is often used as a\nsolution. The proposed methodology uses a modern GPU pipeline and graphics\nlibrary API specifications to use native double precision. In this research,\nthe approach is implemented using the Vulkan API, C++, and GLSL. Experimental\nevaluation with a series of experiments on 2D and 3D point datasets is proposed\nto indicate the effectiveness of the approach. This evaluates performance\ncomparisons between native double-precision implementations against their\nemulated double-precision approaches with respect to rendering performance and\naccuracy. This study provides insight into the benefits of using native\ndouble-precision in graphical applications, denoting limitations and problems\nwith emulated double-precision usages. These results improve the general\nunderstanding of the precision involved in graphical visualizations and assist\ndevelopers in making decisions about which precision methods to use during\ntheir applications.\n","subjects":["Computing Research Repository/Graphics"],"license":"http://arxiv.org/licenses/nonexclusive-distrib/1.0/"}